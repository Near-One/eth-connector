diff --git a/node_modules/rainbow-bridge/.gitignore b/node_modules/rainbow-bridge/.gitignore
deleted file mode 100644
index d1d2fe8..0000000
--- a/node_modules/rainbow-bridge/.gitignore
+++ /dev/null
@@ -1,11 +0,0 @@
-node_modules
-artifacts
-cache
-coverage
-coverage.json
-testdata
-target
-
-eth2near/ethashproof/cmd/epoch/epoch
-eth2near/ethashproof/cmd/relayer/relayer
-eth2near/ethashproof/cmd/cache/cache
diff --git a/node_modules/rainbow-bridge/.prettierignore b/node_modules/rainbow-bridge/.prettierignore
deleted file mode 100644
index 7614854..0000000
--- a/node_modules/rainbow-bridge/.prettierignore
+++ /dev/null
@@ -1 +0,0 @@
-*.full.sol
diff --git a/node_modules/rainbow-bridge/CHANGELOG.md b/node_modules/rainbow-bridge/CHANGELOG.md
deleted file mode 100644
index d726529..0000000
--- a/node_modules/rainbow-bridge/CHANGELOG.md
+++ /dev/null
@@ -1,9 +0,0 @@
-# Next release
-- near2eth-relay prints more informative logs
-
-# 3.0.0
-- Use rainbow-bridge-lib 3.0.0 and rainbow-bridge-sol 2.0.0. This uses upgraded NearOnEthClient which accepts additional construction argument `replaceDuration_` that allows relay to submit header on top of header that has not passed challenge period yet.
-
-# 2.0.0
-
-- Use rainbow-bridge-lib 2.0.0, use near-token-connector and generic near-token-factory
diff --git a/node_modules/rainbow-bridge/CODE_OF_CONDUCT.md b/node_modules/rainbow-bridge/CODE_OF_CONDUCT.md
deleted file mode 100644
index 9a6c500..0000000
--- a/node_modules/rainbow-bridge/CODE_OF_CONDUCT.md
+++ /dev/null
@@ -1,76 +0,0 @@
-# Contributor Covenant Code of Conduct
-
-## Our Pledge
-
-In the interest of fostering an open and welcoming environment, we as
-contributors and maintainers pledge to making participation in our project and
-our community a harassment-free experience for everyone, regardless of age, body
-size, disability, ethnicity, sex characteristics, gender identity and expression,
-level of experience, education, socio-economic status, nationality, personal
-appearance, race, religion, or sexual identity and orientation.
-
-## Our Standards
-
-Examples of behavior that contributes to creating a positive environment
-include:
-
-* Using welcoming and inclusive language
-* Being respectful of differing viewpoints and experiences
-* Gracefully accepting constructive criticism
-* Focusing on what is best for the community
-* Showing empathy towards other community members
-
-Examples of unacceptable behavior by participants include:
-
-* The use of sexualized language or imagery and unwelcome sexual attention or
- advances
-* Trolling, insulting/derogatory comments, and personal or political attacks
-* Public or private harassment
-* Publishing others' private information, such as a physical or electronic
- address, without explicit permission
-* Other conduct which could reasonably be considered inappropriate in a
- professional setting
-
-## Our Responsibilities
-
-Project maintainers are responsible for clarifying the standards of acceptable
-behavior and are expected to take appropriate and fair corrective action in
-response to any instances of unacceptable behavior.
-
-Project maintainers have the right and responsibility to remove, edit, or
-reject comments, commits, code, wiki edits, issues, and other contributions
-that are not aligned to this Code of Conduct, or to ban temporarily or
-permanently any contributor for other behaviors that they deem inappropriate,
-threatening, offensive, or harmful.
-
-## Scope
-
-This Code of Conduct applies both within project spaces and in public spaces
-when an individual is representing the project or its community. Examples of
-representing a project or community include using an official project e-mail
-address, posting via an official social media account, or acting as an appointed
-representative at an online or offline event. Representation of a project may be
-further defined and clarified by project maintainers.
-
-## Enforcement
-
-Instances of abusive, harassing, or otherwise unacceptable behavior may be
-reported by contacting the project team at social@nearprotocol.com. All
-complaints will be reviewed and investigated and will result in a response that
-is deemed necessary and appropriate to the circumstances. The project team is
-obligated to maintain confidentiality with regard to the reporter of an incident.
-Further details of specific enforcement policies may be posted separately.
-
-Project maintainers who do not follow or enforce the Code of Conduct in good
-faith may face temporary or permanent repercussions as determined by other
-members of the project's leadership.
-
-## Attribution
-
-This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,
-available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html
-
-[homepage]: https://www.contributor-covenant.org
-
-For answers to common questions about this code of conduct, see
-https://www.contributor-covenant.org/faq
diff --git a/node_modules/rainbow-bridge/CONTRIBUTING.md b/node_modules/rainbow-bridge/CONTRIBUTING.md
deleted file mode 100644
index fcbb150..0000000
--- a/node_modules/rainbow-bridge/CONTRIBUTING.md
+++ /dev/null
@@ -1 +0,0 @@
-Using workspaces: https://classic.yarnpkg.com/en/docs/workspaces/
diff --git a/node_modules/rainbow-bridge/MIGRATION.md b/node_modules/rainbow-bridge/MIGRATION.md
deleted file mode 100644
index 370bcad..0000000
--- a/node_modules/rainbow-bridge/MIGRATION.md
+++ /dev/null
@@ -1,74 +0,0 @@
-# Migration Instructions
-
-## From 1.x to 2.0.0
-
-2.0.0 introduce three incompatible change in Ethereum and NEAR contracts: bridge-token-factory, generic token locker and TToken.
-
-### Migration Instruction for your code
-
-#### Token Factory on NEAR
-
-Token factory is a new concept introduced in rainbow bridge lib/cli 2.0. It follows ERC721 that allow you to create multiple ERC20 tokens on NEAR. Back in 1.x, there was only one ERC token implemented as [mintable-fungible-token](https://github.com/near/rainbow-bridge-rs/tree/master/mintable-fungible-token) and only need initialize that. In 2.0, you need to first initalize the token factory contract
-
-https://github.com/near/rainbow-bridge-lib/blob/master/init/near-token-factory.js#L74
-
-And then deploy a erc20 token in factory:
-
-https://github.com/near/rainbow-bridge-lib/blob/master/transfer-eth-erc20/deploy-token.js#L76
-
-After that deployed erc20 token is very similar to 1.x mintable-fungible-token, you can deposit (renamed from mint, usage is same) or withdraw (renamed from burn, usage is same) it.
-
-#### Token Locker on Ethereum
-
-Token locker soldity contract has changed from:
-
-```
-constructor(IERC20 ethToken, bytes memory nearToken, INearProver prover) public;
-function lockToken(uint256 amount, string memory accountId) public;
-function unlockToken(bytes memory proofData, uint64 proofBlockHeight) public;
-```
-
-to:
-
-```
-constructor(bytes memory nearTokenFactory, INearProver prover) public;
-function lockToken(IERC20 token, uint256 amount, string memory accountId) public;
-function unlockToken(bytes memory proofData, uint64 proofBlockHeader) public;
-```
-
-You will need to call updated method. Basically, token locker in rainbow bridge lib/cli 1.x can only lock one kind of token,
-specified when initialized the locker. Locker in rainbow bridge 2.0 (provided by [rainbow-token-connector](https://github.com/near/rainbow-token-connector)) can lock and unlock any erc20 token created in `nearTokenFactory`. Therefore when locking, which token to lock is required parameter.
-
-#### TToken on Ethereum
-
-[MyERC20.sol](https://github.com/near/rainbow-bridge-sol/blob/a3968cee82f2923aee9fbe2387b7045993eafc0f/token-locker/contracts/MyERC20.sol) in rainbow bridge 1.0 has been replaced with [TToken.sol](https://github.com/near/rainbow-token-connector/blob/master/erc20-connector/contracts/test/TToken.sol). This is a compatible change.
-
-### Migration Instruction to Use NEAR Deployed Contracts and Bridge Services
-
-You only need to update the config file to use new contract addresses, see [Using Bridge on Testnet](README.md#using-bridge-on-testnet) and look for `rainbow-bridge-cli 2.x`
-
-### Migration Instruction for Deployment
-
-If you are deploying your own bridge, eth2near relayer, near2eth relayer, eth ed25519, eth client, eth prover, near client and near prover can be reused. you need to remove these lines from your `~/.rainbow/config.json`:
-
-```
-    "ethErc20Address": "...",
-    "ethLockerAddress": "...",
-    "nearFunTokenAccount": "..."
-```
-
-And add this line:
-
-```
-	"nearTokenFactoryAccount": "fill a non exist near account in your namespace, going to be created as your token factory account",
-```
-
-Then redeploy these contracts:
-
-```
-rainbow init-eth-erc20 # use TToken
-rainbow init-eth-locker # use new generic locker
-rainbow init-near-token-factory # use token factory
-```
-
-You should be able to use bridge again with same transfer from near and to near command as before!
diff --git a/node_modules/rainbow-bridge/README.md b/node_modules/rainbow-bridge/README.md
deleted file mode 100644
index cbebf9b..0000000
--- a/node_modules/rainbow-bridge/README.md
+++ /dev/null
@@ -1,389 +0,0 @@
-<div align="center">
-
-  <h1><code>Rainbow Bridge CLI</code></h1>
-
-  <p>
-    <strong>OPS tool to Rainbow Bridge, an Ethereum to Near trustless, fully decentralized, bidirectional bridge</strong>
-  </p>
-
-  <p>
-    <a href="https://buildkite.com/nearprotocol/rainbow-bridge-cli"><img src=" https://badge.buildkite.com/93478642b0ddf8e3548c16d2e60c4adbca4fd853520b6a5bca.svg?branch=master" alt="Buildkite Build" /></a>
-    <a href="https://npmjs.com/rainbow-bridge-cli"><img alt="npm" src="https://img.shields.io/npm/v/rainbow-bridge-cli.svg?style=flat-square"></a>
-  </p>
-</div>
-
-## Table of Contents
-- [Pre-requisites](#pre-requisites)
-- [Usage](#usage)
-- [Security](#security)
-- [Gas costs](#gas-costs)
-- [Using Bridge on Testnet](#using-bridge-on-testnet)
-- [Deploying and Using Locally](#deploying-and-using-locally)
-- [Contract Development Workflow](#contract-development-workflow)
-
-## Pre-requisites
-
-The current version of CLI is all-in-one package -- it is used both for production and testing. As a result, even if you
-need CLI only for the token transfer you need to install all testing dependencies. This will be changed in the future.
-
-- Install golang, [see](https://golang.org/dl/).
-- Make sure you are using Node with version >=12 and <=13. We recommend using [nvm](https://github.com/nvm-sh/nvm) for installing node and npm, if you already don't have one. This constraint will be removed soon;
-- yarn
-- docker, for deterministic compile rust contracts
-- bash, for preparation steps (needs to be re-implemented in JS)
-
-### If you want to test with a local near node:
-
-- You would also need to install resources needed to compile nearcore (in the future this will only be required for the testing CLI):
-
-```bash
-curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
-source $HOME/.cargo/env
-rustup default stable
-rustup target add wasm32-unknown-unknown
-```
-
-- Then install dependencies needed for the compilation of nearcore, [see](https://docs.near.org/docs/local-setup/running-testnet#compiling-and-running-official-node-without-docker).
-- python3 pip , for nearup
-
-#### Install nearup
-```bash
-pip3 install nearup
-
-```
-
-## Usage
-
-Clone this repo, `yarn install`, then to learn the commands that you can use with the rainbow bridge run:
-
-```
-    cli/index.js --help
-```
-
-Parameters of each command can be specified through environment variables, command line arguments, entries in the `~/.rainbow/config.json` config file, or the default value will be used -- in that priority.
-If argument is not provided and there is no default value the program will not execute.
-
-If script successfully executes a command then each parameter provided through the command line argument will be
-written into the config file. Additionally, if scripts generates new parameters (e.g. it deploys a contract to Ethereum
-and obtains its address) will also be written into the config file. Arguments should not be specified multiple times.
-
-Note, you can use environment variables to pass sensitive data which will not lead to it being written into the config file.
-
-## Security
-
-Bridge is secure as long as majority (1/2) of Etherem mining power is honest and supermajority (2/3) of NEAR stake is honest.
-There are no additional security requirements, except that Ethereum should be able to accept 1 transaction within 4 hour period even in the worst congestion scenario.
-
-## Gas costs
-
-NEAR fees are negligible, both for bridge maintenance and for token transfer.
-Ethereum fees are the following:
-
-- To transfer ERC20 token from ETH to NEAR: Approx 43,989 gas to set allowance and approx 37,407 gas to lock it;
-- To transfer ERC20 token back from NEAR to ETH: Approx 240,531 gas to unlock the token;
-- To submit a NEAR block header: approx 697,140 gas;
-- To challenge a NEAR block header: approx 700k gas.
-
-As of 2020-07-14 (gas price is 40 gwei) the cost of running bridge on NEAR mainnnet and Ethereum mainnet is approx 42 USD/day. The cost of ETH->NEAR transfer of ERC20 token is 1 USD. The cost of NEAR->ETH transfer of ERC20 token is 2 USD.
-
-## Using Bridge on Testnet
-
-### PoA vs PoW Ethereum networks
-
-Rainbow bridge can be deployed either on PoW or PoA networks. However, the main use case of the bridge is Ethereum Mainnet, which makes its design very PoW-centric and it is only trustless and decentralized for PoW networks. Unfortunately, the only popular PoW testnet is Ropsten, which frequently undergoes huge reorgs of more than [16k blocks](https://github.com/near/rainbow-bridge-cli/issues/329), because people test 51% attacks on it. 16k reorgs can wipe out entire contracts and revert days of computations. Overall, Ropsten has the following unfortunate specifics that does not exist with Ethereum Mainnet:
-* Extremely long re-orgs;
-* Gas price volatility -- Ropsten blocks might have orders of magnitude different median gas price;
-* Slow block production -- sometimes Ropsten blocks are produced once per several minutes;
-* [Infura is unreliable on Ropsten](https://github.com/near/rainbow-bridge-cli/issues/330)
-
-Therefore we advise users to not use Ropsten for bridge testing. Instead, we recommend using one of Ethereum's PoA testnet. Unfortunately, PoA networks have a differen header format and are also centralized by nature. Therefore when deploying bridge on PoA network please use `--near-client-trusted-signer` parameter. This will force `EthOnNearClient` to not validate Ethereum headers (since PoA headers are not valid PoW headers) and accept them only from the provided authority.
-
-The documenation below assumes Rinkeby testnet.
-
-### Using existing bridge on Rinkeby
-
-This section explains how to use existing bridge with mock ERC20 token that was already deployed. You would need to have some amount of this token on Rinkeby, so reach out to max@near.org if you want to give it a try.
-
-We assume you have two accounts:
-* One NEAR account on NEAR testnet with at least 1 NEAR token. We denote it as `<near_token_holder_account>` and its secret key as `<near_token_holder_sk>`;
-* One Ethereum account on Rinkeby testnet with at least 1 ETH and 100 ERC20 tokens (this example uses ERC20 deployed to `0x8151a8F90267bFf183E06921841C5dE774499388` as an example. If you want some of these ERC20 tokens please contact max@near.org). We denote it as `<eth_token_holder_address>` and its private key as `<eth_token_holder_sk>`;
-
-Make sure you have rainbow cli installed:
-```bash
-yarn install
-```
-
-If you have already used the bridge on this machine run a cleanup:
-```bash
-cli/index.js clean
-```
-
-If you're using rainbow-bridge-cli 1.x, create `~/.rainbow/config.json` file with the following content:
-```json
-{
-        "nearNetworkId": "testnet",
-        "nearNodeUrl": "https://rpc.testnet.near.org/",
-        "ethNodeUrl": "https://rinkeby.infura.io/v3/<project_id>",
-        "nearMasterAccount": "<near_token_holder_account>",
-        "nearMasterSk": "<near_token_holder_sk>",
-        "nearClientAccount": "ethonnearclient10",
-        "nearProverAccount": "ethonnearprover10",
-        "nearClientTrustedSigner": "eth2nearrelay10.testnet",
-        "ethMasterSk": "<eth_token_holder_sk>",
-        "ethEd25519Address": "0x9003342d15B21b4C42e1702447fE2f39FfAF55C2",
-        "ethClientAddress": "0xF721c979db97413AA9D0F91ad531FaBF769bb09C",
-        "ethProverAddress": "0xc5D62d66B8650E6242D9936c7e50E959BA0F9E37",
-        "ethErc20Address": "0x8151a8F90267bFf183E06921841C5dE774499388",
-        "ethLockerAddress": "0x5f7Cc23F90b5264a083dcB3b171c7111Dc32dD00",
-        "nearFunTokenAccount": "mintablefuntoken11"
-}
-```
-
-If you are using rainbow-bridge-cli 2.x, create `~/.rainbow/config.json` file with the following content:
-```json
-{
-        "nearNetworkId": "testnet",
-        "nearNodeUrl": "https://rpc.testnet.near.org/",
-        "ethNodeUrl": "https://rinkeby.infura.io/v3/<project_id>",
-        "nearMasterAccount": "<near_token_holder_account>",
-        "nearMasterSk": "<near_token_holder_sk>",
-        "nearClientAccount": "ethonnearclient10",
-        "nearProverAccount": "ethonnearprover10",
-        "nearClientTrustedSigner": "eth2nearrelay10.testnet",
-        "ethMasterSk": "<eth_token_holder_sk>",
-        "ethEd25519Address": "0x9003342d15B21b4C42e1702447fE2f39FfAF55C2",
-        "ethClientAddress": "0xF721c979db97413AA9D0F91ad531FaBF769bb09C",
-        "ethProverAddress": "0xc5D62d66B8650E6242D9936c7e50E959BA0F9E37",
-        "nearTokenFactoryAccount": "ntf4.bridge2.testnet",
-        "ethErc20Address": "0x21e7381368baa3f3e9640fe19780c4271ad96f37",
-        "ethLockerAddress": "0x7f66c116a4f51e43e7c1c33d3714a4acfa9c40fb",
-        "nearErc20Account": "21e7381368baa3f3e9640fe19780c4271ad96f37.ntf4.bridge2.testnet"
-}
-```
-
-You can get infura project id, by registering at [infura.io](http://infura.io/).
-
-To transfer ERC20 from ETH to NEAR run:
-```bash
-cli/index.js TESTING transfer-eth-erc20-to-near --amount 10 --eth-sender-sk <eth_token_holder_address> --near-receiver-account <near_token_holder_account>
-```
-
-(If the command interrupts in the middle re-run it and it will resume the transfer. PoA RPC sometimes has issues)
-Wait for the transfer to finish. You should see:
-```
-Transferred
-Balance of <near_token_holder_account> after the transfer is 10
-```
-
-To transfer ERC20 back from NEAR to ETH run:
-```bash
-cli/index.js TESTING transfer-eth-erc20-from-near --amount 1 --near-sender-account <near_token_holder_account> --near-sender-sk <near_token_holder_sk> --eth-receiver-address <eth_token_holder_address>
-```
-
-You should see:
-```
-ERC20 balance of <eth_token_holder_address> after the transfer: 91
-```
-Congratulations, you have achieved a roundtrip of ERC20 token through the bridge!
-
-<!---
-### Deploying new bridge
-
-If you used bridge before from your machine, then clean up the setup. We recommend using cloud instance for deploying and running the bridge. Go to a cloud instance and install dependencies from [Pre-requisites](#pre-requisites).
-Then run:
-```bash
-cli/index.js clean
-cli/index.js prepare
-```
-
-Then initialize `EthOnNearClient` and `EthOnNearProver`:
-```bash
-cli/index.js init-near-contracts --near-network-id testnet --near-node-url <testnet_nodes_url> --eth-node-url https://ropsten.infura.io/v3/<infura_project_id> --near-master-account <near_master_account> --near-master-sk <near_master_sk> --near-client-account ethonnearclient01 --near-client-init-balance 2000000000000000000000000000 --near-prover-account ethonnearprover01
-```
-* Make sure `ethonnearclient01` and `ethonnearprover01` do not exist yet. You can check it by going to https://explorer.testnet.near.org/accounts/ethonnearclient01 and https://explorer.testnet.near.org/accounts/ethonnearprover01 . If they exist, pick different names;
-* You can get `<infura_project_id>` by creating a free [infura](http://infura.io/) account. If you are working in NEAR organization please ask max@near.org;
-* For `<testnet_nodes_url>` you can use `http://rpc.testnet.near.org/`. If you are working in NEAR organization please ask max@near.org;
-
-Then start `eth2near-relay`:
-```bash
-node index.js start eth2near-relay --near-master-account <eth2nearrelay_account> --near-master-sk <eth2nearrelay_sk>
-```
-
-Now initialize `NearOnEthClient` and `NearOnEthProver`:
-```bash
-node index.js init-eth-ed25519 --eth-master-sk <eth_master_sk>
-node index.js init-eth-client --eth-client-lock-eth-amount 100000000000000000 --eth-client-lock-duration 600
-node index.js init-eth-prover
-```
-This will set the bond to 0.1 ETH and challenge period to 10 minutes. **Do not use these settings on Mainnet!** Mainnet should be using 20ETH bond and 4 hour challenge period.
-
-Then start the `near2eth-relay` and watchdog:
-```bash
-node index.js start near2eth-relay --eth-master-sk <near2ethrelay_sk>
-node index.js start bride-watchdog --eth-master-sk <watchdog_sk>
-```
--->
-
-## Deploying and Using Locally
-
-To locally test the bridge run:
-
-```bash
-cli/index.js clean
-cli/index.js prepare
-cli/index.js start near-node
-cli/index.js start ganache
-```
-
-### Initializing the contracts
-
-First let's initialize the contracts that bridge needs to function:
-
-```bash
-cli/index.js init-near-contracts
-cli/index.js init-eth-ed25519
-cli/index.js init-eth-client --eth-client-lock-eth-amount 1000 --eth-client-lock-duration 10
-cli/index.js init-eth-prover
-```
-
-Now, let's set up token on Ethereum blockchain that we can transfer to NEAR blockchain (this can be your own token).
-
-```bash
-cli/index.js init-eth-erc20
-cli/index.js init-eth-locker
-```
-
-Now, let's initialize token factory on NEAR blockchain.
-
-```bash
-cli/index.js init-near-token-factory
-```
-
-### Starting the services
-
-Now start the services that will relay the information between the chains:
-
-```bash
-cli/index.js start eth2near-relay
-cli/index.js start near2eth-relay --eth-master-sk 0x2bdd21761a483f71054e14f5b827213567971c676928d9a1808cbfa4b7501201
-cli/index.js start bridge-watchdog --eth-master-sk 0x2bdd21761a483f71054e14f5b827213567971c676928d9a1808cbfa4b7501202
-```
-
-Note, you can observe the logs of the relays by running:
-
-```bash
-pm2 logs
-```
-
-### Transferring tokens
-
-Let's check the balance of bridged tokens from ETH to NEAR before starting the transfer. To this end let's use `node0` account, which is automatically created and funded on startup when localnet is started. 
-```bash
-cli/index.js TESTING get-bridge-on-near-balance --near-receiver-account node0
-```
-
-Then transfer some tokens with:
-
-```bash
-cli/index.js TESTING transfer-eth-erc20-to-near --amount 1000 --eth-sender-sk 0x2bdd21761a483f71054e14f5b827213567971c676928d9a1808cbfa4b7501200 --near-receiver-account node0 --near-master-account neartokenfactory
-```
-
-Now you check the balance of `node0` again. You should notice the balance was changed.
-
-Note, when we deployed ERC20 to the Ethereum blockchain we have minted a large number of tokens to the default master
-key of Ganache, so we have transferred ERC20 tokens from it to `node0` account.
-Notice that we are using `neartokenfactory` account here to pay for the NEAR gas fees, any account for which we know a secret key would've worked too.
-You must observe blocks being submitted.
-
-You can also manually check the ERC20 balance of the receiver before and after receiving the transfer back from the NEAR side
-
-```bash
-cli/index.js TESTING get-erc20-balance 0xEC8bE1A5630364292E56D01129E8ee8A9578d7D8
-```
-
-Now let's try to transfer one token back to Ethereum
-
-```bash
-cli/index.js TESTING transfer-eth-erc20-from-near --amount 1 --near-sender-account node0 --near-sender-sk ed25519:3D4YudUQRE39Lc4JHghuB5WM8kbgDDa34mnrEP5DdTApVH81af7e2dWgNPEaiQfdJnZq1CNPp5im4Rg5b733oiMP --eth-receiver-address 0xEC8bE1A5630364292E56D01129E8ee8A9578d7D8
-```
-
-You should observe the change of the ERC20 balance as reported by the CLI.
-
-### Stopping the services
-
-To stop relay services and node clients execute the following command:
-
-```bash
-cli/index.js stop all
-```
-
-Or you can stop them one by one using these commands:
-
-```bash
-cli/index.js stop near-node
-cli/index.js stop ganache
-cli/index.js stop eth2near-relay
-cli/index.js stop near2eth-relay
-cli/index.js stop bridge-watchdog
-```
-
-## Contract Development Workflow
-
-Above steps are ways to run a local bridge and development workflows you need if make any changes to rainbow-bridge-cli. If you want to update any of solidity or rust contracts, they're not in this repo now and workflow is as following.
-
-- Install dependencies:
-```bash
-cli/index.js clean
-cli/index.js prepare
-```
-- Start local NEAR network and Ganache
-```bash
-cli/index.js near-node
-cli/index.js ganache
-```
-- If you want to modify solidity contracts, go to `node_modules/rainbow-bridge-sol`, make changes there and run `./build_all.sh` to recompile solidity contracts.
-- If you want to modify rust contracts, go to `node_modules/ranbow-bridge-rs`, make changes there and run `./build_all.sh` to recompile rust contracts.
-- If you want to modify rainbow bridge lib, go to `node_modules/rainbow-bridge-lib` and make changes there
-- Follow instructions above to init eth contracts and near contracts, start services and start testing with bridge
-- For changes to Solidity contract, Rust contract, and rainbow-bridge-lib, please submit PRs to: https://github.com/near/rainbow-bridge-sol , https://github.com/near/rainbow-bridge-rs , and https://github.com/near/rainbow-bridge-lib respectively.
-- After PR merged in contract repos and rainbow-bridge-lib repo, we will periodically publish them as new version of npm packages. And rainbow-bridge-cli will adopt new version of them.
-
-
-<!---
-The following is outdated.
-# Docker:
-
-## Currently we have the following docker options:
-
-1. Rainbow Docker image containing rainbow ready for running
-   - run the rainbow docker image with a custom command
-2. A development docker compose setup (docker-compose-dev.yml)
-   - ganache
-   - local near node
-   - eth2near-relay
-3. A production docker compose setup (docker-compose-prod.yml)
-   - eth2near-relay
-
-## Running the docker setup:
-
-1. One options is to adapt the current config.json specified in the root folder of the project and build a new image.
-2. Specifying the configuration flags through environment variables.
-
-We recommend a usage of both, encouraging using the config.json for common configurations, while passing the secrets through environment variables.
-
-Examples:
-
-```
-# Creating a docker image
-docker build .
-
-# Running the development env with config setup
-docker-compose up
-
-# Running the development env with ENV overrides
-docker-compose -f docker-compose-dev.yml up -e MASTER_SK=<key> -e ...
-
-# Running the production env just use:
-docker-compose -f docker-compose-prod.yml instead
-```
--->
diff --git a/node_modules/rainbow-bridge/SPEC.md b/node_modules/rainbow-bridge/SPEC.md
deleted file mode 100644
index fd6c5f6..0000000
--- a/node_modules/rainbow-bridge/SPEC.md
+++ /dev/null
@@ -1,44 +0,0 @@
-# Rainbow Bridge Specification
-
-## Overview
-
-The Rainbow bridge is a composition of software applications allowing smart contracts in different blockchains to establish trustless communication between them. It accomplished by having a mutual "smart contract"-based light clients in both blockchains; and cryptographic proofs of the including events (execution results) of smart contracts in blockchain blocks.
-
-## Architecture
-
-```
-    +------------------------+     +------------------------+
-    | Ethereum Blockchain    |     |        NEAR Blockchain |
-    |                        |     |                        |
-    |        +------------+  | (1) |  +-----------+         |
-    |        |            |  |=======>|           |         |
-    |    (A) | NearBridge |  |     |  | EthBridge | (B)     |
-    |        |            |<=======|  |           |         |
-    |        +------------+  | (2) |  +-----------+         |
-    |              / \       |     |       / \              |
-    |              |3|       |     |       |4|              |
-    |        +------------+  |     |  +-----------+         |
-    |    (C) | NearProver |  |     |  | EthProver | (D)     |
-    |        +------------+  |     |  +-----------+         |
-    |              / \       |     |       / \              |
-    |              |5|       |     |       |6|              |
-    |        +------------+  |     |  +-----------+         |
-    |      +------------+ |  |     |  | +-----------+       |
-    |    +------------+ |-+  |     |  +-| +-----------+     |
-    |    |   . . .    |-+    |     |    +-|   . . .   |     |
-    |    +------------+      |     |      +-----------+     |
-    |                        |     |                        |
-    +------------------------+     +------------------------+
-```
-
-Software:
-- **A.** *NearBridge* – smart contract of Near light client hosted in Ethereum network. It receives Near block headers, verifies and stores block hashes only.
-- **B.** *EthBridge* – smart contract of Ethereum light client hosted in Near network. It receives Ethereum block headers, verifies ethash and longest chain rule and stores block hashes only.
-- **C.** *NearProver* - smart contract in Ethereum network performing verification of Near transaction result was included into Near block. Uses Merkle trees and hash preimages for verification.
-- **D.** *EthProver* - smart contract in Near network performing verification of Ethereum event was included into Ethereum block. Uses Merkle trees and hash preimages for verification.
-
-Relations:
-1. Non-trusted and non-authorized Ethereum relayer software (aka *EthRelayer*) could forward Ethereum block headers into *EthBridge* smart contract hosted in Near blockchain.
-2. Non-trusted and non-authorized Near relayer software (aka *NearRelayer*) could forward Near block headers into *NearBridge* smart contract hosted in Ethereum network.
-3. *NearProver* verifies Near transaction result was included into Near bloc. And then checks if this block image exisits in *NearBridge*.
-4. *EthProver* verifies Ethereum event/log was included into Ethereum transaction receipt which was included into Ethereum block. And then checks if this block image exists in *EthBridge*.
diff --git a/node_modules/rainbow-bridge/contracts/eth/CHANGELOG.md b/node_modules/rainbow-bridge/contracts/eth/CHANGELOG.md
deleted file mode 100644
index a2c98c7..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/CHANGELOG.md
+++ /dev/null
@@ -1,4 +0,0 @@
-# 2.0.0
-* Token locker that was used for ERC20 was removed. It now uses rainbow-token-connector.
-* NearOnEthClient was rewritten to fix some critical issues. The following public methods were removed: `head`, `backupHead`, `backupCurrentBlockProducers`;
-`replaceDuration` public method was added. The constructor now accepts additional argument `replaceDuration_` that allows resubmitting headers on the top of the headers that did not pass challenge period yet.
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintignore b/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintignore
deleted file mode 100644
index dddc8d0..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintignore
+++ /dev/null
@@ -1,5 +0,0 @@
-node_modules/
-truffle-config.js
-js/
-test/helpers
-coverage/
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintrc b/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintrc
deleted file mode 100644
index 97751ca..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.eslintrc
+++ /dev/null
@@ -1,52 +0,0 @@
-{
-    "extends" : [
-        "standard",
-        "plugin:promise/recommended"
-    ],
-    "plugins": [
-        "promise"
-    ],
-    "env": {
-        "browser" : true,
-        "node": true,
-        "mocha": true,
-        "jest": true
-    },
-    "globals" : {
-        "artifacts": false,
-        "contract": false,
-        "assert": false,
-        "web3": false
-    },
-    "rules": {
-
-        // Strict mode
-        "strict": [2, "global"],
-
-        // Code style
-        "indent": [2, 4],
-        "quotes": [2, "single"],
-        "semi": ["error", "always"],
-        "space-before-function-paren": ["error", "always"],
-        "no-use-before-define": 0,
-        "no-unused-expressions": "off",
-        "eqeqeq": [2, "smart"],
-        "dot-notation": [2, {"allowKeywords": true, "allowPattern": ""}],
-        "no-redeclare": [2, {"builtinGlobals": true}],
-        "no-trailing-spaces": [2, { "skipBlankLines": true }],
-        "eol-last": 1,
-        "comma-spacing": [2, {"before": false, "after": true}],
-        "camelcase": [2, {"properties": "always"}],
-        "no-mixed-spaces-and-tabs": [2, "smart-tabs"],
-        "comma-dangle": [1, "always-multiline"],
-        "no-dupe-args": 2,
-        "no-dupe-keys": 2,
-        "no-debugger": 0,
-        "no-undef": 2,
-        "object-curly-spacing": [2, "always"],
-        "max-len": [2, 200, 2],
-        "generator-star-spacing": ["error", "before"],
-        "promise/avoid-new": 0,
-        "promise/always-return": 0
-    }
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.gitattributes b/node_modules/rainbow-bridge/contracts/eth/nearbridge/.gitattributes
deleted file mode 100644
index 52031de..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.gitattributes
+++ /dev/null
@@ -1 +0,0 @@
-*.sol linguist-language=Solidity
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.soliumignore b/node_modules/rainbow-bridge/contracts/eth/nearbridge/.soliumignore
deleted file mode 100644
index f06235c..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/.soliumignore
+++ /dev/null
@@ -1,2 +0,0 @@
-node_modules
-dist
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/README.md b/node_modules/rainbow-bridge/contracts/eth/nearbridge/README.md
deleted file mode 100644
index 07b897d..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/README.md
+++ /dev/null
@@ -1,6 +0,0 @@
-# NearBridge
-
-TruffleFramework template with travis-ci.org and coveralls.io configured
-
-[![Build Status](https://travis-ci.org/nearprotocol/bridge.svg?branch=master)](https://travis-ci.org/nearprotocol/bridge)
-[![Coverage Status](https://coveralls.io/repos/github/nearprotocol/bridge/badge.svg?branch=master)](https://coveralls.io/github/nearprotocol/bridge?branch=master)
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/181.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/181.json
deleted file mode 100644
index 1ef1963..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/181.json
+++ /dev/null
@@ -1,44 +0,0 @@
-{
-    "prev_block_hash": "CKBWudb6GANAQdR6Z8QDkHCXcw5cbfm9zaHXwG8w7Zn1",
-    "next_block_inner_hash": "XcRijtPvVpewz2W7e2CvHdhD4QNqoWKTawyTGmjXAWE",
-    "inner_lite": {
-        "height": 181,
-        "epoch_id": "7Cbi1SH4yCiFGSMg7JQxZFYD44hkVpxQzrSFQQUGNPea",
-        "next_epoch_id": "CKBWudb6GANAQdR6Z8QDkHCXcw5cbfm9zaHXwG8w7Zn1",
-        "prev_state_root": "GE6q36oqq9UPfeaqngvNmBVsfFAMsq77nH8mttueBLez",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "timestamp": 1594925416397542400,
-        "timestamp_nanosec": "1594925416397542394",
-        "next_bp_hash": "HuASjBRppAimr4kNc8HLNgjqBZGuiWt4vVVCE26rqduW",
-        "block_merkle_root": "HbfoBPXgBJW6SMmFDJy5hBjJWvWda8CfCMCyrUMeeEkv"
-    },
-    "inner_rest_hash": "BHJnf6gbSZZJHVxtpBUw9cNMMD4y24xyjnba9TaCwWtq",
-    "next_bps": [
-        {
-            "account_id": "node2",
-            "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-            "stake": "50000321061688037221429979533607"
-        },
-        {
-            "account_id": "node0",
-            "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-            "stake": "50000321061688037221429979533607"
-        },
-        {
-            "account_id": "node3",
-            "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-            "stake": "50000293315560663547339536485138"
-        },
-        {
-            "account_id": "node1",
-            "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-            "stake": "50000321061688037221429979533607"
-        }
-    ],
-    "approvals_after_next": [
-        "ed25519:AA2hWLF669FAsKBmKqTLPjmHsxLXNBBMj9e4xQtYwBbNK76bp4Cq5ZQ5TkasxauhvCq2pivvdBqDiTNbkuje49k",
-        null,
-        "ed25519:LJqm4RigkkEYKQqQCniDuEyn56eGTM2iaGod4yK5djSiKruNd8cV1uxSMfRWQ8gU1HiWvXJJyZAW1nnzuG7NQrd",
-        "ed25519:S2hbrYBddHLY64QxGS3UP2EFurZXaQ76pmcLHX4NYg4mnq68AJepi3ZYbb2UMaNNJ88GPNpouviJTxuLWHJwQRc"
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/244.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/244.json
deleted file mode 100644
index 55074cd..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/244.json
+++ /dev/null
@@ -1,44 +0,0 @@
-{
-    "prev_block_hash": "3eTybaFkEp94DN1Mza5VwxwgETgcRX8o5pEWi1DytP6K",
-    "next_block_inner_hash": "448SbraDhAQ7JLKETVEpYBV2TA7vdv8M8hV3trnueZBf",
-    "inner_lite": {
-        "height": 244,
-        "epoch_id": "CKBWudb6GANAQdR6Z8QDkHCXcw5cbfm9zaHXwG8w7Zn1",
-        "next_epoch_id": "GaLCqHtAuZc3qzku12Abw5RxgKYu21RczmJfD3U337JF",
-        "prev_state_root": "ASW2vuaEHJPVdnu8JEYPvhSvDTrrhWVJmcy2D8VTkDmb",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "timestamp": 1594925463348892200,
-        "timestamp_nanosec": "1594925463348892046",
-        "next_bp_hash": "F256puJY16dVpsHdrwcBi4XLhNwmjCtB5Xi5wp9QMQSQ",
-        "block_merkle_root": "71zj3t5UStRCpbMjMWahHfirRfo5JmUwmDW6atSBSWBF"
-    },
-    "inner_rest_hash": "FxsbsVyjU4txNQUKSoj9V6FLmWPckpu3SN5PqxMKEh9T",
-    "next_bps": [
-        {
-            "account_id": "node3",
-            "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-            "stake": "50000400336094016450592009378407"
-        },
-        {
-            "account_id": "node0",
-            "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-            "stake": "50000428082280777883295269867725"
-        },
-        {
-            "account_id": "node2",
-            "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-            "stake": "50000428082280777883295269867725"
-        },
-        {
-            "account_id": "node1",
-            "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-            "stake": "50000360698944607836935642620317"
-        }
-    ],
-    "approvals_after_next": [
-        "ed25519:4L26n1TmsYR7F65vXEnpYFhqci242nrbR8ZjGAn7AL3xGCzTKDrZ1GP3My8z3wBPBVmtiVWngbQFisomYtAa5e25",
-        "ed25519:3vQcTk2Ah3xibav7ycsQ83VBzjQjMeTrUcDtfd3Dtp984DGgirZSvVSfjRwFF9yYXj7pduYnJQbbhJMRWgStvck1",
-        "ed25519:4vRZYovX3STSR8QCjLqYnFq5bNFx5Es9noPMKGkNpneoGVtZDbr1VdYLSP4FZpawPLC6mBuSYRHifnHKh22xHhGq",
-        null
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/304.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/304.json
deleted file mode 100644
index 9faa098..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/304.json
+++ /dev/null
@@ -1,39 +0,0 @@
-{
-    "prev_block_hash": "Bm7u1E5LFMAHfsEAEtng5kLKVcgQoyMW9Rw31wgWruo2",
-    "next_block_inner_hash": "9u74SMgYebQii85wnnz6egwWqrCPdWcXVzDcsrT8Z8o4",
-    "inner_lite": {
-        "height": 304,
-        "epoch_id": "GaLCqHtAuZc3qzku12Abw5RxgKYu21RczmJfD3U337JF",
-        "next_epoch_id": "Bm7u1E5LFMAHfsEAEtng5kLKVcgQoyMW9Rw31wgWruo2",
-        "prev_state_root": "ASW2vuaEHJPVdnu8JEYPvhSvDTrrhWVJmcy2D8VTkDmb",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "timestamp": 1594925525320225000,
-        "timestamp_nanosec": "1594925525320224987",
-        "next_bp_hash": "Ca1o9C5HNJHry7UUxVMYS27ND5wGVsoY2vkTgpKQqzqe",
-        "block_merkle_root": "7F392WqN8Ngy2BigfkdzmZmLkAFa4KCrqtdpLaXxyNLH"
-    },
-    "inner_rest_hash": "99iwcXSQGTRPcvnwhfVQDL5k2J95wvptxco1rB19Y8a8",
-    "next_bps": [
-        {
-            "account_id": "node0",
-            "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-            "stake": "50000535102882257066850038864654"
-        },
-        {
-            "account_id": "node3",
-            "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-            "stake": "50000507356636107870684517280644"
-        },
-        {
-            "account_id": "node2",
-            "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-            "stake": "50000428082280777883295269867725"
-        }
-    ],
-    "approvals_after_next": [
-        "ed25519:7mGLzCNJEoYQuDz9cTXSohycZQ3D6JR1rnd3jawx68bugytoAMbiXKYuT6opUuHhsXEtzjqopCv5oJk9T92hsKb",
-        "ed25519:3K9yrpk6wSMdxjZvckYwCC5CTSMEaoMCRhNTt3ULnpDwikKaWs4hYzKQrRQ8Ystshuu6fhHEMXsubVSRHrkstzfs",
-        "ed25519:3k72VzxNpw58ZEZKTpzJdVqoYUhvYgJfByXSfgTiCxRRzxPncZQWNdpiwNk2bgm9EboAufuKShKy7oYoiy3zkd56",
-        null
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/308.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/308.json
deleted file mode 100644
index 3797816..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/308.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"H2Nxnkx1vAS2rnGChBMuC1mFJnkKCmnzTVYhRZcVAN6A","next_block_inner_hash":"G7SxvSfbRYjTD1fp45rcXAnotmgw6CKmBx8WrhYMJ9dA","inner_lite":{"height":308,"epoch_id":"GaLCqHtAuZc3qzku12Abw5RxgKYu21RczmJfD3U337JF","next_epoch_id":"Bm7u1E5LFMAHfsEAEtng5kLKVcgQoyMW9Rw31wgWruo2","prev_state_root":"7brbAz1hg7RAUNtPHyvHMgRVLkNCZbbsNJVGvpSGAcxn","outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t","timestamp":1594925529563514400,"timestamp_nanosec":"1594925529563514281","next_bp_hash":"Ca1o9C5HNJHry7UUxVMYS27ND5wGVsoY2vkTgpKQqzqe","block_merkle_root":"9W3SiKbFyWe7a6upWRymtoW1nSXWmYYAWS8R1CXq8xiH"},"inner_rest_hash":"FHWqrDMXD5Apt7ZsebWEn5eUc4hW9JqNujRybUKztYVY","next_bps":[{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"50000535102882257066850038864654"},{"account_id":"node3","public_key":"ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su","stake":"50000507356636107870684517280644"},{"account_id":"node2","public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5","stake":"50000428082280777883295269867725"}],"approvals_after_next":["ed25519:4sQNxdNYa7N1wtJu8S4c4KHKr4kme1eMtDgvfoM4e7Jnfsz85aub3gxu6Kg8Kyy5bsU4frusJLASx7FD6K7HihB1","ed25519:UpXBgM62iYoYYrx6tg36pR6vG94Wfqjqwv3zEZHa11EGDQRCahRmKagxZtK6bRtY5aMzzXpnJP619jj1y7dbfFv","ed25519:3pGYSwNTiqZKQXuy27kV6YWoYj39ZWV3Ut8JUMqydnabBUq87Mjyd1eawVUpz5goY5qNy2dBLbAjEHrRng4pC8ro",null]}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/368.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/368.json
deleted file mode 100644
index 1d9ab36..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/368.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-    "prev_block_hash": "GePjU1p63a8H973QXiHipxtuEFM7ayHJTspfEGzvz83f",
-    "next_block_inner_hash": "8FfaTPqVh3ywo3tzNLXe7aBru8U8Tf4REmvcoq7nRTLB",
-    "inner_lite": {
-        "height": 368,
-        "epoch_id": "Bm7u1E5LFMAHfsEAEtng5kLKVcgQoyMW9Rw31wgWruo2",
-        "next_epoch_id": "BmdLouHynUHZ3pkzYiFMGuyEkK6iMhXsm5XuR1buZFc8",
-        "prev_state_root": "5Z1wSug5qGbwzbAjXhGeBsHHTY5rTAt46z7gPCkvpBzQ",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "timestamp": 1594925590636896800,
-        "timestamp_nanosec": "1594925590636896703",
-        "next_bp_hash": "CskBq7jm4HKqm95szEyd1UYnizY2pXwzqG3DAvCiruse",
-        "block_merkle_root": "88wzPu4N5D8UkKQr3KFBPSScwjL8gggQLP4QEXEkPUn1"
-    },
-    "inner_rest_hash": "44gKe2FgmerLhKj7ngbVA6cGeZPJXAGSHLnoR17kmPNR",
-    "next_bps": [
-        {
-            "account_id": "node0",
-            "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-            "stake": "50000642123525392427602002905556"
-        },
-        {
-            "account_id": "node2",
-            "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-            "stake": "50000535102923913244047233908627"
-        },
-        {
-            "account_id": "node3",
-            "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-            "stake": "50000507356636107870684517280644"
-        }
-    ],
-    "approvals_after_next": [
-        "ed25519:5HjBw86x8We1QfDavQmJB9DV6to1ym9PYYTRcsjsbnxjEa4Y6A2xsagwiDPLN4ygdJhtXWFjkpurXVYgp2Ms6zpz",
-        "ed25519:3BmYDu9NspuWnXXTVwZFkwgxszJWmWnk2JFok5KBqws9Za5eeJy4uatwmj2SmpkTXUYLhcfhTTPXBb7kmrDFxJVP",
-        null
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/369.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/369.json
deleted file mode 100644
index a4ad3fb..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/369.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"9nuQhvAwTaTaWFrg8nQhgZh8Ea8pK6tZ1tnTuZBHsiuS","next_block_inner_hash":"EkeSmXHNkiB6FECHwC1JjhgbyCReGghCcfRSAK3JMvMF","inner_lite":{"height":369,"epoch_id":"Bm7u1E5LFMAHfsEAEtng5kLKVcgQoyMW9Rw31wgWruo2","next_epoch_id":"BmdLouHynUHZ3pkzYiFMGuyEkK6iMhXsm5XuR1buZFc8","prev_state_root":"5Z1wSug5qGbwzbAjXhGeBsHHTY5rTAt46z7gPCkvpBzQ","outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t","timestamp":1594925591328778000,"timestamp_nanosec":"1594925591328778012","next_bp_hash":"CskBq7jm4HKqm95szEyd1UYnizY2pXwzqG3DAvCiruse","block_merkle_root":"H8pJxfbDp7mRKRgpwXA2Wdi8GpkNz6Z4XYK6W8fwvQh6"},"inner_rest_hash":"EVwCik9i224CttQHNteJGj1pGUpmigi7W2jnkRuv5XGg","next_bps":[{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"50000642123525392427602002905556"},{"account_id":"node2","public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5","stake":"50000535102923913244047233908627"},{"account_id":"node3","public_key":"ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su","stake":"50000507356636107870684517280644"}],"approvals_after_next":["ed25519:4GSXCcdLtVDcAGCFYusHWCBM43YWHy7YLakHujbQcNWfcEKYGzNjBdVAaHnuktnGEQa2jsi6CVLzLBANpRaGPbk7","ed25519:5HLp3ioSY8MingGvbMcqgaSxfP7MiaN59V8VMYPTuSiSZe3dFxBpxCm1HBXUPoH8cxRsEZHPp4YHALHmEGx7Uztw","ed25519:3Qu6iwKEHT5UiXQeqU5qutY7FSj4RPVrfb3igvVRQXtuc2HC9PG8USEiBXTLr8a1FRwSVSruw5KvqoqMYiMg934f"]}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/Ed25519.js b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/Ed25519.js
deleted file mode 100644
index d596ecb..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/Ed25519.js
+++ /dev/null
@@ -1,17 +0,0 @@
-const { assert } = require('chai');
-
-describe('Ed25519', () => {
-  let Ed25519;
-
-  before(async () => {
-    Ed25519 = await (await ethers.getContractFactory('Ed25519')).deploy();
-  });
-
-  for (const { description, k, msg, sig, valid } of require('./ed25519-tests.json')) {
-    it(description, async () => {
-        const [r, s] = [sig.substring(0, 64), sig.substring(64)];
-        const [m1, m2] = [msg.substring(0, 64), msg.substring(64)];
-        assert.equal(await Ed25519.check(`0x${k}`, `0x${r}`, `0x${s}`, `0x${m1}`, `0x${m2}`), valid);
-    });
-  }
-});
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge.js b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge.js
deleted file mode 100644
index 2c80914..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge.js
+++ /dev/null
@@ -1,89 +0,0 @@
-const { expect } = require('chai');
-
-const fs = require('fs').promises;
-const { borshify, borshifyInitialValidators } = require('rainbow-bridge-lib/rainbow/borsh');
-
-async function increaseTime(time) {
-    await network.provider.send('evm_increaseTime', [time]);
-    await network.provider.send('evm_mine', []);
-}
-
-let Ed25519, NearBridge;
-
-beforeEach(async function () {
-    Ed25519 = await (await ethers.getContractFactory('Ed25519')).deploy();
-    NearBridge = await (await ethers.getContractFactory('NearBridge')).deploy(
-        Ed25519.address,
-        ethers.BigNumber.from("1000000000000000000"), // 1e18
-        ethers.BigNumber.from("360"), // lock duration
-        ethers.BigNumber.from("362627730000"), // replace duration
-        await (await ethers.getSigners())[0].getAddress(),
-        0
-    );
-    await NearBridge.deposit({ value: ethers.utils.parseEther('1') });
-});
-
-it('should be ok', async function () {
-    const block120998 = borshify(require('./block_120998.json'));
-    const block121498 = borshify(require('./block_121498.json'));
-    const block121998 = borshify(require('./block_121998.json'));
-
-    // We should use previous epoch's next_bps to initWithBlock with block_120998, but they happens to be same
-    await NearBridge.initWithValidators(borshifyInitialValidators(require('./block_120998.json').next_bps));
-    await NearBridge.initWithBlock(block120998);
-    expect(await NearBridge.blockHashes(120998)).to.be.equal(
-        '0x1a7a07b5eee1f4d8d7e47864d533143972f858464bacdc698774d167fb1b40e6',
-    );
-
-    await NearBridge.addLightClientBlock(block121498);
-    expect(await NearBridge.checkBlockProducerSignatureInHead(0)).to.be.true;
-
-    await expect(NearBridge.addLightClientBlock(block121998)).to.be.revertedWith('Epoch id of the block is not valid');
-    await increaseTime(3600);
-    expect(await NearBridge.blockHashes(121498)).to.be.equal(
-        '0x508307e7af9bdbb297afa7af0541130eb32f0f028151319f5a4f7ae68b0ecc56',
-    );
-
-    await NearBridge.addLightClientBlock(block121998);
-    expect(await NearBridge.checkBlockProducerSignatureInHead(0)).to.be.true;
-
-    await increaseTime(3600);
-    expect(await NearBridge.blockHashes(121998)).to.be.equal(
-        '0x2358c4881bbd111d2e4352b6a7e6c7595fb39d3c9897d3c624006be1ef809abf',
-    );
-});
-
-if (process.env.NEAR_HEADERS_DIR) {
-    it('ok with many block headers', async function () {
-        this.timeout(0);
-        const blockFiles = await fs.readdir(process.env.NEAR_HEADERS_DIR);
-        blockFiles.sort((a, b) => a.split('.')[0] - b.split('.')[0]);
-        const firstBlock = require(process.env.NEAR_HEADERS_DIR + '/' + blockFiles[0]);
-        const firstBlockBorsh = borshify(firstBlock);
-        // current bps happens to equal to next_bps
-        await NearBridge.initWithValidators(borshifyInitialValidators(firstBlock.next_bps));
-        await NearBridge.initWithBlock(firstBlockBorsh);
-        await NearBridge.blockHashes(firstBlock.inner_lite.height);
-        expect(await NearBridge.blockHashes(firstBlock.inner_lite.height)).to.be.a('string');
-
-        for (let i = 1; i < blockFiles.length; i++) {
-            const block = require(process.env.NEAR_HEADERS_DIR + '/' + blockFiles[i]);
-            const blockBorsh = borshify(block);
-            console.log('adding block ' + block.inner_lite.height);
-            await NearBridge.addLightClientBlock(blockBorsh);
-            await NearBridge.blockHashes(block.inner_lite.height);
-            await increaseTime(3600);
-
-            if (i >= 600) {
-                console.log('checking block ' + block.inner_lite.height);
-                for (let j = 0; j < block.approvals_after_next.length; j++) {
-                    console.log('checking approval ' + j);
-                    if (block.approvals_after_next[j]) {
-                        console.log('approval ' + j + ' is not null');
-                        expect(await NearBridge.checkBlockProducerSignatureInHead(j)).to.be.true;
-                    }
-                }
-            }
-        }
-    });
-}
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge2.js b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge2.js
deleted file mode 100644
index 242683b..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/NearBridge2.js
+++ /dev/null
@@ -1,147 +0,0 @@
-const { ethers } = require('hardhat');
-const { expect } = require('chai');
-
-const { borshify, borshifyInitialValidators } = require('rainbow-bridge-lib/rainbow/borsh')
-
-async function increaseTime(time) {
-    await network.provider.send('evm_increaseTime', [time]);
-    await network.provider.send('evm_mine', []);
-}
-
-let Ed25519, NearBridge;
-
-beforeEach(async function () {
-    Ed25519 = await (await ethers.getContractFactory('Ed25519')).deploy();
-    NearBridge = await (await ethers.getContractFactory('NearBridge')).deploy(
-        Ed25519.address,
-        ethers.BigNumber.from("1000000000000000000"), // 1e18
-        ethers.BigNumber.from("10"), // lock duration
-        ethers.BigNumber.from("20000000000"), // replace duration
-        await (await ethers.getSigners())[0].getAddress(),
-        0
-    );
-    await NearBridge.deposit({ value: ethers.utils.parseEther('1') });
-});
-
-it('should be ok', async function () {
-    const block9605 = borshify(require('./block_9605.json'));
-    const block9610 = borshify(require('./block_9610.json'));
-
-    // We don't know block producers that produce block_9605, assume it's same as block_9605.next_bps
-    await NearBridge.initWithValidators(borshifyInitialValidators(require('./block_9605.json').next_bps));
-    await NearBridge.initWithBlock(block9605);
-    await NearBridge.blockHashes(9605);
-    expect(await NearBridge.blockHashes(9605)).to.be.equal(
-        '0xc4770276d5e782d847ea3ce0674894a572df3ea75b960ff57d66395df0eb2a34',
-    );
-
-    await NearBridge.addLightClientBlock(block9610);
-    await increaseTime(10);
-    expect(await NearBridge.blockHashes(9610)).to.be.equal(
-        '0xf28629da269e59f2494c6bf283e9e67dadaa1c1f753607650d21e5e5b916a0dc',
-    );
-
-});
-
-it('2020-09-09 Example', async function () {
-   const block_15178713 = borshify(require('./block_15178713.json'));
-   const block_15178760 = borshify(require('./block_15178760.json'));
-   const block_15204402 = borshify(require('./block_15204402.json'));
-   const block_15248583 = borshify(require('./block_15248583.json'));
-
-   await NearBridge.initWithValidators(borshifyInitialValidators(require('./init_validators_15178713.json')));
-   await NearBridge.initWithBlock(block_15178713);
-   await increaseTime(3600);
-   await NearBridge.addLightClientBlock(block_15178760);
-   await increaseTime(3600);
-   await NearBridge.addLightClientBlock(block_15204402);
-   await increaseTime(3600);
-   await NearBridge.addLightClientBlock(block_15248583);
-});
-
-it('Add second block in first epoch should be verifiable', async function () {
-    // Get "initial validators" that will produce block 304
-    const block244 = require('./244.json');
-    const initialValidators = block244.next_bps;
-
-    const block304 = require('./304.json');
-    const block308 = require('./308.json');
-
-    await NearBridge.initWithValidators(borshifyInitialValidators(initialValidators));
-    await NearBridge.initWithBlock(borshify(block304));
-    await NearBridge.blockHashes(304);
-
-    await increaseTime(3600);
-
-    await NearBridge.addLightClientBlock(borshify(block308));
-    await NearBridge.blockHashes(308);
-
-    for (let i = 0; i < block308.approvals_after_next.length; i++) {
-        if (block308.approvals_after_next[i]) {
-            expect(await NearBridge.checkBlockProducerSignatureInHead(i)).to.be.true;
-        }
-    }
-});
-
-it('Test adding blocks in new epoch when bps change', async function () {
-    const block181 = require('./181.json');
-    const block244 = require('./244.json');
-    const block304 = require('./304.json');
-    const block308 = require('./308.json');
-    const block368 = require('./368.json');
-    const block369 = require('./369.json');
-
-    await NearBridge.initWithValidators(borshifyInitialValidators(block181.next_bps));
-    await NearBridge.initWithBlock(borshify(block244));
-    await NearBridge.blockHashes(244);
-
-    await increaseTime(3600);
-
-    await NearBridge.addLightClientBlock(borshify(block304));
-    await NearBridge.blockHashes(304);
-
-    await increaseTime(3600);
-
-    await NearBridge.addLightClientBlock(borshify(block308));
-    await NearBridge.blockHashes(308);
-
-    await increaseTime(3600);
-
-    await NearBridge.addLightClientBlock(borshify(block368));
-    await NearBridge.blockHashes(368);
-
-    await increaseTime(3600);
-
-    await NearBridge.addLightClientBlock(borshify(block369));
-    await NearBridge.blockHashes(369);
-});
-
-it('After challenge prev should be revert to prev epoch of latest valid block', async function () {
-    const block181 = require('./181.json');
-    const block244 = require('./244.json');
-    const block304 = require('./304.json');
-    const block308 = require('./308.json');
-    const block368 = require('./368.json');
-
-    await NearBridge.initWithValidators(borshifyInitialValidators(block181.next_bps));
-    await NearBridge.initWithBlock(borshify(block244));
-    await NearBridge.blockHashes(244);
-
-    await increaseTime(3600);
-    await NearBridge.addLightClientBlock(borshify(block304));
-    await NearBridge.blockHashes(304);
-
-    await increaseTime(3600);
-    await NearBridge.addLightClientBlock(borshify(block308));
-    await NearBridge.blockHashes(308);
-
-    await increaseTime(3600);
-
-    block368.approvals_after_next[0] = block368.approvals_after_next[1];
-    await NearBridge.addLightClientBlock(borshify(block368));
-    await NearBridge.blockHashes(368);
-    expect((await NearBridge.lastValidAt())).to.not.be.equal(0);
-
-    await NearBridge.challenge(ethers.constants.AddressZero, 0)
-    expect((await NearBridge.lastValidAt())).to.be.equal(0);
-});
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_120998.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_120998.json
deleted file mode 100644
index 4ec6ff3..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_120998.json
+++ /dev/null
@@ -1,25 +0,0 @@
-{
-    "approvals_after_next": [
-        "ed25519:ACB48EyiKUBFUixi87f9HSJtG9PpuTF3cnVYMdtm8mP2h1fdikCpLgXKLiC6Sd7xXCMw63qNNzJqH2Zdmq8VKWS"
-    ],
-    "inner_lite": {
-        "block_merkle_root": "DsvKiM9D6SF3Gv5zrCkYG5jbd8kgLm7yEjm1XLwYUA4C",
-        "epoch_id": "3YovYeTZxCBqnjGJz7vxke8iDJiyX83tf2NXoV6jCcLo",
-        "height": 120998,
-        "next_bp_hash": "DhFiPWUUZLVPTgRQ81YB4jGHr8m6S1LW7W1zs93UrZap",
-        "next_epoch_id": "5nm5qwBYQH9MfrHQ1R645MXXHgAz4jBRxbfncCn8WJ85",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "prev_state_root": "J6FfePC1W7pt3AVLQEUzbG8Fz7AajTow1CTunSmTmNn7",
-        "timestamp": "1590578463681180000"
-    },
-    "inner_rest_hash": "AqSoF51ayfKThAQqgNPJmwJNjFm4sNZDG5Tp53gk4dpr",
-    "next_block_inner_hash": "3jAcGGBL1AUweRS38wV5EBhsf7zfJVQDxHUZuhDSFJUy",
-    "next_bps": [
-        {
-            "account_id": "test.near",
-            "public_key": "ed25519:BnnC1A3aQpnVLuYcn6sxY6PpNdUSpMyzLR5J3pJRnVJL",
-            "stake": "50352328493762631912743342409743"
-        }
-    ],
-    "prev_block_hash": "CLnmQNmigsTS63MqbJytgJZJWVbugKcCa1WEAff2VbsB"
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121498.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121498.json
deleted file mode 100644
index 9e0902b..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121498.json
+++ /dev/null
@@ -1,25 +0,0 @@
-{
-    "approvals_after_next": [
-        "ed25519:5y9gpe8g4g2GqmdfRHQC5zXj4AAoUZ4z17GMVDREVx1xcdT77Py2mMYFQ2s9ZQ4E5Wo1X5pbP75TJMbXsFYgfrbj"
-    ],
-    "inner_lite": {
-        "block_merkle_root": "4fFB5xWb5vzQ1aj7NAEFQwwNzLuMhDyqp8HTPEXzPbQ5",
-        "epoch_id": "5nm5qwBYQH9MfrHQ1R645MXXHgAz4jBRxbfncCn8WJ85",
-        "height": 121498,
-        "next_bp_hash": "4EHb8bzoefQNHcbxeXKkbWpygFzgeoUKZhVnGVKAwKpi",
-        "next_epoch_id": "556dMzVQusducJypg5Q4Kbq3bZ5mJigycBam6umgxvrv",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "prev_state_root": "BhqfFFrnFj7EfLc4ognhZGsPz8UsELyL5RnUVqkbvzqf",
-        "timestamp": "1590578830167531000"
-    },
-    "inner_rest_hash": "AwbxDsVYDX8sQZxWmbrX87MsVD1Az99xT6zdP57QnMpr",
-    "next_block_inner_hash": "DcYKo58EU3xaEYFPV3oTniJ42TPqEhXi7Kt347oZbqMA",
-    "next_bps": [
-        {
-            "account_id": "test.near",
-            "public_key": "ed25519:BnnC1A3aQpnVLuYcn6sxY6PpNdUSpMyzLR5J3pJRnVJL",
-            "stake": "50353791387239926586579216784656"
-        }
-    ],
-    "prev_block_hash": "8jz8EGLUKoPUcaBBHhAkqJNrA95WgzXZmyywKjmTBeeq"
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121998.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121998.json
deleted file mode 100644
index ccdef48..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_121998.json
+++ /dev/null
@@ -1,25 +0,0 @@
-{
-    "approvals_after_next": [
-        "ed25519:5zD6wKAFe7tdw2zRb1tVfDNghsV6vyWKG54oEE8U5shGriM72LYjJUyB9GwceTpMXr8ssxPn7Bgza4scZEkcpCuJ"
-    ],
-    "inner_lite": {
-        "block_merkle_root": "MQFMkdQn25narJEE4SJJ9FCL3JxKVHk4La6UyNeaSj8",
-        "epoch_id": "556dMzVQusducJypg5Q4Kbq3bZ5mJigycBam6umgxvrv",
-        "height": 121998,
-        "next_bp_hash": "CfVtbv2j9fgyBbNphsP7yauepzpP34Z2N538CEMvDkje",
-        "next_epoch_id": "FXPmNESkHvV9BL5qDyH62asc2qPEWQjeW1YUpTvb5yiH",
-        "outcome_root": "7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-        "prev_state_root": "HQsbzrwjACD5Nb2sWzoGzjKum7HNRhNd1hyoa3yYL53w",
-        "timestamp": "1590579192795262000"
-    },
-    "inner_rest_hash": "4Sb2jpFBfDrRu3NXCvUpqbKpdqE6AhD1FzBjbg8Z5rYe",
-    "next_block_inner_hash": "7dCBMzoAY2XK71EdBXsSmswzRf3bwpuP1gtUvXoFPDSq",
-    "next_bps": [
-        {
-            "account_id": "test.near",
-            "public_key": "ed25519:BnnC1A3aQpnVLuYcn6sxY6PpNdUSpMyzLR5J3pJRnVJL",
-            "stake": "50355254281876922456900594898053"
-        }
-    ],
-    "prev_block_hash": "AiPNRMxpFfgkfA4DxLQi3rhPk47JcLCgYcqNzbCeSNrp"
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640118.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640118.json
deleted file mode 100644
index 1e3cc98..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640118.json
+++ /dev/null
@@ -1,165 +0,0 @@
-{
-  "prev_block_hash":"EQwwrQmvYBB8QMe3sLPcGbXv4rkujXBSGNBe84GAauea",
-  "next_block_inner_hash":"GgvCVYgELzgGD3gr1E5JPt9jQD8oD1f8DFMNCXEjiJk5",
-  "inner_lite":{
-    "height":12640118,
-    "epoch_id":"7WEzHz2SmhdDX8QviFTZnwuh93JA9f25u883oPzLmcx2",
-    "next_epoch_id":"3jBEHQmwWnQ1qAVx6YqDLpH8xoP9JGinjPawzUmaudHH",
-    "prev_state_root":"6LYYLfLZxLwM5mRAEc2LSybm8GCoZmY2eqsxQnxSyXK4",
-    "outcome_root":"3PGXmrkQLEk1AvWotynxk6mnVETXVuKzyXZ7rCVcnNHQ",
-    "timestamp":1597746205756946200,
-    "timestamp_nanosec":"1597746205756946260",
-    "next_bp_hash":"FG9yqQJiFn6YyV329HcMJ2TQtEdNwoP8xXaiivjJGwX8",
-    "block_merkle_root":"9i15yDPkjw8yZFLHpHVa5bnngm5nNrhhW9A5Yuw6rxQV"
-  },
-  "inner_rest_hash":"BnvBc9fAXDqK3fo17mhu7MyQBFaKQVpPgnpsFfsNj1Gf",
-  "next_bps":[
-    {
-      "account_id":"inotel.pool.6fb1358",
-      "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-      "stake":"218102268521960624716679057974"
-    },
-    {
-      "account_id":"node1",
-      "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-      "stake":"1251221493847579000162633013808"
-    },
-    {
-      "account_id":"node0",
-      "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-      "stake":"1115344401156123428021820528239"
-    },
-    {
-      "account_id":"dokiacapital.pool.6fb1358",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"209966067112193501594259533319"
-    },
-    {
-      "account_id":"node2",
-      "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-      "stake":"1247239866910668123969945562093"
-    },
-    {
-      "account_id":"baziliksub.pool.6fb1358",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"197500464066880160051178996502"
-    },
-    {
-      "account_id":"node3",
-      "public_key":"ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-      "stake":"1255299683036058297434742756314"
-    },
-    {
-      "account_id":"cryptium_voting.pool.6fb1358",
-      "public_key":"ed25519:9rAGmqEbPD2uES4aYvYXujB5RXLy7qthDU8TSLN7S11g",
-      "stake":"209828440500697699772027585569"
-    },
-    {
-      "account_id":"buildlinks3.pool.6fb1358",
-      "public_key":"ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",
-      "stake":"130588555610494602998162162570"
-    },
-    {
-      "account_id":"staked_vote.pool.6fb1358",
-      "public_key":"ed25519:5yiikr4EzveNdsDC2r4PPeBhxLBZEv6GsYhUb9Uw2Xq3",
-      "stake":"108549954636450884857201024816"
-    },
-    {
-      "account_id":"masternode24.pool.6fb1358",
-      "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-      "stake":"124591987729902838910586273194"
-    },
-    {
-      "account_id":"sparkpool.pool.6fb1358",
-      "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-      "stake":"140509872617203648917410078584"
-    },
-    {
-      "account_id":"bisontrails.pool.6fb1358",
-      "public_key":"ed25519:Br8jaPbedPekPPN7cQB3jQabLMq3Zmu5qwMutNPno26s",
-      "stake":"165065102793018189189677020407"
-    },
-    {
-      "account_id":"fresh_voting.pool.6fb1358",
-      "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-      "stake":"104516553229161390157694505213"
-    },
-    {
-      "account_id":"bisontrails.stakingpool",
-      "public_key":"ed25519:8Rav3p1X3VwptM5RSTMQJpFe1xymPYdkLjptTGrERPz2",
-      "stake":"216036524518841147014577714997"
-    },
-    {
-      "account_id":"top.pool.6fb1358",
-      "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-      "stake":"176389611749339200360134904356"
-    },
-    {
-      "account_id":"certusone.pool.6fb1358",
-      "public_key":"ed25519:HhZRKrV9oTYT941e9uPzc1RL1VSXyEpm2kYpU7x34XB7",
-      "stake":"145428005524987795511613533794"
-    },
-    {
-      "account_id":"01node.pool.6fb1358",
-      "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-      "stake":"128133915290686480750429103995"
-    },
-    {
-      "account_id":"jazza.pool.6fb1358",
-      "public_key":"ed25519:DervSGo47ozfmt1oP5kGdHm66RZnNPvaHwRv8mNKreWP",
-      "stake":"112077800217361485869760487438"
-    },
-    {
-      "account_id":"node.pool.6fb1358",
-      "public_key":"ed25519:C3Mra5dRxeRGmbLkhFBk8Q4z1YVznu3fAfJCwRm5ufQu",
-      "stake":"103775268044921648817423587332"
-    },
-    {
-      "account_id":"blazenet_voting.pool.6fb1358",
-      "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-      "stake":"104382127280470596525071461306"
-    },
-    {
-      "account_id":"staked.pool.6fb1358",
-      "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-      "stake":"131301166328785143444402007047"
-    },
-    {
-      "account_id":"moonlet.pool.6fb1358",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"106305779896228123439559270675"
-    },
-    {
-      "account_id":"hashquark.pool.6fb1358",
-      "public_key":"ed25519:EqyBTyrx2GsdNgc2BsPmjseaMrsCi2oZrMBqx43atJsL",
-      "stake":"134069781923738195521496854098"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:2nnfPLE5qNWfwnFNnZr82MV5VVfe3N1g6TLTaks7zBqQdJEjpVPuKypZi2snGvpqPWjp4Ycso7X6ioLkM7y2oKWf",
-    "ed25519:5rCAyaffGE8pXyrWk2vs12UY1h8DQi6HyjfCa4TraMbE3Te4x5LdZQVV2MR4FMSXVjsqrFHB4kNehd1Nx5woVjCZ",
-    "ed25519:3fdr3VuJLcM8DZNx61x3WQDYfr43fbewNqEbthHsxaV2wbYN76a1WwYC3xTDojQzqfwiHwaXYuu4ewuudxYaDyvT",
-    "ed25519:2J2MCj8zvGLsfPjsW7Deg1WdG6Ze9L1tmmf6yCNvBpd6Aq34Jfd6PaduKz5zKF41LrHRBVpyrkhZaSg3FEzivPFL",
-    null,
-    "ed25519:4GKPCrPVGZZoczVcn174YHZexFaPadGvPwcACLauju3K27vqujDtkernmzATCdQ7dAaGAfnTWa67Ma9VgMnt7BSz",
-    null,
-    "ed25519:3e9srNnwH7xGCrWkraYorWv3tgosk3dqy7JeEFnHZPxQbVWCs38H4qZrvtxMvEdSg71NBYy3gfQ3gAQ5bx1jZW7r",
-    "ed25519:3Znnjp3gyQfGkmwS8kMsmpCyRmxdbC646KD13K9zajKu2EUAmVaerZV7eDDLDagP3rhfMz3DA39haiKJrA1hLEuq",
-    "ed25519:2tnTkehxYHowDuWfE7HDyVVjqrHGS4WEJFzns3QgtbriDYHPDRrnJ3anLBUcnvmrhLbX1gVyoqGvXkrrn7UkGHNQ",
-    "ed25519:5viid84vogcLqQkcsAGvCWLY5i1hW2nknn49yuTcpqATPDpCjhLUxZgwjgN1YtFfVJQy5896wzbgkp4CtpYcpZiJ",
-    "ed25519:61MJTfVjtWsfkp6QiGZSMBxRYpV72y9w3xThCdyLqRr2j2CYvk9vi6RQKa3UiPQfLDjSFxTqCNqWL9of8HsKZxLc",
-    "ed25519:5YytVxSZ9jqtxHRxRWdyKrgwyALNvkqGoYrQdv7HPfny4HTmPcyTvVcBamzknMvApfCiQbTL5hL1UAHH7Ah7qepF",
-    "ed25519:54pGNjH2kEUy3jDRojCaA9rJNq3AVdcnVHrdWiycNdLvqypVpHRMic2DX6o4jCNACKNz7YQsHEZqAVQemjbUkrXr",
-    "ed25519:4aBuE4t5mo8xwtGZaPTbN6eoqC4M3P6VRC2iSHxK5MUJ6hcq9TU3Yot9DdTQGwmTKevTyokXYXvetcLDFQgc8nnL",
-    "ed25519:2nzmtp7Ny9ux8JY2Za81jsKzZVk5CyY8MaCKEKnbUxqv9YnoYMp2tA8CoNm5GR5pkvC39uumB4Ja6EqAc4tqbnB2",
-    null,
-    "ed25519:WwUiYoneUDPodEveLCiT1qyZ5hKrEtAJionKT3vtYB9iGfiiyQS1huCFT4J799HjCrDBxwSMU3PNZaNqTc268So",
-    "ed25519:5itAFv4Jm12iz9rozgrkuRNvJ1yEYCTa5po3vDKv8XtF3VfM6JJB6CzbDYma7Fo4pNMSeFs7f6SiHjUFZVNVDAmC",
-    "ed25519:4csXJTV7VM6hRtgPv78VFjPF7aEqhTfimP2YnaNBs6wC2y32myWGGuh9A2ctCoxnDiASJxWNKdhNsxxi1Gb5V7jK",
-    "ed25519:3uPbaCJTuSze2no5mp5ZtPRGspsgArrNhgDJ5M9JTZ6sRNmzpH9LgJ3u4WCW4KwfimaXmnk3e898cRm5bRfnE8sg",
-    "ed25519:3keBNGYXvFsfuLHprQWousEUQV5LDFasKbCnPqqbb1cNZrGYsd5Cx5HNrRaYKEfRDuVz4zBRn3jNd3885WunguvF",
-    null,
-    "ed25519:5j2y3FmqrWUorLZ4XQm3RYGw9Kt837hN22AUquQu1j3NMuhdbRvdSc8bw9gNDSAZ8rYh2en2iWAimjVtcEChs34i",
-    "ed25519:4XSMVx5ZsMhVVtKXbE64cpuBcGP4kwXD1tQK8VJSgT81oxoptr2HRcwnJC5APDn8sEqscUqyGDzqC6PBGiATmuP"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640218.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640218.json
deleted file mode 100644
index a0c670f..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_12640218.json
+++ /dev/null
@@ -1,165 +0,0 @@
-{
-  "prev_block_hash":"CFRELiLQzy5A9WfnEdbiroXkQ9H8u9i2miGcN9F6BXc8",
-  "next_block_inner_hash":"7Kw4USRrn2VLSCzYMHMapqeomnMPaZASRNAA3pmnGJLg",
-  "inner_lite":{
-    "height":12640218,
-    "epoch_id":"7WEzHz2SmhdDX8QviFTZnwuh93JA9f25u883oPzLmcx2",
-    "next_epoch_id":"3jBEHQmwWnQ1qAVx6YqDLpH8xoP9JGinjPawzUmaudHH",
-    "prev_state_root":"HwBL26HHeVXPn1UQKPUvCCX26dYgDrp8fa2BzXQHmjrV",
-    "outcome_root":"CD1JDepAS85prrufvSnwnNhE8FyTPCVifhd7W8YXC61W",
-    "timestamp":1597746334932876800,
-    "timestamp_nanosec":"1597746334932876747",
-    "next_bp_hash":"FG9yqQJiFn6YyV329HcMJ2TQtEdNwoP8xXaiivjJGwX8",
-    "block_merkle_root":"55MaZPkmEroKvjUjRAAfDSTkViCuJ9TiTzCK55edaWiD"
-  },
-  "inner_rest_hash":"4ypoTUtEjdZdkG5AUuvzyJKphnBSyqJE8dNfaxPEssNc",
-  "next_bps":[
-    {
-      "account_id":"inotel.pool.6fb1358",
-      "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-      "stake":"218102268521960624716679057974"
-    },
-    {
-      "account_id":"node1",
-      "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-      "stake":"1251221493847579000162633013808"
-    },
-    {
-      "account_id":"node0",
-      "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-      "stake":"1115344401156123428021820528239"
-    },
-    {
-      "account_id":"dokiacapital.pool.6fb1358",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"209966067112193501594259533319"
-    },
-    {
-      "account_id":"node2",
-      "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-      "stake":"1247239866910668123969945562093"
-    },
-    {
-      "account_id":"baziliksub.pool.6fb1358",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"197500464066880160051178996502"
-    },
-    {
-      "account_id":"node3",
-      "public_key":"ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-      "stake":"1255299683036058297434742756314"
-    },
-    {
-      "account_id":"cryptium_voting.pool.6fb1358",
-      "public_key":"ed25519:9rAGmqEbPD2uES4aYvYXujB5RXLy7qthDU8TSLN7S11g",
-      "stake":"209828440500697699772027585569"
-    },
-    {
-      "account_id":"buildlinks3.pool.6fb1358",
-      "public_key":"ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",
-      "stake":"130588555610494602998162162570"
-    },
-    {
-      "account_id":"staked_vote.pool.6fb1358",
-      "public_key":"ed25519:5yiikr4EzveNdsDC2r4PPeBhxLBZEv6GsYhUb9Uw2Xq3",
-      "stake":"108549954636450884857201024816"
-    },
-    {
-      "account_id":"masternode24.pool.6fb1358",
-      "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-      "stake":"124591987729902838910586273194"
-    },
-    {
-      "account_id":"sparkpool.pool.6fb1358",
-      "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-      "stake":"140509872617203648917410078584"
-    },
-    {
-      "account_id":"bisontrails.pool.6fb1358",
-      "public_key":"ed25519:Br8jaPbedPekPPN7cQB3jQabLMq3Zmu5qwMutNPno26s",
-      "stake":"165065102793018189189677020407"
-    },
-    {
-      "account_id":"fresh_voting.pool.6fb1358",
-      "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-      "stake":"104516553229161390157694505213"
-    },
-    {
-      "account_id":"bisontrails.stakingpool",
-      "public_key":"ed25519:8Rav3p1X3VwptM5RSTMQJpFe1xymPYdkLjptTGrERPz2",
-      "stake":"216036524518841147014577714997"
-    },
-    {
-      "account_id":"top.pool.6fb1358",
-      "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-      "stake":"176389611749339200360134904356"
-    },
-    {
-      "account_id":"certusone.pool.6fb1358",
-      "public_key":"ed25519:HhZRKrV9oTYT941e9uPzc1RL1VSXyEpm2kYpU7x34XB7",
-      "stake":"145428005524987795511613533794"
-    },
-    {
-      "account_id":"01node.pool.6fb1358",
-      "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-      "stake":"128133915290686480750429103995"
-    },
-    {
-      "account_id":"jazza.pool.6fb1358",
-      "public_key":"ed25519:DervSGo47ozfmt1oP5kGdHm66RZnNPvaHwRv8mNKreWP",
-      "stake":"112077800217361485869760487438"
-    },
-    {
-      "account_id":"node.pool.6fb1358",
-      "public_key":"ed25519:C3Mra5dRxeRGmbLkhFBk8Q4z1YVznu3fAfJCwRm5ufQu",
-      "stake":"103775268044921648817423587332"
-    },
-    {
-      "account_id":"blazenet_voting.pool.6fb1358",
-      "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-      "stake":"104382127280470596525071461306"
-    },
-    {
-      "account_id":"staked.pool.6fb1358",
-      "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-      "stake":"131301166328785143444402007047"
-    },
-    {
-      "account_id":"moonlet.pool.6fb1358",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"106305779896228123439559270675"
-    },
-    {
-      "account_id":"hashquark.pool.6fb1358",
-      "public_key":"ed25519:EqyBTyrx2GsdNgc2BsPmjseaMrsCi2oZrMBqx43atJsL",
-      "stake":"134069781923738195521496854098"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:4Y7Uqs8bnykAMDJGx1qGPu5mnhLRgjwrbAXgvyYV35YCe7A9ebgnUy9vFEqJhCc5uM4ZpY7yxsqqoEsj6DqestnF",
-    "ed25519:2o8mgdxSGNmSVs6qXfBpK8qGK8rQb2uNodmqmPcC8LSwj3xwe54cJEDyPsFjqZXEJyCzGxp5RREF5jGQyboTRYqn",
-    "ed25519:2m8qwtqJovmLGqWxXyueypUs54nNtAfFPyqQJHtvWkfVyDnq5jAFxNovS8MpGLciJv3NGZFdo67emsbiJbMNWx9c",
-    "ed25519:WLUJrRSz6XsmJ2RR9pgR1msSjdbZrCL8hur9sQbrhfDi5mz2oBQxEHYTdHS9ymAdU9naTbFDa9GCBXXyXWzdu9T",
-    null,
-    null,
-    null,
-    "ed25519:5qLsfNpoJrweCUUMU6ghU8oQmHN3kdWoA3uqnH4iJezdAn69voiFg8DC6FoGzrkz2nob1Uy7PZWF1iXgzZSvoLy5",
-    "ed25519:q2srLa3rjpigQogsJr5VLYYZrxC6RgGv2buy3yH8ZkXSoxfFzyuEY3Sf56dFudzBZz8QYRjP4hX3dmGqWbsqE5d",
-    "ed25519:47UC6TndHkhoat6BirwB5Yp2jz6ATPK7CcVUxcZN974sKd4EyTip1qpW9KQskjF3gogJsUjdYKN3ppBvhQNPvwNb",
-    "ed25519:2u3VtY3UEVnHFWHGJwfr5pQmFzeWY59EkdsGSDsoKZSeYXqrPttmn3vKPMxeBLN8Wi8JUZTYeao7qywacLVw1Hf9",
-    "ed25519:veTnrqksnFPyqwkZ2PGaAWVbYVXS6xtFynakZ35E99J6Xhe8KGjjcd6ADdcJBxsUKPhCnpYftfLVcmQ1hmuwK2G",
-    "ed25519:58k3VN1RHq8F86bQ2CCcxC2qQApoHjzHF1SFVwVfG1nkgmRgNTAX9oHGsFL9VFXZC9ZP4B8NkTYQzXXXSNBHR77R",
-    "ed25519:3iDMGtD6hypM2xfYcHpn97GhvPSAfFsYWjnVgU9i2DdDMTT7v5eDGhB758V2XFAh1UdSVdQ6VvFVGaagqX8NzYCW",
-    "ed25519:66fJQhAtAw1duPVdgkXTYXhU3VuhVUi66veC2j5DiWehRzhBeN518SqkVCutbbN4HF2FzSwtiysKm2i9pkV64m2J",
-    null,
-    "ed25519:5eDVsuGTbuqM4KqVcpzWZe237ijoGu2drJUAWgE4W9wwVByjhJf9DWVvRCj9NnB6rHRt6PX7iTQhKgLNvDiHz38e",
-    "ed25519:5vh8sGy6bPDFnSDAu7w14m3bajBo1ZJsgEv77x2y1BaH4vfN5ibbFShZhZGX8bqx2mmTGH3kZR2B2oGEux5Hw5tz",
-    null,
-    "ed25519:5F61qYxKYZkzm5VuzstPqCxRJE4UbvWKFRQXvWGMVoyvEMr7YRhFenqimPgZj6FbK4mpLHTrskL29nPuB9EPgK51",
-    null,
-    "ed25519:KsRq5YCyxWTd1PPFC1RXEBFMfrK6s3Sp1vQKyakL8gnVU79zmKkNA8cSRzGKCuu79Cekud39CV3AGCMtVU4oou8",
-    null,
-    null,
-    "ed25519:3DfUQLZswuLMxcJm6xxuy3WHq7wBzoF4mZKppJumv8ZDp9cnY98Kn52ceGmpoS3Y4qWtLER7gzBvraFhBpTwpiee"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178713.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178713.json
deleted file mode 100644
index b479319..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178713.json
+++ /dev/null
@@ -1,236 +0,0 @@
-{
-  "prev_block_hash":"4GxgMTWB9wixdWPPTLrfXH9wZWmRF8kaozrnjedgT3yN",
-  "next_block_inner_hash":"2tZib5wzkbFuGkRpj7z3TZ3sy6k8uPE5KUhvTNUDJ44c",
-  "inner_lite":{
-    "height":15178713,
-    "epoch_id":"3Y2LeXHxrsYoXiNSs1YTLiir7XUyrXqCy5RZWVpMjj2f",
-    "next_epoch_id":"F6Kte1BopdxesfLSx2C4qX5D2pfHJLK2tPwAfPBjW7yb",
-    "prev_state_root":"23H98AdLAuWJ45xueJ3uce7ppqJhPaJmkHRmzXAH2dhG",
-    "outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-    "timestamp":1599610800786885400,
-    "timestamp_nanosec":"1599610800786885484",
-    "next_bp_hash":"3mpWxraadKzTFnPx7oNDpTS6TiXiG7xLrXkEJ2rW5ipR",
-    "block_merkle_root":"DBSrnjke2qqWoRnRFBNgEkxTM1z3QQFJxJVXR5GyHTNd"
-  },
-  "inner_rest_hash":"4u48cKyeVQyVbFWHcgwY7nZQrSxCeott6vwLf1sWMYe2",
-  "next_bps":[
-    {
-      "account_id":"alexandruast.pool.f863973.m0",
-      "public_key":"ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",
-      "stake":"107173191597663585523525746269"
-    },
-    {
-      "account_id":"dsrvlabs.pool.f863973.m0",
-      "public_key":"ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",
-      "stake":"119451453112709816384635131094"
-    },
-    {
-      "account_id":"zainy.pool.f863973.m0",
-      "public_key":"ed25519:CnYuTtsUsmYM8WxQiC3UMAbdVnapHtwLT2S7WBFKhD7M",
-      "stake":"72852799958430931761534272218"
-    },
-    {
-      "account_id":"inotel.pool.f863973.m0",
-      "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-      "stake":"123432727217727761212405759400"
-    },
-    {
-      "account_id":"bisontrails.pool.f863973.m0",
-      "public_key":"ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",
-      "stake":"336176656044126300277146541359"
-    },
-    {
-      "account_id":"node2",
-      "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-      "stake":"1268346241475720087568057387055"
-    },
-    {
-      "account_id":"pool_easy2stake.pool.f863973.m0",
-      "public_key":"ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",
-      "stake":"122397138234589506779466946084"
-    },
-    {
-      "account_id":"top.pool.f863973.m0",
-      "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-      "stake":"119898836066057324986841673742"
-    },
-    {
-      "account_id":"fresh_lockup.pool.f863973.m0",
-      "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-      "stake":"139619718154621021957788001435"
-    },
-    {
-      "account_id":"node1",
-      "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-      "stake":"1313753104055069329020024981283"
-    },
-    {
-      "account_id":"node0",
-      "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-      "stake":"1313928341565675877507313830790"
-    },
-    {
-      "account_id":"kronos.pool.f863973.m0",
-      "public_key":"ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",
-      "stake":"102753264019650005274509265618"
-    },
-    {
-      "account_id":"figment.pool.f863973.m0",
-      "public_key":"ed25519:5vyPYDsCsxfJvgremrL1cRPfuFqgm62AsyC4AZYJM85w",
-      "stake":"91606290289796633983270788197"
-    },
-    {
-      "account_id":"01node.pool.f863973.m0",
-      "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-      "stake":"121106555067036708161091240204"
-    },
-    {
-      "account_id":"sl1sub.pool.f863973.m0",
-      "public_key":"ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",
-      "stake":"109278830231560542166170239817"
-    },
-    {
-      "account_id":"aquarius.pool.f863973.m0",
-      "public_key":"ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",
-      "stake":"88471539602392116738808466388"
-    },
-    {
-      "account_id":"bazilik.pool.f863973.m0",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"120679415892907117111390134328"
-    },
-    {
-      "account_id":"moonlet.pool.f863973.m0",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"98652874088329893947021598807"
-    },
-    {
-      "account_id":"staked.pool.6fb1358",
-      "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-      "stake":"199056759807572200425508675037"
-    },
-    {
-      "account_id":"certusone.pool.f863973.m0",
-      "public_key":"ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",
-      "stake":"125660363012937384021192901573"
-    },
-    {
-      "account_id":"nodeasy.pool.f863973.m0",
-      "public_key":"ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",
-      "stake":"90828895032286577298859651309"
-    },
-    {
-      "account_id":"staked.pool.f863973.m0",
-      "public_key":"ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",
-      "stake":"105830213003055269037660818310"
-    },
-    {
-      "account_id":"orangeclub.pool.f863973.m0",
-      "public_key":"ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",
-      "stake":"208202022929424471252944494731"
-    },
-    {
-      "account_id":"thepassivetrust.pool.f863973.m0",
-      "public_key":"ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",
-      "stake":"115110695650470114565756454966"
-    },
-    {
-      "account_id":"lunanova.pool.f863973.m0",
-      "public_key":"ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",
-      "stake":"118259887838174750120242604774"
-    },
-    {
-      "account_id":"dokia.pool.f863973.m0",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"167432217130375811242413280228"
-    },
-    {
-      "account_id":"bitcat.pool.f863973.m0",
-      "public_key":"ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",
-      "stake":"101101830043116301060736686489"
-    },
-    {
-      "account_id":"zpool.pool.f863973.m0",
-      "public_key":"ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",
-      "stake":"99512891516314260089253778858"
-    },
-    {
-      "account_id":"blazenet.pool.f863973.m0",
-      "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-      "stake":"112255207308548035105975728558"
-    },
-    {
-      "account_id":"masternode24.pool.f863973.m0",
-      "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-      "stake":"113584978915478143979523867994"
-    },
-    {
-      "account_id":"iosg.pool.f863973.m0",
-      "public_key":"ed25519:ENp2MvEsT4kVDRdyScSDJZeCMovVPPoodSfHVes1r43M",
-      "stake":"95085410110477417768019170089"
-    },
-    {
-      "account_id":"jazza.pool.f863973.m0",
-      "public_key":"ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",
-      "stake":"129183474509308730407487785636"
-    },
-    {
-      "account_id":"moonlet.pool.6fb1358",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"122874033898208491354065066976"
-    },
-    {
-      "account_id":"sparkpool.pool.f863973.m0",
-      "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-      "stake":"101926228632174257198533848344"
-    },
-    {
-      "account_id":"syncnode.pool.f863973.m0",
-      "public_key":"ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",
-      "stake":"92687242075644971666484304883"
-    },
-    {
-      "account_id":"stakin.pool.f863973.m0",
-      "public_key":"ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",
-      "stake":"93304393186632432779639241730"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:2aAUxF6maA1FzvgrRbBTRY39MNZSWB56wp2uXMswwMmfinHVKXC99Bbx6Nqn5fRcQ6UDksowhMn8wNCQAS37K89H",
-    null,
-    "ed25519:4t7eyZfGFLB5y1s2f6cTRKABswBb1YGvYapy8UfeHv94Dpt8gmxd4vKznHYVPa66UBxhmtrhihpRP6CPRgQj6JN",
-    "ed25519:65Vh5ky75H18UGRQpmtrAJEdsrcroQGthQSA8pCcqXm2G53ogcQU6HzPsskXmLaCYPJx1C5CPae9zTVbM7SrRvWN",
-    null,
-    "ed25519:2gcjpmXzqtw14thzFR2B3wiLf7m5e5Uwrq3wxFTGgEptweo931X6gqS3govKe44EKgu9x53ZNWq4Ay43d2JYEuXN",
-    "ed25519:2uN21heKG3n2tEVnw9ghckQPyRPpuLG5GTDXSQ3rYY6gCiAxT3aqBYnL6rWe92VZ9zTdwW5ye6cPv7TDbGqj2zoD",
-    "ed25519:362Q18K1gaQmPye19Hq6Xfi4hcjXYk2YUDEVvAP4siSg38yQVf4ud9D9TsRq3uZQM7axx1NsSDV3EeF3FUociwFm",
-    "ed25519:2aDdU7Tvw7eRXLA3sjDPNbLJZozBZcxEg5U9f64kPsB28kFAbLh2Tufux9NNakZyMLv1Qnso1CiozMVkDf5fXiAn",
-    "ed25519:5TnYqnCn4XVdYaceEbgkBR3pgTdMK8NPsPTj8kfMC83jcBdXbhL2bgbiYEwjJcdBhFh2HewrQMZHvjQzerk6apZJ",
-    "ed25519:5pHwCSy2b6bzH3Cn1ucRV8wDURdw7cmkYNbXv5urvdsXuS4JBVgdBfKho1prXrBVsQgRFYrpNzcAktXYfrF8ng5h",
-    "ed25519:4oLiywoqoggk5953QNfw7ybYmPYHgyC2KgSD3fsn7xwnwL2Ht2wY5dTHC6HcrzCRU4z5hL3gwrktXXMeXwMW2MYu",
-    "ed25519:5or3Zm12rFthdT93BuLLaMtsPxjUwyRrwZ8SHVAJAY7TG2asNXMDAywkbPKs4aqYnRYyA5oz1ihR5cVpouXxmKsQ",
-    "ed25519:5vgZWRRZWV9ujr8kmF31VWhN1LPDt1313DMVeZXEEpaEV6GC6feDzusfqmHFdj4v2pzh3oWwVzWWuzUbRyakqW68",
-    null,
-    "ed25519:5bbqAjxMTXxxPUgWxfJMfFiA6trunQW3JDXeCBAFSJCpwLWYymbghSoxuJAV8rccddiQA11y9Wu784TMU9bLRaD2",
-    "ed25519:4pTD7BbFe87uQBHUGzResTw4wss9idC1wePpqniyYRZak5G6itF3oF9JeeyxZ4DEcHZQ9HwT4JKkSFbqnqkQoTQh",
-    null,
-    null,
-    null,
-    null,
-    "ed25519:4QwthbHHvBjEB6JYx7tFUu7WHmjeQQMK6rKRkTEir6jD6p1RbYZn5gDKM33Dwis8igumrsVb92hjifLwdk7oVTRk",
-    null,
-    "ed25519:3zBBUBSKCkGUaSVTt3HNrYMwPFTEZnhRY3zEy5kr5xtdMdguc6FwK3iNiazK5G5WyeLufxLJoqZbuCKgVkZsw8fX",
-    null,
-    null,
-    "ed25519:5EDLUEZhkUbeAeu2Txd8kSo3YCCVgstWQPEQNdsCNT3pcBWLdcfT4hUxfXvzpBzYRjM8jWgmk1ivKxANcFVYJpZD",
-    null,
-    null,
-    "ed25519:4VBVmJijexgCfrYpSCr9K2rVk84DVNqjfzH8digA6xf2QVRbzVZcRiFWhnSaEJYHYzUuxEQVsToXiJVwp9eVjGqb",
-    null,
-    "ed25519:38p9Yr7Ec8XdHGcefK14zMh15YECrniELUZtttRuK2SZ6hLZcn2oTaW5p3ZuGKQzGNZEyVxvdFtVjoVPEE3rudHZ",
-    null,
-    "ed25519:5aYiTVUBNvwLuVyYUJ598Tcvent2E7hyw6MuTFioVW1PLCpb7h16SMr58QB74fFAs86znzmohdP5vjTYvTb5Dg6G",
-    null,
-    "ed25519:221Sa21DeVZEfyKTgGSYtguFeqdpHqfssH1yvSxn4JReQ439cQkmBzZwi9hS1JXD97UMrjmYX1Qp9iC35iKCK81D"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178760.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178760.json
deleted file mode 100644
index eae2df4..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15178760.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"EHj7xo8oPieAZ3BQ48anjoSEMsmEWsWXNmiYFUDrKhTf","next_block_inner_hash":"BU4Zr9iJeUjyLCJWC6KeEjic7ptbtSMd91pFMJjzcXvt","inner_lite":{"height":15178760,"epoch_id":"3Y2LeXHxrsYoXiNSs1YTLiir7XUyrXqCy5RZWVpMjj2f","next_epoch_id":"F6Kte1BopdxesfLSx2C4qX5D2pfHJLK2tPwAfPBjW7yb","prev_state_root":"DfjMtVcAkmndrWejLdvU2vfaGA6ftR49vuqQmUFSrxee","outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t","timestamp":1599610830921339000,"timestamp_nanosec":"1599610830921338861","next_bp_hash":"3mpWxraadKzTFnPx7oNDpTS6TiXiG7xLrXkEJ2rW5ipR","block_merkle_root":"BAgUjDATxWK5Cvzkd1yvmWCrqz2eroE784KTgvp6bpK8"},"inner_rest_hash":"CCKQ6Jqxdmu4SUM27yUd8QBXQAPAwHAu2tTcuwo23yqH","next_bps":[{"account_id":"alexandruast.pool.f863973.m0","public_key":"ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj","stake":"107173191597663585523525746269"},{"account_id":"dsrvlabs.pool.f863973.m0","public_key":"ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9","stake":"119451453112709816384635131094"},{"account_id":"zainy.pool.f863973.m0","public_key":"ed25519:CnYuTtsUsmYM8WxQiC3UMAbdVnapHtwLT2S7WBFKhD7M","stake":"72852799958430931761534272218"},{"account_id":"inotel.pool.f863973.m0","public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ","stake":"123432727217727761212405759400"},{"account_id":"bisontrails.pool.f863973.m0","public_key":"ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR","stake":"336176656044126300277146541359"},{"account_id":"node2","public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5","stake":"1268346241475720087568057387055"},{"account_id":"pool_easy2stake.pool.f863973.m0","public_key":"ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh","stake":"122397138234589506779466946084"},{"account_id":"top.pool.f863973.m0","public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx","stake":"119898836066057324986841673742"},{"account_id":"fresh_lockup.pool.f863973.m0","public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG","stake":"139619718154621021957788001435"},{"account_id":"node1","public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e","stake":"1313753104055069329020024981283"},{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"1313928341565675877507313830790"},{"account_id":"kronos.pool.f863973.m0","public_key":"ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ","stake":"102753264019650005274509265618"},{"account_id":"figment.pool.f863973.m0","public_key":"ed25519:5vyPYDsCsxfJvgremrL1cRPfuFqgm62AsyC4AZYJM85w","stake":"91606290289796633983270788197"},{"account_id":"01node.pool.f863973.m0","public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL","stake":"121106555067036708161091240204"},{"account_id":"sl1sub.pool.f863973.m0","public_key":"ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL","stake":"109278830231560542166170239817"},{"account_id":"aquarius.pool.f863973.m0","public_key":"ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1","stake":"88471539602392116738808466388"},{"account_id":"bazilik.pool.f863973.m0","public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c","stake":"120679415892907117111390134328"},{"account_id":"moonlet.pool.f863973.m0","public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K","stake":"98652874088329893947021598807"},{"account_id":"staked.pool.6fb1358","public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj","stake":"199056759807572200425508675037"},{"account_id":"certusone.pool.f863973.m0","public_key":"ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF","stake":"125660363012937384021192901573"},{"account_id":"nodeasy.pool.f863973.m0","public_key":"ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb","stake":"90828895032286577298859651309"},{"account_id":"staked.pool.f863973.m0","public_key":"ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2","stake":"105830213003055269037660818310"},{"account_id":"orangeclub.pool.f863973.m0","public_key":"ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz","stake":"208202022929424471252944494731"},{"account_id":"thepassivetrust.pool.f863973.m0","public_key":"ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod","stake":"115110695650470114565756454966"},{"account_id":"lunanova.pool.f863973.m0","public_key":"ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw","stake":"118259887838174750120242604774"},{"account_id":"dokia.pool.f863973.m0","public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9","stake":"167432217130375811242413280228"},{"account_id":"bitcat.pool.f863973.m0","public_key":"ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx","stake":"101101830043116301060736686489"},{"account_id":"zpool.pool.f863973.m0","public_key":"ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V","stake":"99512891516314260089253778858"},{"account_id":"blazenet.pool.f863973.m0","public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3","stake":"112255207308548035105975728558"},{"account_id":"masternode24.pool.f863973.m0","public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr","stake":"113584978915478143979523867994"},{"account_id":"iosg.pool.f863973.m0","public_key":"ed25519:ENp2MvEsT4kVDRdyScSDJZeCMovVPPoodSfHVes1r43M","stake":"95085410110477417768019170089"},{"account_id":"jazza.pool.f863973.m0","public_key":"ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9","stake":"129183474509308730407487785636"},{"account_id":"moonlet.pool.6fb1358","public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K","stake":"122874033898208491354065066976"},{"account_id":"sparkpool.pool.f863973.m0","public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb","stake":"101926228632174257198533848344"},{"account_id":"syncnode.pool.f863973.m0","public_key":"ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE","stake":"92687242075644971666484304883"},{"account_id":"stakin.pool.f863973.m0","public_key":"ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4","stake":"93304393186632432779639241730"}],"approvals_after_next":["ed25519:53WkkqNk6exMia38rDiwkKzsm8Uu5iGM5HSouEvZjVrcj9NCPNcrkz4r5ZM8jAYGU5PVyx1RehfCvGxGdzDY1DH8","ed25519:2gVRCx2yeokBKwTCRB9oRZKnzHGbiiedor7YUw1Ks86DpZYRaBdheCq52PkxTrJyved5PBpxTs9avJxWJQSFHxgw","ed25519:4kwob2zUaoh7S18qoAPC5GUmSc4pNCipdJY9kRJ5h8J71BCQ5aYo3rsfjVpeFe2CtEF7ZuuLzmik3V7cjUSwcPMp","ed25519:5dD4bmcoZHNoVYDc87jnpRqn79sAkXpaEzuZFSKH1Zea13ARMujYrirkuwbvJcA9AAiXeUHRxNZh2KehHdELEB2B","ed25519:2gMi9fMhwaJPatTPHQY7tGsM9dHgqU9ax37Cn9fpbc1pgPYTnzekfvLwC7L5cVkWKS1L1mFwcKkJHX8UKbX3V3Xw",null,"ed25519:5VtmsPQuv4XKybU5i2tgLQgJ5wakmkw9GZbXQG3g18ihkrGAYcmoRa7gHGCgdripVFmDMLD3XRWhbiUgJhsiGtPw","ed25519:5sMDHBq5WWiR582oYE3B5DJtnbbE8Ma6UuuPja3LRmoobs2Uqu99wdwddaELBs98WevxGpQrM1JUVrqZAyA7VeqT","ed25519:4gGAqSjtqRu6corjEDFVpfWBMMPruwXPUMu4e1dq26p6hMVEdJ6N3Vvkgov1F7g1D1pgqs23AiZ4SULvU33wfZ9g","ed25519:4LPcDNQhLJseyX8X3WyQU9gjKY6cvYNA6Lv44PKMsn9CJe6K5FBY4iHCuXg5KPt1KMK7HDUo2H6J3CVFCdZzWapm","ed25519:3D14Qs6FTih9nvkTHXac6JGVM9sxDvie6URcFJ8WbYgu7ro92RXT3Gm4Mt52LzQzCw4FRtaWctXEQPnzLuYsiZr5","ed25519:3jbvUCpCjKSLN1URhbYi3sYWAPyyuaNMhfo4fkp2S6ERMn8Xfxb4dBXwxAoju459AMAyvTkJtqG5aYRSUcGTLUY3","ed25519:57RVJYeKu3N2RJWqZozjkexNUeqYdNETY7AwjsJFvtomXW6svgnDuufTSmHqNsqEkGUxEJzCfk3gt1RXo3egsmkw","ed25519:52YiopXmjz4js65judtZn5kY3UnBsUQgbdDxHzCwXgSqxHFNTd4yY1UAWx1KHHkugvakYLStirDDMKNXo5gSHAiE","ed25519:6Noi9AfrVnKc1Jy2ZfUk4pQXy77AXHqCNYy9pkkoeTuPiQPQpKQZrteBqshNmBmhXooEgAk4K2g7PUjGQzbnmyY",null,null,"ed25519:2t5iVz2VX3VTEKsq9rDK1cS1Ca7bRGDKeQRWMwwYkx7GrzkcQFzZKJ5C4BYQ1ms1r7jUzPpw2jshn4BQHQkggejj",null,null,null,"ed25519:35smaqmMq9T1MDLJGEJkKUGdBpwPMX5euo4YbwMSsuPUc8NBLRqpwmMCtsbyaqKan8vVFDHDxg6QmHrz8oDyetmW","ed25519:2dP84wyfk7sKFpq7CixAevSRcRqetJLHtXQKxUmasfYqgYwERoSqh6bQzaf8nRynYh1UJ2XCMCS1ewmnPqHaoqP8","ed25519:21nnwu8qL5vNKQWUkzzo3rNYABHYjNjsKwMAngSokyH3vuPteLuwZqd2tY8NHcoWQH6L7TDfmVe6hX7RniCRhHVE","ed25519:2dsMnVq553dY4ThzxGqqWqjxgPaq3WDzTeJMeELtDVHTeYefyFf12qhHuvvGmcJg69EpHw4Lc7X1TWm471c8NQ6N","ed25519:i5RChcR1nfrVdkPfDT5zKPovETB24TasMBqTyovKa9d2qFCRqp4zW6LTdUKhmzpy7c6eaNHL44kFEuAb75AsTv1",null,null,"ed25519:5uUdKtTBvA7NZw7zkmF4K2D5nvPPvfeaH9H3nFviV2uGDfWirLvrsJCVZZnYCdHVAnbjLXnekomEjUT8kQrjMoz3","ed25519:4DPcmujCiJduhn8rC7juVTuzs16sGXqcYTuGt4TjoAGR3Yxb5MxPvpg8xXU6fo2tuSkFsZPHmW2nGBHecCSqar1V","ed25519:4CRoHFtz3rgPbPJkjv6Ly7qos5q1KZyFjDvytTN2YgzAdCnSU4RyTKny1khmNJHHNDd3RrmUvrgx7xiiisTSW2aB","ed25519:3GMGzFE8DiJueqZr7pARjRz7gnn3P62ZFDZwEBdctV97iVLLmGTp1RJjYPuPUhgL695pbpnLP45LC52EvafKDvA4","ed25519:5MUFAZKFJER8vsyCLYD5kfbtQbTdEtGVDNiQtPA9721gw2YuURVVRi5rNX5EdLeFJ5bciZWhnMHCS9UX8yJFTXfX",null,null,"ed25519:4tQKhSgXMmUuemeZqRsUsgFBpvhq5xYNVB46dAsj52JiazCa3a8rNjPgJcfb9ZanPz7bKGqJADJT8cnKqJwh4Baq"]}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15204402.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15204402.json
deleted file mode 100644
index 8e1902b..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15204402.json
+++ /dev/null
@@ -1,236 +0,0 @@
-{
-  "prev_block_hash":"GsQ1yYfeZz2QW8JKS7FoJTh1P31yayn8M1HDVFrvAoQb",
-  "next_block_inner_hash":"xh1vN4ocBW59ehnebTVcGhGL7J1tpDxnpBpYffknkSM",
-  "inner_lite":{
-    "height":15204402,
-    "epoch_id":"3Y2LeXHxrsYoXiNSs1YTLiir7XUyrXqCy5RZWVpMjj2f",
-    "next_epoch_id":"F6Kte1BopdxesfLSx2C4qX5D2pfHJLK2tPwAfPBjW7yb",
-    "prev_state_root":"Bs8NHLP9CzHZc37KJCC8EzYp4Z5ydvRfL2gKH3v1SNTC",
-    "outcome_root":"2ywWmpLFDEg2zPEFTat1dbbbwWJYwbLEgCA6yHo8SuMo",
-    "timestamp":1599627215242035700,
-    "timestamp_nanosec":"1599627215242035740",
-    "next_bp_hash":"3mpWxraadKzTFnPx7oNDpTS6TiXiG7xLrXkEJ2rW5ipR",
-    "block_merkle_root":"CKyXksF2wjDY2fuxGTictrzU6xxQwB1ah5xFYT33JrcQ"
-  },
-  "inner_rest_hash":"78Y7ExVAnBpyx9SGYJffaKuRaQY4fBYV22CJtXBkDDvX",
-  "next_bps":[
-    {
-      "account_id":"alexandruast.pool.f863973.m0",
-      "public_key":"ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",
-      "stake":"107173191597663585523525746269"
-    },
-    {
-      "account_id":"dsrvlabs.pool.f863973.m0",
-      "public_key":"ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",
-      "stake":"119451453112709816384635131094"
-    },
-    {
-      "account_id":"zainy.pool.f863973.m0",
-      "public_key":"ed25519:CnYuTtsUsmYM8WxQiC3UMAbdVnapHtwLT2S7WBFKhD7M",
-      "stake":"72852799958430931761534272218"
-    },
-    {
-      "account_id":"inotel.pool.f863973.m0",
-      "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-      "stake":"123432727217727761212405759400"
-    },
-    {
-      "account_id":"bisontrails.pool.f863973.m0",
-      "public_key":"ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",
-      "stake":"336176656044126300277146541359"
-    },
-    {
-      "account_id":"node2",
-      "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-      "stake":"1268346241475720087568057387055"
-    },
-    {
-      "account_id":"pool_easy2stake.pool.f863973.m0",
-      "public_key":"ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",
-      "stake":"122397138234589506779466946084"
-    },
-    {
-      "account_id":"top.pool.f863973.m0",
-      "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-      "stake":"119898836066057324986841673742"
-    },
-    {
-      "account_id":"fresh_lockup.pool.f863973.m0",
-      "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-      "stake":"139619718154621021957788001435"
-    },
-    {
-      "account_id":"node1",
-      "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-      "stake":"1313753104055069329020024981283"
-    },
-    {
-      "account_id":"node0",
-      "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-      "stake":"1313928341565675877507313830790"
-    },
-    {
-      "account_id":"kronos.pool.f863973.m0",
-      "public_key":"ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",
-      "stake":"102753264019650005274509265618"
-    },
-    {
-      "account_id":"figment.pool.f863973.m0",
-      "public_key":"ed25519:5vyPYDsCsxfJvgremrL1cRPfuFqgm62AsyC4AZYJM85w",
-      "stake":"91606290289796633983270788197"
-    },
-    {
-      "account_id":"01node.pool.f863973.m0",
-      "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-      "stake":"121106555067036708161091240204"
-    },
-    {
-      "account_id":"sl1sub.pool.f863973.m0",
-      "public_key":"ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",
-      "stake":"109278830231560542166170239817"
-    },
-    {
-      "account_id":"aquarius.pool.f863973.m0",
-      "public_key":"ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",
-      "stake":"88471539602392116738808466388"
-    },
-    {
-      "account_id":"bazilik.pool.f863973.m0",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"120679415892907117111390134328"
-    },
-    {
-      "account_id":"moonlet.pool.f863973.m0",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"98652874088329893947021598807"
-    },
-    {
-      "account_id":"staked.pool.6fb1358",
-      "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-      "stake":"199056759807572200425508675037"
-    },
-    {
-      "account_id":"certusone.pool.f863973.m0",
-      "public_key":"ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",
-      "stake":"125660363012937384021192901573"
-    },
-    {
-      "account_id":"nodeasy.pool.f863973.m0",
-      "public_key":"ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",
-      "stake":"90828895032286577298859651309"
-    },
-    {
-      "account_id":"staked.pool.f863973.m0",
-      "public_key":"ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",
-      "stake":"105830213003055269037660818310"
-    },
-    {
-      "account_id":"orangeclub.pool.f863973.m0",
-      "public_key":"ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",
-      "stake":"208202022929424471252944494731"
-    },
-    {
-      "account_id":"thepassivetrust.pool.f863973.m0",
-      "public_key":"ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",
-      "stake":"115110695650470114565756454966"
-    },
-    {
-      "account_id":"lunanova.pool.f863973.m0",
-      "public_key":"ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",
-      "stake":"118259887838174750120242604774"
-    },
-    {
-      "account_id":"dokia.pool.f863973.m0",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"167432217130375811242413280228"
-    },
-    {
-      "account_id":"bitcat.pool.f863973.m0",
-      "public_key":"ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",
-      "stake":"101101830043116301060736686489"
-    },
-    {
-      "account_id":"zpool.pool.f863973.m0",
-      "public_key":"ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",
-      "stake":"99512891516314260089253778858"
-    },
-    {
-      "account_id":"blazenet.pool.f863973.m0",
-      "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-      "stake":"112255207308548035105975728558"
-    },
-    {
-      "account_id":"masternode24.pool.f863973.m0",
-      "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-      "stake":"113584978915478143979523867994"
-    },
-    {
-      "account_id":"iosg.pool.f863973.m0",
-      "public_key":"ed25519:ENp2MvEsT4kVDRdyScSDJZeCMovVPPoodSfHVes1r43M",
-      "stake":"95085410110477417768019170089"
-    },
-    {
-      "account_id":"jazza.pool.f863973.m0",
-      "public_key":"ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",
-      "stake":"129183474509308730407487785636"
-    },
-    {
-      "account_id":"moonlet.pool.6fb1358",
-      "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-      "stake":"122874033898208491354065066976"
-    },
-    {
-      "account_id":"sparkpool.pool.f863973.m0",
-      "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-      "stake":"101926228632174257198533848344"
-    },
-    {
-      "account_id":"syncnode.pool.f863973.m0",
-      "public_key":"ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",
-      "stake":"92687242075644971666484304883"
-    },
-    {
-      "account_id":"stakin.pool.f863973.m0",
-      "public_key":"ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",
-      "stake":"93304393186632432779639241730"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:58hjypwyV7kji88wGguKkDs52cWFs4uAVqArECpMSXzEk4FAeWa2SMefaWokXYS7gEmqYNo7noVYo2thHPABYJ1A",
-    "ed25519:tB1BZtvA1Yp2sFt6gWYwDzf8a6mY3C1gH3YULSzuiiWcgdYx6WLtFAMRmwNYo5ZMQuxUyPSUsrovKNi5U1j4hj5",
-    "ed25519:5wjuWmTy5Z5nQzAjELErvRAwewzkvbiFbGR5WsyBtNTvPpiyhSZixRsoNCCcnmNxQgJuaA9hTrzct42gyfyKHym9",
-    "ed25519:2UfE6NVknvAB3PW38kSqVXA19ByCfLm2gfbwpx8BFsZ8xZ1mjyfvrWRniCM5MJ4F6e5NcTHRqaReyMctfXBjczd5",
-    "ed25519:5cANypaB55JXVRiLAfmARNg5Zrw8dotGxsGNSD3HX6H6JDYWRuYPSbK3dvUZhg7qVbcroqNSQJw9WqswWRr66FJ4",
-    null,
-    "ed25519:7izzJmQneFgg2iTEMPFWqyXpMvAX6dnqCZfDvVoJF7nwns58Qj4vJENb2TopH9MwrLevxEHqKgFGyJCoFXzCAn8",
-    "ed25519:2btpZJSWyrj32xp5vZ2qe2cFosAeQnJ5duhv8CcdLH2wKtSeUCpBNFhAdWY6Y12XUCcuXBAPfKA24neVSYLtThY7",
-    null,
-    "ed25519:5bmYG2T75ef16Nfoq8e6mBcyqLTLpVXCMf9U51M4hqjJD8pA3WZE3FNqGirn6WpCFudW6915rDdKTGUVYkKquHU5",
-    null,
-    null,
-    "ed25519:4uWWCCbgNTALLBKjreVT5ZfsQVNzrDRSUg16xN8GNnYgub5wNCt3EjiNqQ5tdmdYHCopjhRzckxfciGsgSoT64jt",
-    "ed25519:5pSPVoNv3gr8WBe8PLYcEuuMGpSNeAbqxjp6sH82kb5x15M8PLuSvVMtzAQqVwbdK5Pv2QR81De6PHQSJKttSEAv",
-    null,
-    "ed25519:3xHBEqTDVZs37Ruc6ZQ7kVfu6rh9K1xggV6p91JoffWFUMvLuNZAnKNZv8jxoz193uGeQq9tJtrKp1AcU2aTrEsz",
-    null,
-    "ed25519:5y32qwWrmKd6obNQXKkzzyb9mrLYFNGFkvXshwqAYmsxKCZ3EK5jVK6kd2UW5D3YpQpYYLYwVRZyqayvAqRrcVcc",
-    "ed25519:3VqKwcCnguySr2kqpoKPQSvNB4nszRbrRtSegAo3LRKpXA6jYLFHDNFaB7CKyGjNPc6fm8xwVfjX417jzCFDkjH3",
-    null,
-    null,
-    "ed25519:5tYqDhwfkRH2iz1ZAGMfnCXkfiDJHRLqhP5ngjxPH9XFBw3i6q5RxyS2XCyTN2rFPXVFJDgfULMS9rdmnPVt6hE6",
-    null,
-    "ed25519:5omcDNdb5Zj5QrpjYuUny9VxXNpJ82L5yN65pQ5cpAh6GoNaxYPCw2bH5ds9Dg9rUomJhM1g7E46ThqeVePKQUGU",
-    "ed25519:gt9jfzpFiu6xsWESoxNtvqT3G7vRnLBGkZvVJ9f4VMYcsfL3FCdLtk64Gp61Wpn6AiyBqSzUBgcPMKhC8fN9s7L",
-    "ed25519:fWtkaXSVWvU2wzqJj6AkNcLKd3aNsPB3cgfNLPJZiKtBzt6qabqBY25hNkLnryKc7uV9CoUwQg96hv7FGKTWn3H",
-    "ed25519:A22mNPwd12GTte974BDHz64MT5USVC3rEddjid5hABju3vy46zMaSGtBvqS96QcaxkoQM6YYp5j7CPANXuZUJgS",
-    null,
-    null,
-    "ed25519:KVAS5Jz5kgpRgHq2YWg8V5oL4q7EmMBjvphshB3K74bERwx7SKDKKxnxFvmpUoW38pqK2JyUWJztwmbcPAwQbxn",
-    null,
-    null,
-    "ed25519:362HotU5YXkVmVfCkBvNGLX7aQaXRbjSkHvqCEU3s6DMtg3tRBc43sy2p3AsUQ8VLesZ8s3tdRH7zDGwY9ukXdME",
-    "ed25519:64XSkHZ1fgJnwJESDSs4dyz6pvVtUrCSCKjdG3XrAirSfvmq6xCzTjUNbg4d9F7tPkHL55iD6UkCcZH9nyzd5jvd",
-    null,
-    null
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15248583.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15248583.json
deleted file mode 100644
index d02c24c..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_15248583.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"ErGDUJMWFmbeVNT3JCoh8duqW8Y3PTdq67CMYNLonAUs","next_block_inner_hash":"2XQ6D9NUMQqqgn1BrFVmYzDBaRwA3TVh7LP7v1PEpnK3","inner_lite":{"height":15248583,"epoch_id":"F6Kte1BopdxesfLSx2C4qX5D2pfHJLK2tPwAfPBjW7yb","next_epoch_id":"5VBa1vppQWipxu2ubUtpNcf8GhSuN4FqGRBkoKE4NAJB","prev_state_root":"EqnKYC2RWAXKVrufeF9zUsc2R3gt8BjHSQ5XvPHvyYX6","outcome_root":"3vgzgGAzUnhj7mJePJqZNAJhovMYeySUjMsaV1tiE5Jb","timestamp":1599655442193278000,"timestamp_nanosec":"1599655442193278028","next_bp_hash":"GbsoqPiupovuXm912uP2nrkcgrB64qdfPcQjLLx2Gqwb","block_merkle_root":"qYv9dSPUBPQiMCjzUUPiyb25wfSQYqZwv4Fu7mTYAcR"},"inner_rest_hash":"GyuYe5Z1DT5TdNc1cFvxASqEydhUqxn8jpmyeAdxLiPB","next_bps":[{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"1324482328078707348260913863277"},{"account_id":"bisontrails.pool.f863973.m0","public_key":"ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR","stake":"338879157567662027993155061366"},{"account_id":"inotel.pool.f863973.m0","public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ","stake":"124424186738459132030802645040"},{"account_id":"orangeclub.pool.f863973.m0","public_key":"ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz","stake":"209874383036494420757856919511"},{"account_id":"node1","public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e","stake":"1324305682991854050339888348207"},{"account_id":"dokia.pool.f863973.m0","public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9","stake":"168788693189613005868446813476"},{"account_id":"node2","public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5","stake":"1278534094726863167984682179343"},{"account_id":"iosg.pool.f863973.m0","public_key":"ed25519:ENp2MvEsT4kVDRdyScSDJZeCMovVPPoodSfHVes1r43M","stake":"95849173326587239459692806193"},{"account_id":"staking-power.pool.f863973.m0","public_key":"ed25519:4s79F6Fdjgb3rHXPLwaXZG4Hq7Za8nogUu3vXEamRBQo","stake":"75499001037217435495800000000"},{"account_id":"pathrock.pool.f863973.m0","public_key":"ed25519:G138GdQsU7PdFLD6X88NmTLAEDR7agPcq9HLZqGpegkm","stake":"75180001845434730061700000000"},{"account_id":"top.pool.f863973.m0","public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx","stake":"120861910426741718830988640937"},{"account_id":"blazenet.pool.f863973.m0","public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3","stake":"113156885049732071336126978623"},{"account_id":"dsrvlabs.pool.f863973.m0","public_key":"ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9","stake":"120410933919422276161522465008"},{"account_id":"bitcat.pool.f863973.m0","public_key":"ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx","stake":"101913894720129910228907064200"},{"account_id":"figment.pool.f863973.m0","public_key":"ed25519:5vyPYDsCsxfJvgremrL1cRPfuFqgm62AsyC4AZYJM85w","stake":"92342107854303468233126171019"},{"account_id":"thepassivetrust.pool.f863973.m0","public_key":"ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod","stake":"116042005012709421694439233526"},{"account_id":"bazilik.pool.f863973.m0","public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c","stake":"121648760177098885496383518789"},{"account_id":"nodeasy.pool.f863973.m0","public_key":"ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb","stake":"91558468889672232508059343455"},{"account_id":"lunanova.pool.f863973.m0","public_key":"ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw","stake":"119209797526392191325934434552"},{"account_id":"zpool.pool.f863973.m0","public_key":"ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V","stake":"100312217995324872174613566211"},{"account_id":"01node.pool.f863973.m0","public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL","stake":"122079330300192998729092564813"},{"account_id":"alexandruast.pool.f863973.m0","public_key":"ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj","stake":"108034048603955423551907597831"},{"account_id":"staked.pool.6fb1358","public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj","stake":"200655641864357045825503702772"},{"account_id":"joe1.pool.f863973.m0","public_key":"ed25519:G3SxwzmiEZSm3bHnTLtxJvm3NvT1TLQcWuV1iod6i6NJ","stake":"75480000412219679923400000000"},{"account_id":"masternode24.pool.f863973.m0","public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr","stake":"114505203871155775353901940736"},{"account_id":"sl1sub.pool.f863973.m0","public_key":"ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL","stake":"110156600589397032556257555582"},{"account_id":"jazza.pool.f863973.m0","public_key":"ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9","stake":"130221126719514624969597420914"},{"account_id":"certusone.pool.f863973.m0","public_key":"ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF","stake":"126669716213189431149025917969"},{"account_id":"kronos.pool.f863973.m0","public_key":"ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ","stake":"103578618962850310588092602710"},{"account_id":"fresh_lockup.pool.f863973.m0","public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG","stake":"140741195285550933533513419399"},{"account_id":"moonlet.pool.f863973.m0","public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K","stake":"99445268746300137013714042335"},{"account_id":"pool_easy2stake.pool.f863973.m0","public_key":"ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh","stake":"123380278612462492982494529511"},{"account_id":"staked.pool.f863973.m0","public_key":"ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2","stake":"106680279100022673560774379542"},{"account_id":"kytzu.pool.f863973.m0","public_key":"ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU","stake":"75480008476421513660000000000"},{"account_id":"stakin.pool.f863973.m0","public_key":"ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4","stake":"94054789557126204158737846962"},{"account_id":"aquarius.pool.f863973.m0","public_key":"ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1","stake":"89182176188294579033950497317"},{"account_id":"sparkpool.pool.f863973.m0","public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb","stake":"102677689399739115609832287510"},{"account_id":"syncnode.pool.f863973.m0","public_key":"ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE","stake":"93431742267817395698694195338"}],"approvals_after_next":["ed25519:5Tc4LwS3xYx6JrqFxmmnfeLGSpLRguWCA2JwwUfwQPhmEj9KtJvgL7tW8hxBmjDbVb817sT2EeKSsXCBDP1AQgJ4","ed25519:2oEaFAnK78Xp751ELmbxdSbUj8Q1rQhWmAXyLwrSLEeUPByLqC5m3NwEXpLcsmrSRLoYiTAbbtdsSJ3SLjLE7q3o",null,"ed25519:3QUhsUN6j2PpQBRPKU153DC6NJiF9gSCuzuoPLVAgNbWJrCDE3Ag75qh3S3g5EmWGyBvyJpJxqdFnry3ecqXErE4","ed25519:3N7g2cYhxnyoxzw6jkEZ3RqBXat169jxDc4cMq7jqxmnbZw4GYGyW9gBrarHL4z1vpHSh6wj46BKxhV5BxWoRAnN","ed25519:4ji1HC4CxnV4jEbeR7M3e1KJsxPj6MLtB3UgJAPGrSVrHje5aYAiaUcaR7qdch84BUvKsuz83yWyrThjVcQxHqAn","ed25519:2AGC9SiYxfLn7a6bEiv57tUaMWcwvDmy4bNujHH9VrADASTfq95zZSTvu5ZnVR8oomWzQ3PU6NqsAZfxye9QMsYb","ed25519:2ZtFGMMEiPvA9o32SCCDSEK5Cb4rYZs1tfU7Zwodk29BMAY3NPMATRSJWWt8xEaEpgrKNkTe4mGNrQYvonKGdviw","ed25519:38KgHeZfH4fTjoShxRpdUwkXRHKunPdzFdoHYNkVuxGYqf4FKNBuHmcYGiXonGjrxQ5WK8kGgruBRQPSFJZ5zXsJ",null,"ed25519:5aWsg5wSTtBSTZp1DcjuNgMxPw1BzfivAtcDvnP4VtJxTvxhppsXqLhR2LpkewxKnKc9MmkuWtubNMiLo8x1vHFv","ed25519:DazKADj8wsVzwRyxyjdSipFa9BWjJ2ckksjxACu178o82nXTuucU3AAdVF39dvCSD5oJed8Hxca6VU2xYJw13ee","ed25519:3UTwQrTjJ53EYDfebbqFjgLCXKbWFuKwSusqpbLS97GYk6zboswoXNqPzEGoMjhV8kxX2egQ2Cqaqq4322BQqBHF","ed25519:4YJrNDGrFncY32NiBZHxjnCo1NXVAeBBq3PrChG4LzHe3EoVZD2PBvWrLi4xzqLE8RP3Tu45wJKwnWNnsF8favhM","ed25519:3ZcvbaxDqjhsrGd7foG1Kf4RyaDStcRuR4iRmpFnoJ5TutzC53z4iVyemMGsBF7rMwbwiftWnAvSJzK74PF9Fmwd","ed25519:4vwbXfHjdu6m7QB3nT7G2JnaKaqbSvmDhDFWnK1ETg3ANYBZkJpr7sPLq6bib5GYy6AmzoHDCcAPWqACszVKmvfr",null,null,"ed25519:3SXdL3MSwDVtYc56qCtLQNfumUSQ4MNo7GXsmj61gNHD4p8teWZThJVSqoXhRCz1XXyWnwFt9ZCveAwdYB5CmGbc",null,"ed25519:4eUZhCKJuUtfNPUiZxKdt9jYmt4Fem3ENcVTE1aAkHsnQh9PrqukMST3g812uGTjJdrHteW1T3J1cy4VwjoTa48","ed25519:Kgse4GBboekzLnmvX6FsDgfHRSMLZgbiq6k2Evj1mdGP4VoxYAY71rjJtABCfwAb5KZ6aj5bafS8D5Hm8KZ9bNy","ed25519:4zFP5E2K6TYiVPDfZEHJfCULXYfRNB8xxU94s1mJsNt8QnnnsCTXe1HnbWFGwNUcS7HwQxtCYgGyu6xTwL6n8LGg","ed25519:PErCkbyuXqKYikTnVaXFmKQ4rVSFtWzZ8CvqkVNnimtc5VqgneBiq6EVkm7gg1rLpnvqBcMuUbcsPw7Un2d8zUh","ed25519:5A9PVKuFTVqRw4KA6nW4xDks9ak6dj6S195cCYoHfN3nuzY3pkJuBRPw4WsaABSimyfepBv1NWxi1ak7SwzvRAA8","ed25519:3q9mCpEob1PuToEMmrZoF3wHQb2abi2RNLcnQ1rNxcZBHo55e2tS3q9EFLQMwWkn88HcbzCkqpSmeofb4e6DRW86","ed25519:2312fWreMrZeoAiHzhMZfBSSCao9AWzewpNyswTLXKuwMFhMk3e6WXTVPDPi4PuFWrVmYM5uqGnoZULsDTLtTrGb","ed25519:SrhadTGqQTuALez6xZG1yKomzjRjQtngs2u1Kj56SEY8HpUfUXtmfDLJZeTMXZxkZS574tuHJomxeZmkPvbxd64","ed25519:3h8QYq7drzPj63xSH3vB7KAK8uVzUioZuakbML7QP9SyrbfYJ6ws3SnrK61YDy7ssmaKcES6fM5WBdahRsxgvJqr","ed25519:2AkDMbZYbakXf9worQ8eKgmDaDsvWAvb8gbrTABRFErd8DqxxbBckztCvnDehLnLkT7ofAfAqJjmdwTG6JYhC5YX","ed25519:2tojmgaBn5yN9s2BeiQHJJTZm8LxqEDr6835ZqSw9MHxRa5Ef3gm7VfsdBVrpLeNuLhmgMnUosSHfdbFKbNv3CKb","ed25519:2gPy5h2rnaSKihWC6iyMvbEvwv2Rfk5pmcDSbHUUS5FpuyJKYBrPBS7nw16GvuXMG8BzR35W7uXNX9iTQ3NkfqjA",null,"ed25519:3iyPuJx5QZ8fzcRFFDveP6MvZ2Lbgb5WaBasoeipbxFdcU3bs8d95ybddDbTj9ExQJMcwoQTsEW25pArtmLcUJ9G","ed25519:56u7XySUgdy8qq7BtAUrWkTHarTnsJhKde9nY2ty9tTNr2PhMTyaRBCCwAzVcv4x7SkuwsijEMJTv7jwrj7Yrx5G","ed25519:4V3RqyvMML9LnWanrF3VXehnQRNpXDgFJuaNZHJPKYRqdZywZjH3URzZ3HU5r3LQybPdgQej8gvDkANNzCCRReoA","ed25519:2yfYKqcPhKRyRx2vGqs8tdoh5dEpZWofmTAMz7YhXTjS55R65qC1q9Yc2SgdRWHkLRhBNqnM2tG82aXTnvtbb3y7","ed25519:51jSANu52TRaAPsasB6eEYPbwixCEHYm4D19tFEn2tPaKGtYNse9kJbkZKscqNV4rtwEoBKDTSb3wUam3LsHJnqd","ed25519:29eioQjzQM8nLZaoaraf7R1ftn9GmPQJrfm1Q5B19exj5hE8dGBgMgarbSytEsdzwgTnzXmrHaYuTFYRwZRBQpdA","ed25519:LUXQJWdMv5rcntV8hw38kw7vvSsg2ghkKo4JwUrio2eYU88khdfzeQKG1yJbGyHHfKEpWPUNzWGtCPdjj5kcEY4"]}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580503.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580503.json
deleted file mode 100644
index 7a56461..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580503.json
+++ /dev/null
@@ -1,79 +0,0 @@
-{
-  "prev_block_hash":"7EhppurRVTagQXpWr6CeZGCyu9ZEmgdw7qSSBdowxsxr",
-  "next_block_inner_hash":"AQeCbPa4pLSpBLZDcXQPxdtPoSyfN1CwDoCGvZV8kGtG",
-  "inner_lite":{
-    "height":9580503,
-    "epoch_id":"11111111111111111111111111111111",
-    "next_epoch_id":"7bRffWHtH2pZ6X9vXQ3ZnDCkdpTutCt2Ns4Kv6vhh27t",
-    "prev_state_root":"BVJ3UPLFvh6e6qKoQqXzNwGg3arJfE7xRrNoXxKqfVLa",
-    "outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-    "timestamp":"1594720658110013803",
-    "next_bp_hash":"F3vj7s1FhrsysAVuDuebJzYKh1dycUxAm8D1ibDSz3hf",
-    "block_merkle_root":"4T7t6nTTorQnrSszz7NpQur2EuURNukNyoyVKehrwag1"
-  },
-  "inner_rest_hash":"B8aUGQi6tSQ8DtEwRoBA6Xo4fodTNd6H2Y3tfFSoKP9s",
-  "next_bps":[
-    {
-      "account_id":"cryptium.stakingpool",
-      "public_key":"ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",
-      "stake":"246989949545775389853291832324"
-    },
-    {
-      "account_id":"certusone.stakingpool",
-      "public_key":"ed25519:CT3tSyZiTFfwZG19EHpczt7ryf5TFYiyWff2KwJvwXfa",
-      "stake":"157064279180485406179261928890"
-    },
-    {
-      "account_id":"buildlinks_pool.stakingpool",
-      "public_key":"ed25519:DfvSCqHNLgKt9sBqtVPWLmV2FaLJ4PThnuhMLzZJ6F4i",
-      "stake":"67986479089994422407940242197"
-    },
-    {
-      "account_id":"top.stakingpool",
-      "public_key":"ed25519:5WAjZjuaQsTKgoBqMKThJzNKhFVDa8Dbz1wkvpNVQR9D",
-      "stake":"57967993268663432215064009132"
-    },
-    {
-      "account_id":"staking.dsrvlabs.testnet",
-      "public_key":"ed25519:FAsTZQPbcwWPm9waNvx9UJfH4XvHYT7zHnzdbV5T9h3x",
-      "stake":"58048938002945776617187673015"
-    },
-    {
-      "account_id":"staked.stakingpool",
-      "public_key":"ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",
-      "stake":"90362440378687413364684444930"
-    },
-    {
-      "account_id":"pool_dokiacapital.stakingpool",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"86326256528349182454404494074"
-    },
-    {
-      "account_id":"stakepool.hashquark.testnet",
-      "public_key":"ed25519:8wx5SnuTkD5Rfu5mesiW7zxbXYFb5nQgAMp31TcS4cpg",
-      "stake":"89779811582870365303768646043"
-    },
-    {
-      "account_id":"inotel.stakingpool",
-      "public_key":"ed25519:5sdeSUfnJtjDzfEhTrDSkoJJF1HAhNcCikxG9FMDD2dj",
-      "stake":"67986479089981927220232604365"
-    },
-    {
-      "account_id":"baziliksub.stakingpool",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"57852357933987326394184233957"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:3YBsbQbyBP6qLSUUcbb9hVUHco4b5ct8sBBDn33wMhCcrnoyzE8dnNBDNmiNqsZbtcKRaXsBLp2Jwwa7ZhAXqDUv",
-    "ed25519:QNEGmTGA1k5nRMMr5Si7KKuc91spzSNjSPRDkYCe87ENCAXw2B851pdhbSF5DWq8bG288Mq1Khv5kZyo22P72WU",
-    "ed25519:4o4w272YCTt3oWdp1m5XNFg6peVKB11QwxP7MtcXApY7bUfn28pLnPhQ85dvPJV3eiz1vaT5XMMo8D5zXtf75S18",
-    "ed25519:2kca8f4NiYjayJUQXDduRMs9Sbh1LeUjZMCi9tdfS9xQEsv5rkNSr6t9yofD1vwEXcYB5fQT5xAuDSdNSY3cUy6W",
-    null,
-    "ed25519:4Q2J94ZaZhFhcUuyHyiCjiZq7xdstg96gYJ1axTS14pQQbuNbTJZjdhNWZUMPnw7sWmCmYshgo97Ud4TfgsLmWDg",
-    "ed25519:52qpBDpHJYgTJxXvZtbqtYZSxMJoqiZer6dSKTpdidtxGrHrAw2RDJQZME2jD3AXpNqeKRnBms8U24CQZmSHWHam",
-    "ed25519:4NgTQGjVxyJ5XfnerCyr9eQoczV37VvZoNYyznD5TGidkMWQdT85tzJVvE25mcqRDyWHLq82mKuyMvzXgciicmyy",
-    "ed25519:3NFK87F46HmNCQomV2TrRSrhnM3Q6sa5JniLsjairAk9MqJ8HuT4hV9VN82RoLhjfBTCsm1jKFUuPY4jq3sxpdww",
-    "ed25519:4Gdd9567u6Cp4JuaPpK8mZm2NLFL11kv6FiG6QkYsbqqEuNDA5PvNtqmer6f2hxNUygRKPHoXmcQtPSVVPHEkNEV"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580534.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580534.json
deleted file mode 100644
index 1a2ae8f..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580534.json
+++ /dev/null
@@ -1,79 +0,0 @@
-{
-  "prev_block_hash":"8sV18ohtGCjhw3Fw9FgM5thn7k8YvvDD9e9fY3B8hneB",
-  "next_block_inner_hash":"2X6XFNPAe3PXfQUD4ZNiPSnB8aTNz595hakpyjzSnzFJ",
-  "inner_lite":{
-    "height":9580534,
-    "epoch_id":"11111111111111111111111111111111",
-    "next_epoch_id":"7bRffWHtH2pZ6X9vXQ3ZnDCkdpTutCt2Ns4Kv6vhh27t",
-    "prev_state_root":"FcL8i9AES6FNp1stG7unQ32x8WbU7RqZaHnxTiBosBVP",
-    "outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t",
-    "timestamp":"1594720687190647862",
-    "next_bp_hash":"F3vj7s1FhrsysAVuDuebJzYKh1dycUxAm8D1ibDSz3hf",
-    "block_merkle_root":"65Jz3PUhqdxiCSZht1CcrAm6mThuo2ko4mqy4oAnZaWD"
-  },
-  "inner_rest_hash":"HDrCKYQrL4mbgJVqVM2y8ZMzxQfoKtCXoQz1gLe7Fxmu",
-  "next_bps":[
-    {
-      "account_id":"cryptium.stakingpool",
-      "public_key":"ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",
-      "stake":"246989949545775389853291832324"
-    },
-    {
-      "account_id":"certusone.stakingpool",
-      "public_key":"ed25519:CT3tSyZiTFfwZG19EHpczt7ryf5TFYiyWff2KwJvwXfa",
-      "stake":"157064279180485406179261928890"
-    },
-    {
-      "account_id":"buildlinks_pool.stakingpool",
-      "public_key":"ed25519:DfvSCqHNLgKt9sBqtVPWLmV2FaLJ4PThnuhMLzZJ6F4i",
-      "stake":"67986479089994422407940242197"
-    },
-    {
-      "account_id":"top.stakingpool",
-      "public_key":"ed25519:5WAjZjuaQsTKgoBqMKThJzNKhFVDa8Dbz1wkvpNVQR9D",
-      "stake":"57967993268663432215064009132"
-    },
-    {
-      "account_id":"staking.dsrvlabs.testnet",
-      "public_key":"ed25519:FAsTZQPbcwWPm9waNvx9UJfH4XvHYT7zHnzdbV5T9h3x",
-      "stake":"58048938002945776617187673015"
-    },
-    {
-      "account_id":"staked.stakingpool",
-      "public_key":"ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",
-      "stake":"90362440378687413364684444930"
-    },
-    {
-      "account_id":"pool_dokiacapital.stakingpool",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"86326256528349182454404494074"
-    },
-    {
-      "account_id":"stakepool.hashquark.testnet",
-      "public_key":"ed25519:8wx5SnuTkD5Rfu5mesiW7zxbXYFb5nQgAMp31TcS4cpg",
-      "stake":"89779811582870365303768646043"
-    },
-    {
-      "account_id":"inotel.stakingpool",
-      "public_key":"ed25519:5sdeSUfnJtjDzfEhTrDSkoJJF1HAhNcCikxG9FMDD2dj",
-      "stake":"67986479089981927220232604365"
-    },
-    {
-      "account_id":"baziliksub.stakingpool",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"57852357933987326394184233957"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:3sNJtnRv7UNGN49ZfZniDp8Bsw7T9hwJogmoWXwC5E1yy7RmzJ9f94oUk8QJQ5RSdoYKggHsx9q7bWnJgScLrnn4",
-    "ed25519:5tAxtL6uibuiQ3snSo2d4xN68ie7VqyE11vgzuwNTh3QzJpX9vJvyXK1v9vAUrgEkEehVzKHZQvyR7xvnQTxV8D5",
-    null,
-    "ed25519:1ZPxiccszHptiLhsgKPBAASDkykoUneoNAruA6NEAuzm6odDwFCVg8XhWBkYveHDTHt4pCtvNQtyQV8oiX79en7",
-    null,
-    "ed25519:VaWpt9Spe5AqEJh7V3v5279bscXkG2KQhYoindUyL2AwU1PV8SEEBgHrqakJwJ6JHEBqsQSEjgoqHEoVKYP1QCK",
-    "ed25519:2JCuarunAgq8jPeFvTVNjvStM8kX4K3ewvtEuXDRgXd7mrJzHZ4yjbiiCVUAAP1CTshzUhzuMsYoKASyvvpvHNzz",
-    null,
-    "ed25519:3Cejz43X5bDHRErH12qNNdewPe4WnLApo1nBmAf4hcu9BydErwpUF4EGMbtGEKLEFcPBb86Pqui38kBBtkvQ2w2z",
-    "ed25519:2i1MNoQxY5BGknimh4AtXpVyuSRzsXswvx4vMvpH8zbjBShZp8gVSHjFbZinHKEbjm9GTma8RrB8M5QiaCFfrGXQ"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580624.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580624.json
deleted file mode 100644
index bbb72b1..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9580624.json
+++ /dev/null
@@ -1,79 +0,0 @@
-{
-  "prev_block_hash":"GJvvGBFt3u7EnBmezDnLsDv3xDhvVhFkMtv8RNETvgdd",
-  "next_block_inner_hash":"2WXz5fQ9Vr8Rd8M3NJ4ci1SCzR6Ppbyxn1F12YkfmnNd",
-  "inner_lite":{
-    "height":9580624,
-    "epoch_id":"11111111111111111111111111111111",
-    "next_epoch_id":"7bRffWHtH2pZ6X9vXQ3ZnDCkdpTutCt2Ns4Kv6vhh27t",
-    "prev_state_root":"5vQ9Y5diy4rgeRwfHsHWm3UXeqt5Nqb3zLdhzR6aqvci",
-    "outcome_root":"Ff4ZyXPuwgXxexKMK8b9Xt4CNJbPtT143LLZCX6e2yfd",
-    "timestamp":"1594720767114164049",
-    "next_bp_hash":"F3vj7s1FhrsysAVuDuebJzYKh1dycUxAm8D1ibDSz3hf",
-    "block_merkle_root":"8nUbA5NBks2BURsHhAXVRTtKv35YwnjDad57bRwUUX11"
-  },
-  "inner_rest_hash":"HunsMU6h3DuWhPCvq5BxjEUiMpYJs8bVa5J3qAom14Af",
-  "next_bps":[
-    {
-      "account_id":"cryptium.stakingpool",
-      "public_key":"ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",
-      "stake":"246989949545775389853291832324"
-    },
-    {
-      "account_id":"certusone.stakingpool",
-      "public_key":"ed25519:CT3tSyZiTFfwZG19EHpczt7ryf5TFYiyWff2KwJvwXfa",
-      "stake":"157064279180485406179261928890"
-    },
-    {
-      "account_id":"buildlinks_pool.stakingpool",
-      "public_key":"ed25519:DfvSCqHNLgKt9sBqtVPWLmV2FaLJ4PThnuhMLzZJ6F4i",
-      "stake":"67986479089994422407940242197"
-    },
-    {
-      "account_id":"top.stakingpool",
-      "public_key":"ed25519:5WAjZjuaQsTKgoBqMKThJzNKhFVDa8Dbz1wkvpNVQR9D",
-      "stake":"57967993268663432215064009132"
-    },
-    {
-      "account_id":"staking.dsrvlabs.testnet",
-      "public_key":"ed25519:FAsTZQPbcwWPm9waNvx9UJfH4XvHYT7zHnzdbV5T9h3x",
-      "stake":"58048938002945776617187673015"
-    },
-    {
-      "account_id":"staked.stakingpool",
-      "public_key":"ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",
-      "stake":"90362440378687413364684444930"
-    },
-    {
-      "account_id":"pool_dokiacapital.stakingpool",
-      "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-      "stake":"86326256528349182454404494074"
-    },
-    {
-      "account_id":"stakepool.hashquark.testnet",
-      "public_key":"ed25519:8wx5SnuTkD5Rfu5mesiW7zxbXYFb5nQgAMp31TcS4cpg",
-      "stake":"89779811582870365303768646043"
-    },
-    {
-      "account_id":"inotel.stakingpool",
-      "public_key":"ed25519:5sdeSUfnJtjDzfEhTrDSkoJJF1HAhNcCikxG9FMDD2dj",
-      "stake":"67986479089981927220232604365"
-    },
-    {
-      "account_id":"baziliksub.stakingpool",
-      "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-      "stake":"57852357933987326394184233957"
-    }
-  ],
-  "approvals_after_next":[
-    "ed25519:4jVEHjfLhhRToWEHAP56a5HU7dB6BzYotoLvjEqJEDvrMBCemZep4KhPgGMfqzKAAQ5ijrdpNcB9fvuKcCbak8k3",
-    "ed25519:4sKqxuNUHLc3Cgih4TURzDRFAXKZgUXCih7KMgKnrVgvUFch5irnp7ckFPaHX94VFjCkGGccU2tu6NyCxhsBWAXA",
-    null,
-    null,
-    "ed25519:2iWgf7fQTn51bWMDvJU7DHf4BQwnfYCVGXADs2UGUiacQcv3hk912fbJsqUhzGkbayoYZyDYAamGn2NVtJd86Lbo",
-    "ed25519:4x5RpN2v566eJTzZ1zapVcgzb2oCofxYGQsj4nzQ1FbLEetEW8ABSAHdndUszQXupfXxh836DmFLpP61DcK5X3Hs",
-    null,
-    null,
-    "ed25519:2nMr4FT6Xbwo8DFS5NjJSD8qjQZdnq6xCgzb9KUg1MxWMRaEFxkRtEnQtupfwF8d9tSgrAnmmJjchQF71VD6Qo1o",
-    "ed25519:5SGfA7144Cj6FZM6qcCDnsnXhyZA3bV3AsbB76hwSaqmwSn3vUZrDNakagHPcuMRz6cyjNQe1J862zd6PixbJFMS"
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9605.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9605.json
deleted file mode 100644
index d6b0457..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9605.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"8dgQyM8XM4mJoGtLigH1kLFHpnMDXLciHx7hW6wPmtsV","next_block_inner_hash":"E987WBD1ntmSd2nWZdcDGxeAXoatxf14k1qNmarMivpv","inner_lite":{"height":9605,"epoch_id":"B2YZbrJ93YSdkcmLFSgHbK4qEC1RzVZQG6UfueNjJnZf","next_epoch_id":"EGLbTgcz6qVjXvFmmmBtvFXBWLUnuHzeFVdJrSSqNqkA","prev_state_root":"HvJf5AD9CmSbu53RyUCRqBg7ZnCRUy6vw7U3UNSbrML1","outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t","timestamp":"1592434547333226000","next_bp_hash":"BQrd2MLRHmHQGbQHzmXbMV1WQgJWyLcwriwCBRoW5Eb","block_merkle_root":"GPFeXUPkeW8aVcrYNxmLLQ9oQsPEvUjx5w3BW4tSzS6L"},"inner_rest_hash":"67HkEXLZejogkbDME84vQCXjMADZNkwDt7qTx8Kgw1Bk","next_bps":[{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"50027397467474610381831908169515"}],"approvals_after_next":["ed25519:4y51oeoLaMHdDESWj5P9md5RFZgEgZn9heBrSFagZUUUT7xCtSPmJ9ZerPusKh7bPcRRv7tGL45aNAbUJhnK2X9V"]}
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9610.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9610.json
deleted file mode 100644
index 74cc5a5..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/block_9610.json
+++ /dev/null
@@ -1 +0,0 @@
-{"prev_block_hash":"94K2SqFWRJMJGGam6vKbwqLJy9MBYTPkQwwqMB5gV39G","next_block_inner_hash":"3ifuX6JTawaE494qrxACCzEjyBN7rtMYE8HK1wiNS1y5","inner_lite":{"height":9610,"epoch_id":"B2YZbrJ93YSdkcmLFSgHbK4qEC1RzVZQG6UfueNjJnZf","next_epoch_id":"EGLbTgcz6qVjXvFmmmBtvFXBWLUnuHzeFVdJrSSqNqkA","prev_state_root":"HvJf5AD9CmSbu53RyUCRqBg7ZnCRUy6vw7U3UNSbrML1","outcome_root":"7tkzFg8RHBmMw1ncRJZCCZAizgq4rwCftTKYLce8RU8t","timestamp":"1592434550964971000","next_bp_hash":"BQrd2MLRHmHQGbQHzmXbMV1WQgJWyLcwriwCBRoW5Eb","block_merkle_root":"CJe6fdXLt4izEN2h4vjUCfBhn22n74mfJwu5oXU5Qvtc"},"inner_rest_hash":"4BGSRVvqPxBk9vdaERDBSMrjoCczDw4rGwGamra6itQQ","next_bps":[{"account_id":"node0","public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX","stake":"50027397467474610381831908169515"}],"approvals_after_next":["ed25519:4hR9HvcCLxHheJDraVcxYwtgQJqwB1pfEUTxgphULLPzpTebNchxmgup24QYc4TNm34a9iWuK7q3pxB6hpJ9V7uf"]}
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/ed25519-tests.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/ed25519-tests.json
deleted file mode 100644
index 0702ace..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/ed25519-tests.json
+++ /dev/null
@@ -1,1451 +0,0 @@
-[
-    {
-        "description": "regular k, regular r, valid strict",
-        "k": "5d196f3f0d495ffebe06d09dded803b3f275e131e3f662b3904e4929d07b1af8",
-        "msg": "0bc7432ef070a5d9e30fa55a9de5fa0ffd5d9ad11cc860e017195e5632a411aae10d617d3bb865940a",
-        "sig": "0d5f61d895fbe3bc7d19b7877a1cbc8677061757f2c614f576799ba3b6092186640ac5fb43090676cc359baf77f2a0c6bd42dc089660abcb7e64de1b44d67c00",
-        "valid": true
-    },
-    {
-        "description": "regular k, regular r, invalid",
-        "k": "c5b00ebf9d9a8aede9b4c9e191d0b33f3e1a9d8c8be5430d47434a37d590d8a1",
-        "msg": "fd2e310677abca51ff02a35a00dd56a0b65e1cf5308f8e7ed0edc0defc147aae10652f420b0436f4aa",
-        "sig": "160257b1a6fab31596fd2e8da09ac1cb1373ce1ef795b7cf31eafe065a6abbe53e51955de5b11724c4653bcdfe57ff8bc257468090e42b17f55bcbb1347d5f0e",
-        "valid": false
-    },
-    {
-        "description": "regular k, nonstandard r, valid non-strict",
-        "k": "396ea9a022e06f96d54e752adbae3fff66734b33f2975a889f98a1a96f2217cd",
-        "msg": "bec5e68b944de337dfd3ec593313e571f47680f2609dae3089bd7aee47c779284396e271250e3aa74b",
-        "sig": "43e378092935b978f835f72585190327941021c4005ab4ec0d0da9b2faf1cc4f86ff70ed416d3ce89e0490925ca0e8218b20934b23970ae369b75a0de3ab9706",
-        "valid": false
-    },
-    {
-        "description": "regular k, nonstandard r, invalid",
-        "k": "f966686109b544d96346ea3a08c292ff2c6d4b969da6b20ccd2b07fc14c6ecc4",
-        "msg": "dad95317ce7c3be68c9603d6fe4b694974c7f9631d781a49e3287af55570f35874c6685404b1d6b965",
-        "sig": "203c04d18efd47ab4b16a1077b36502580dbd86373f0d42830202c98999d5acf8f6741df076736d0924e3eabca4ef89f5eabd9ccda9646f3ade51c6f7d24ef01",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "4828b41a8df12cf45420c11a6f5edb287b554b4cd28ca63f148949588def9d95",
-        "msg": "351a482e0e8306ede1e73f0c9a195484f67e6f63d4f101b08db20002840b94d388a40980cb7b58cba9",
-        "sig": "37fb507ce5a9207cdf831370225c2d808fe106884bd1bb8a9a064dd5e3f2954e4b54686f30e3d19630eb8c21a149c9fd2163ffa527e29895c547e078d880af08",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "8789c255d1a6b30b8301d6693a6b4ba4c09b67fd238f6e740a82240838f8cc45",
-        "msg": "5bd4cdb0ca70cb94b160e2cc96a54c8b2fe692bdefd8964a573842aeca51137204da3de55df70090c0",
-        "sig": "4af3612a81046c56b871f892b394115afa6ca03b023700fa8a90f873f3aa5c02efe4f481a29717822b64b652b391d29313fe02d2e09dc05af01db837bb35960f",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "a3705cd9f05f09ee8aac0a5f3153a09c6a1048ccf934a4e52fe10ae2b8faac40",
-        "msg": "683c99a04290f328939cbeb3f5be9873af79cb22723337f2cc7afb5f90fd7cde78be0c943311efa69c",
-        "sig": "98331f1cc8f461f3185ec2f0847060bcab89d4bc9fd2ec27446ca01f4c3d508142e9631a5d5f23cec6a80893e11a73cf0ac13457cfc71b34d12766c01333480b",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "928864e41913ad8cbed90c9ec2e5aaa76283bbd945ceda50a083c1f685822a0c",
-        "msg": "67d92ae5d454a013c19263b79485df4e5ba5d9edce945ec0a7f056fef1f3cf673ea4ee76f4656e6b74",
-        "sig": "d679a4182e05847212e387af0bc0f9246f9ef4324bc1b1511d065e9a7134c68f1bae51395d5b7174224b432b48f74b3e3211f7764ba8927147a063dedf90df0d",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "1e5e29d1de7c7a2702503d2e1a36e2609c07f5f0426900a6d5a848581ff9ddeb",
-        "msg": "f5cc3eba70e24ecd9d72d1bd3649570feac5098fb5d4a8c2ed79d72ff39b51763eeffa4530ac13487e",
-        "sig": "6aaa25807996961d269dfd4b1181ef4f70fb13f10d261a0ff71f3b6fdc0fb33c478cf40281948b919e4f5f335232a42a71704db3c25cabbc2f8a1afc89043e05",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "b34a763d64fb3331bbe1f52828cd1222ae0cf019a5f52f905c60c332c18a24a0",
-        "msg": "5fb1d152b213cd7f3a12973b656ac23e6ad8b9021eb39e8c4a0c821250ca2041a48fbce0d5c9321b17",
-        "sig": "80191502baa3d3e526039883a617827192efb8411742eea5874ddac6d2b4678e8747ea05c28cdf8d50df4d19efa9b4efe1926aec08c7a15325d97beeb3eeaf07",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "11ea7025d245df9fe34bbdb7babbfe56e505260ee2899f96f188c6c019aa99f7",
-        "msg": "4b550835b7a6bc64401bb9ee4b9b1fb8c22bf1f26d3fa52fed82216734297d835eafbaea4164cc5c56",
-        "sig": "bef3e539e687cf43f42e7e17a859c63272086fb245ac17f7835f289d701492853ed154fad96a5045d65542e9e1f8ea50bc2c4820bb1b65f9a2eba55b67f7e50a",
-        "valid": false
-    },
-    {
-        "description": "regular k, invalid r, invalid",
-        "k": "c47a4f38230a73b4fe9ae1fb9a343b90d7f1fe5053d91ba4b8787fe53a758bbe",
-        "msg": "645b1ae73ad7a210b3b550098ebcd8469e633b40591f9ec20da76ec16c37c6180a6541c466bc5b6738",
-        "sig": "22d26bd7160bcf82352a7a700772fb230827772ec291005375cde8a7735e3495bb24854fadf99cbde536a8c790edda918a40422c7ca3056a8dfaf8310c0f1a09",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid strict",
-        "k": "eb1f0d0e27fe334cc3b07df4f2f6ec25a32582d74460f124cc48068e6c192364",
-        "msg": "b0e7fd21a01bafda75e0ace55def55c6a3d104ce943687e6dc498797874e50d13c562d4f886a3ff2ca",
-        "sig": "01000000000000000000000000000000000000000000000000000000000000000a1fa064565123f59ccbedce0246d59395f4a29b73fd4035b9d67ebfa1434603",
-        "valid": true
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "a2da7fca193d2351a8d71190492b9f19d24ac8a4acd6c874d577cf5951dfbe2b",
-        "msg": "e10d8548fadd14696af28c3e9e6e94311c0afcfacadd6fad2c0901cf5210e127206d18856e3e826b50",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000000d9a8b54e213323d7e188acd569e83313fcb63387a51249e58a16f30635a0210c",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid strict",
-        "k": "d017a0c9f56458f4a116cd095ecd5df009ac10a588ea692cc3044189313ea051",
-        "msg": "572a0404100d95e06a496455c82b320a7ccd4f7ebcec5bf80f13c87c3968a2d872b238cb9e2c52abee",
-        "sig": "010000000000000000000000000000000000000000000000000000000000008056384c9d0d9c6d107cd66b6ca09b2ccc22803846934c0de46c0e4d636119aa06",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "d156da95d3a5256e745543f6f12e3eb091045daea2772a05c79f9cbae34f7cc8",
-        "msg": "ace56e856b20349fac7d6e10ed485081e2b66b11610039a7b02c1b81f2927aed652f253425065a553b",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000080f3d6a6c34754529541390383bd1973e9f135e27d100ca068b21f5693506c4c0c",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid strict",
-        "k": "21ef2eaca3f85eeacea69ae7a7c1502abc2fba5bc694369d027b5f15f9e8e623",
-        "msg": "471510fa74409d9a3902c9aaf1d8c257e01ff9569a114d046828afd5e7ceb5dd4346cd0c27d8331779",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f67481564270aba466d2aa7abccc2d78e44745f0d043f198c36b4a8525a4ca509",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "e6fc75bc166a1ef30f7104c7b675ed29bac4ba1d5c08c658e4ce4e6b96d0386c",
-        "msg": "0749dad449cd2291efb97e22b0112301a609a073c50f865be46ae8a3e57bca3af52d5ad3e3dd675738",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f437dc127275492604fa5c20e0fd9c519ab4baff0343af72e66232d629f7e5e02",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid strict",
-        "k": "a9d102aa1fdfa464ca051c118d59583f85c8d087d6aa78772b83349fa8a2ea30",
-        "msg": "e9313b76e1b60228482ac24b671885723f9805b1f76f1b3a24eec1d5a0533e260ac2a25fa95a22c23c",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff31ade894475aee4ed989735d424e04c21e927136c52c08dacee3387f40439700",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "10517ccea06e27f5b78e336a5f35b3210c67cf5c9cef7d86f7d5d42f38e187a7",
-        "msg": "ab3621f4909b05f27bdbc6725fdff68a5fbdddb50ba5846ea974c8fc4dc9f2d9e1ea2777002230daa7",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828b9357c0d731449edca5bd9766359d0b75eaa59baa1023076d3650454c810c",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "36c1adc33bd5a62e129011035905aef0c8240e52f1389dd12a1f7f86abd13f99",
-        "msg": "fe892d89931e033037212f100092b9087b6abb9683425d0d42e22331003abea80a631cfc5d53f4e36b",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc053750bb5cbee9b556db9f4b2a78e6dd14427fe1b1b34383585cf72d0f2ff3b00b",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "e8b083c70baa29d5d684a9df483ca1ec8d22288c9e246da349c68f11943d8c17",
-        "msg": "1e1588c168e57631338d02ba7607faf07b3d24f853e378f0ec041a100bc39a4d274af999e34ce4d9a2",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05803d5482027e25d2901bc15da85634e552f6b5d2ad5530af54fc674c9029210a",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "0ca0fda6721657c8e908f3c36238e353fdeb732deca43acb540d57ba76a98866",
-        "msg": "7a6a1ad36159ec8f1cabd0abc91f6409289c5ca85e9ae3260f0ebe9d3fac89c09c81b082b7835edab5",
-        "sig": "0000000000000000000000000000000000000000000000000000000000000000a007c51d43e77343a767228c22ff407f1ef995038a7a279d663c4cca0585f603",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "bf234aa37ccb891540fbf65013433fb18618ed232be973433b7300ff6802042a",
-        "msg": "018b705ffb6dad719d92fab260459d32f6bf17f074d4b187324e686aa8901c36e4a1a6260745fd9b5d",
-        "sig": "0000000000000000000000000000000000000000000000000000000000000000531e877dce60039a5b992990323e57665bb79755f5e303f2482543c84a4a560e",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid non-strict",
-        "k": "6c58c4c63df395c8806a93d22445d25dcefbbefbf0ed7400a4f76547fd5f5577",
-        "msg": "5877ac39bc867491369fe8ee89f8c6aa3eb2d28d271ac9c41825ebf104cdb6ce3ee08cd4bcbac6b7cd",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fef5b03004d0f4d08b5b47757f721c1bc3493b1e69c93864c9d81aef871be7d00",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "5da77306ff4a0bfebfae94b4839da90ec73c76d876de8dee35e228ca7be0e5bf",
-        "msg": "0ea24f967bb794fe34380e8234429036650fcee08fd9025a9d79a987a30bee1e7b3c668b2d4549afc3",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f6411eaa9a13cc276396ca87568e4e3e320ce07f3b3a86736a7129c9f77690a06",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "7ec0370a6e8024f9e4159b23dfba634c66b474c8d6f4a0b48bea56770615c3cd",
-        "msg": "21991fe32655d7717db30831537e75e6693cb7d2799d2a4c45859f16de72e1592926b3710833c45662",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a7e6f6f5c1b6bf008d7be90a295d50ee1e86b44110d83a7cb1402efc7cced6204",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "7b975129d98bf6227cfcbd54f37e4337b51ea26d77a124c69e936cc187c7c32f",
-        "msg": "a97fb4218df444ad62505e0905be1531b88b250e4bc06f51f847b985b7ffc17200a49fb70cc109bbff",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037aaba82afdde0b5b626eb6d1a53aa07be7c0d9432294400a47530cc992e8f91b04",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "e0d8483bacb538461b189dea7ab06ab72571f85d9ab0a4af0f603084dee4b6cb",
-        "msg": "b4ae237a1d5a65a3e0b45970705b4455f2c787e54eeedf7f69821e254437918afad12260c7137064cb",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f52ada838ad023b442aa31b42c7796ce0e871fb0b95116fd942548633cd725e09",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "97e5db5795601650b60d209b4f64190c02f1b1a6a6cb00bf5f2cad26f6a4270e",
-        "msg": "afde255b8a0a43de4b9fab2b0f137048ced1cd47a340023b680a9d255ca605381aa4b17dd8fe37965a",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fe62c7384f01d345fc63594b20480ceac12e872ee62fdd5f03f8fc7bb86b3360b",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid non-strict",
-        "k": "1058c36e8ccfb04b678364604c63213dc9591175711147bb4045c8c3e1d4e823",
-        "msg": "922c67bf4c4ab1064493e13ecd0c9d7bdc94be8867cb61e8bcbacacc2d711e4e7b0099056c442ad664",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2147a80d8c164f40251b2a714732a5b23f7bfbe344ca1d2dcfe3e820f445130e",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "a0a9cf5d1abffae47d15e4e6057f76807359225e69e980c0b4f0986151664d77",
-        "msg": "eb812196a121976c05257899a2d503678830c5e558c306d490ded3db53bfe3b7a1b6d85d3fa3270ce0",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6d2e4a911a75f3015157e951f8e4bbda84409fdd8985333bfa282766c19ed09",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "3030a963afcbcaa55ec8f47c03a913218ce7dff86e80aebfbb3a41be55bd5394",
-        "msg": "8dd848849a1a973c63648f29a9812fbfeca1fc5c42468e0713ec4ea503baf24df9b7f8ff6fbe4e3b88",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fad208b0bc1bcccee1c29d360ea5e3b6337ff8905296ca6b693c4d0096a7603c0d",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "957a4dc5652012f27381d34f85e190803f66a4181c9aaaf89b18be594ca599ec",
-        "msg": "3e6c49c5c756f5b3e6bdf393e983f354137c1df395d834bd3c1081673b03ff3c57badb59bb95e51fbf",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fab745f4081aa647c1048337a884825d733d8b71218ae8a418d8f2b75c3512580b",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "6eb4fbb85754d33c4a5f54c5951bee44a77062a7a5c82b4af7df4d89d872ef37",
-        "msg": "8ee8d5f53c10ec2df21e40aa6c9440cb61b3c0076623381c08fe43c0b07bbfd082157f558f17b23c87",
-        "sig": "00000000000000000000000000000000000000000000000000000000000000800a8a08324574aaa17728b7f6b05a7be6e89e4a8133711beeebc9b5dd26778508",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "5873de2d2f64d5fb47ccd7d22f18f7d7e384faf548b32252cb2661fdf7e856a7",
-        "msg": "5ac7b6d62b541b8c3f57f6470972237d5408020d35d4fa078b902d8614a8aab62b605c940d47a21950",
-        "sig": "0000000000000000000000000000000000000000000000000000000000000080308e10b1d3936517b664bafaeb262e665efdeb52a020eb998b08ccf79757ee0b",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, valid non-strict",
-        "k": "976182ddf06bf8456f3b72ec4e66395bcd754b54bf58b11a5b0a9fcdb4685e51",
-        "msg": "9151af77afb564802a65dcd7bfcd292af87d208a72cb9029a455d8e42241366355b169dc00b96ba166",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffde01e788325c0f421e217ba78ebba0e8b7765dd4b5efacacda35e1c4218fdb07",
-        "valid": false
-    },
-    {
-        "description": "regular k, noncanonical r, invalid",
-        "k": "290f0d65ab8a5a64a891b759007603df95cd514776af223a271189b92090052b",
-        "msg": "8b5734d05f541072bdf899bd6fdcc4f3234a32964ec359a61555685356da55c673796e953a9fbc1966",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff32cec90ced8624f1ba47130d1024b0e260e95d4ee247b7ecfc173b4a2fe67407",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, valid non-strict",
-        "k": "6af57028039b5ac2e40d2c773fe3a51ada02a11f621efb35bc0e06e8b298d866",
-        "msg": "ef0cc6173709371ba64a567a192655a7c165b91af10198db6632a83bcfd2b20ed4a375d9ba18799ab6",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85b172a223b10d8478471fc16651aa33fc8e04b7bca837f7f01b65761c6333c006",
-        "valid": false
-    },
-    {
-        "description": "regular k, small-order r, invalid",
-        "k": "635bd0afb3837073a691b7afcf8aec172f3c6848c2d809654e4c8597cb8c8f48",
-        "msg": "ad0abacc7c51c8aa2f34b95a2e93783b86ffe5a25ba10a3e99d97830e511efaa126c1ebaf64edbd35b",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85c823c7c12e34d667ca1267d78bd230a6941da7fdd14b667b56b5ae15dc71010c",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, regular r, valid strict",
-        "k": "939f68c176c1af96602a76c59b74b09faf806329f8dd9e60672fadd913a7adb0",
-        "msg": "08a7564a8be2dd1ebc5d1bfbd9d3a6a1db56ad217e8cdcce12044e7a959d60e7858085235891f7c17a",
-        "sig": "5a6fe18634f06ab02e104945e5fabb4d74303c08b719f5e6dd7efd867248060466671c9601964399510fd280aa9a97b77990b5c0fc976422377d2789f20f4d04",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, regular r, valid non-strict",
-        "k": "e4e92871eb97b77186e2edec2e435ba1fb0cf92525cf9cad9bb5932972d07c7b",
-        "msg": "4a831bbabf9aa9ce4686ab715681d63a37a80cddfbdacdd7d19aaef754d48aa19d5345cbdfd15b9025",
-        "sig": "04a334fa4f3c1d0bc4092c9958f0312eecee845cda2793c916e70773713fe154c77daf714ab19688149c243ea27968d0c4efddb057ab7ed6b6bddca5e354db07",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, regular r, invalid",
-        "k": "63fb69dae41ef3ec8f216ff7ff4e3d71c8bb5ed815d8729f1940db38d65e90f8",
-        "msg": "4a6391b15f50d1fc737748d5ef728321ad49b28d35187af8568dc3810a85c77a3b8d36309888c555d4",
-        "sig": "28d3826f8d3606f84ed9582e4e2a5f88bb77287314d983b14eaf2815b3baa204497427e782dcef66ec0cc7417682d46295dbfe263e87e899326500aebac0a703",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, nonstandard r, valid strict",
-        "k": "70d36960a64cf71382db2b9be101070fc4ffe56ed0d565d027eda1800215ca36",
-        "msg": "c8aebc41a651e5ee92d13749e1c03d7a203cb9f39a6ef390d769ece69a211b26723be9febcc5d34670",
-        "sig": "955092ae66552fa0f1c127cfff19e6fdc2e74b5d725a545c88896940848b0562eb9706c4c2352dace7034eeb46729248e42e036b8f60edf4ec682b7e3052f409",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, nonstandard r, valid non-strict",
-        "k": "d71ab8c0af6c10fd7965d9d8fd1c45eb2a9b29b9e7070726bd274b2566ca311e",
-        "msg": "daad9e63023cd9554b513304b55dcba4d0ab493e7a108898259dee349cdf5607db0b2cd276adc2ecb8",
-        "sig": "4812a95973c25a9489dbd3ecc1d25d6cbe332e0194fc34c6a575532436f541a7f9cc8416e7149b7b57bb4e975793844460a0e4f8323603c514457e9d90c1130e",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, nonstandard r, invalid",
-        "k": "4b4ff609eb43c2428db7540f4791a5d9d49ccb27cb5ae5e800d75317f711def4",
-        "msg": "aa5284f460362fd72e2c68f47ecf47a6fdeaf41646ca7e05921c18c6c9d982bf4dcbbb0954f1a799b3",
-        "sig": "fc26d542e54d84164973b8d71c4908458857a6b0013eecb75ce70e8bffe989855b97883930a8ddaed8120ec603d5418e637aad72caeb0f4bd0b10d5721624504",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "fd0c8e9fbc43d4f0ff99d54a083a8b952a3780651399aa1949aeaac933c0fff5",
-        "msg": "7caeac477d4030cb72cfd5cc9dc274ba8c1c776be7e4860753bae4ad0a3195577093102d594cee6de3",
-        "sig": "6a9651cb9cbdb1f99dec6c6994aeeec0b7d59485d45bc69079aab0aa48a0b2b7f6444459815d770bb97a54b07e52ee04d82733ce90c6f6309489b5fefdec390f",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "7350df2d182a181e4dde4b884299481d496c131760f54490676fc522d74c1b94",
-        "msg": "8b4a50815084118e410f334124cca44cb7e576fac65eda58976a113d54723561498aa9c289ad2066c8",
-        "sig": "9c5134e71136fe985e47be52e6b81595f831685ad93f8d85a5a125654bb45a6c5bb57ab0db87e9204e6a55f8bf5146ea48de1d06e799876e5ac7649922dc660a",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "c09bfd754a9fb12b647387a26840bcf27f51d073c8193a6dade31abe3e2a0fea",
-        "msg": "904e47e07792967ca21a66f203b95540adb43434524783fd7e58f7ea1c937547d9207ecbb17eaf4736",
-        "sig": "acd36dd8c7c1e28b0711f5911a9681b1c33516e6374d41a6bda9f2aed1287e9038565e65c34cd80e4ce226222caca2be5ab9e5326760d7aa0a1cfa80c37da10e",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "660cc8962b882cd34c4f4b38ace42e9b4e8abd479d65dc3bf17a2deed54b46d3",
-        "msg": "cbdad019c79d3272e582b0307b3dcec9cf167b9477c939d97f8f7ebe6761c174f7c738e037fa8125a8",
-        "sig": "50e1231fcdb1ded9fe8c7358c04d27feb1f2f9222dcb189eb806a5aa24750c2b4cd49a513f49e7c7aa646dbf1f1f87f0dcedfe0a31c3ed03e693f20d501bfe0b",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "bafe3fe4914607cb081081b0129c3628be30ee70be48014d58efcd985593e2e4",
-        "msg": "95e6818daffac7495fb81d8977746ad839b4e79511fe4a269a637f7f70aa3624f1aaae8e59aa886c7f",
-        "sig": "0a68a1ac7c3f39087e0ae705136857c6326023cb3926980accc3a5ff53acfed9bd8ad9143e95ba229ebfd8d2f2d988e7f5fa9406a53754d530fd37e2f7b58100",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "4d7e705f035ae0197d09fe068ee7c88b767198d07253865986c0fb69322d9f28",
-        "msg": "5e4aab77d49cda89be772013a305699a831e26d713badaf4889257889b885aa7f3c71fc835f9ce2859",
-        "sig": "d8e6f15d7578c032b27a758332555e83e94b836611f2cd4e49217be24d67d9b70ce9e32cd205ae503ff1e3255af553a50de58d1eea7e10ede34c3f503ba3b80b",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "5c36f0b1891331a2f77a74074688b605dc38b3db12207e4f426abd48f160feb3",
-        "msg": "8dc87f6423e3043e29e59e26877bf6965b5f55f379efc26594a1813f715ae19d48699a09b5c04723e7",
-        "sig": "aa3be8631c966fdecfdcc7f2a144f6e21b17a6e808abd05856b7be4324f9462e8ed0db0da913b793135cbc51d666685fc73826142d65f797e69ef2bed7a18308",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, invalid r, invalid",
-        "k": "9d7b6e4259c90836dcc214333c6c22d5aed2e4609dc05e6f2ff0a469d9a7f67a",
-        "msg": "0ed8f58f37559582aa93c000c50d2e7e01c07fe7b69c2051d072cb77bcd4ebef38eb964a8e7e9ff854",
-        "sig": "244dbf3a834f39a02fd303c66fa2b2f6e0812aeecb4dad5b0d18ddf8b55079cb73dc39a1777e0007ab74e18a8ee472eba04d7668c5d2f1e2d5ecfd9a260adb02",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "cb27df796534b4fd63aeb513d31ec5c3fa4f32cc0c399a5124e67449373f166b",
-        "msg": "80a5cb97070e3282a7afff9ea8ca264d2cc862c27b602b3b6af8def468a58f71020828cc1cf337d883",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000000e0fae1b1b3a0a3e2bee3fcc09a4c100be8a264f9b6309228dadc8e4d05d2950c",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "55256d41b66fecdeef9071baa8d8b474e3f760a62a794ef81e397b3ab818c718",
-        "msg": "026a2b0259175a08ab07c48c704abda0a8b13140281d0318b44096e545fcc2e964c0cc30ee6c276e8b",
-        "sig": "010000000000000000000000000000000000000000000000000000000000000001eafaa900127d1e4e879be2e9b249d571f869ad595e58b2715217712ee08404",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "926274e372ebfb5d724c510ab041d04351dd7b642ca218e594304a4a18bc3329",
-        "msg": "2893d6a5ddb0e9f4acc3744b32881f63930b864cfc5dbc21c1d8cba0fb32917af685845c0668d2cdb8",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000000a764da0e68aca691b9d1fbcb1785e9041a6aa57d4a10e3239ca3bd7cebc3da0d",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "1d2e0af0857e06178376a05ed180b38884d07113839984c26a12d5d220ba65f1",
-        "msg": "f8d2049ecdc9ef8f9a4f0b48d7e4a65e1dea6105b6492b003df662df0c3c69c81bff41501a0108df5d",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000080386a6147bde9c0ebef4300e8d94abae44199c1b31c48daf460af606f88b9de07",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "d0703bf5ade54207b811b7684646e80aad093920a4692b47a34d75bc9afd477a",
-        "msg": "686d63483c151c04547d3e798ce02e6e635865b0850f1e5aac81f59dfc13b71a2b9d97547233409e99",
-        "sig": "010000000000000000000000000000000000000000000000000000000000008052b63e8fc7fddb58189d14d180bec0fecee6ff1826f01c82ee91b9a29f6b8c0a",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "191ca485e7a8700696b59c1823ad08d74287f561fbd86beec5bd6992a44b59a5",
-        "msg": "3eadeda39eb501b71314a4c25b9182da5d7e3520310e1f0fe2b0ad9c75220544914fc32f6d63841e0e",
-        "sig": "010000000000000000000000000000000000000000000000000000000000008019c7a5663636219caa4f63682bc87accfddc5e0d41cc06a7ec059260d8564002",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "1b9e8d0adbec24e83b846bdad04999d27d08002ae5078ccf28bfde1a176b6251",
-        "msg": "c8e07fc9b35c736caef87cb0052984547ac50c0a66317ca8625773990e124082feaca9d6763db27fed",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f0c28457e8c4185305993b91521d2908fb9a05d3bd00a12cc91178ccee4ece808",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "a5985ffe83890e91f54a9643ef1aefe93df0c03eeebbb203910daf66b98b6d25",
-        "msg": "fe715ab00ead97d271ea1f278e3126618284c9d4b67d281239e3b8465db025e06b548000b8a72cb3de",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fbf685478068d30d9b3f1f77f62bd4d93cdf4f6ef9965c953bcf22c22f104db05",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "61004b3a0fd67d196666e06114c2c2b71245e5f2f45d1a39dfda3b8088d35875",
-        "msg": "f6f9f81269ef9a334997a73b2255f832b1528835e7427743fe22274eff5341ec1332f3045cdc653afb",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f5eb20c353574e463c36995f0384b92cb95d97ef0379246bf4117f9debf391203",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "98a544ae4de0b6d2f14f5d2567c545b98da81dbc54cbbc89ecba531d38e5edf4",
-        "msg": "cb3e28e36ec2f1fe57b7c60f9c991a00c9d614b93b155ced6d3808febb690c4168ec545c95898ddba0",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3bd297a3cfdaa92af9d9790e89b02be6f192d1eb755de4e4540e9647af805c01",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "ee5287675de98f7876fca5f18572eef637544e193aba4cfc1bb49f72a0e24cd5",
-        "msg": "d04adfdb70f6e5379ecc2db6825d9f8b81fef53d23f76744d512afcd14a7e0285963e0557451dba42a",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff805592b954ed62ba553f2987a109cacab1503283205426fabbb16490b8216c08",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "3292bcf61ec13ffc786db92751a4d616b60a3c0a0fe3eefb236a51b5a62c13d2",
-        "msg": "5464cbb1ea2466cf011f897634485f2a1cfc48fefd2248466ab2ef3431cbc332ab4becd33f22e90043",
-        "sig": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff188e4366baee32f3a993eb4a871a2ec790f4ecce1cbe2b2885f2c87ee2e1ce01",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "4f5c324d92b7ceb6952f8e438d1de61a6dd0a57555e9ed8a1707a38b4f65cd04",
-        "msg": "405b6a75a665360d88c5e4e8613e9bd24fd83ef71ed630555f5fc8dafd7ea519f40c1ff132aac07e75",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05d080243bd7be04d3b5c977d7df89aa99627f05d51174f6d8223af570fb63e003",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "72e2949f380711200d8d003b354679395245018cedadddcc19ab9a1e6892a06d",
-        "msg": "e890370a11f71993c0effb070e0a8d8b72804409db02b83331b3b06159db51ae7b808e721a8f845a73",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc052c2bc5461a63b5186c86790602e25cb70b2e8cb4b28a4464108a9a17111f7804",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "4f58f4cd5c9c9237edfd65beafcfe209994e949e005a440c6d9583b0cd964f8e",
-        "msg": "54b0ed775ec0946fc585f617d9045d47081230059ee1d63832bfc15f32a79709390945e05ebd50fe93",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05c767f1a6da793edf263cc70374dbcf1e33af9dfd33361217a2ab54ffae69cc08",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "4c02d3c1d2ab01389140bc2e8a40b3409774f20bfa58c406853245bc7084f7b7",
-        "msg": "24a4bf599d33aa5585c905b62db66d381a8c53791c646a4e578335456aba933d6069a4ec7bbcc6a80f",
-        "sig": "00000000000000000000000000000000000000000000000000000000000000003b5b6b7bd1b17890129794fd8169955c29621ac824cc1f3184e380a2a0156403",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "79e38f2538c4f135978174da5e7bb8c1b5e550b6752bedfc65478da97a5e87d8",
-        "msg": "c88789d790daeeeadc4edc2131a3e3cbf15f9c36853593c141c2f90e82e9e08af21ff15e67556f83cb",
-        "sig": "000000000000000000000000000000000000000000000000000000000000000070ad0e62c940c5492bd4f86a139534ecc517b60c3cf5934669d82a53ad0b3806",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "79babcec43b44b6b4f7b54496824eb4888afb4eac99746cbd835b21bef1c437d",
-        "msg": "8b8ae3b812f7d4b416b2db211ed3e3829559ee79b7668f90efd74506510d1b12c24569c2203287ee2e",
-        "sig": "000000000000000000000000000000000000000000000000000000000000000072eafc5478bcc92257839f1b1e0a6cc7d1389b8eb1b967cf22bbcc33f955730a",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "c20f2bc8af5bcbc23a91521135da26519af5d7bd9ee8f097c72fa1a43e098cb4",
-        "msg": "df261c04860cd0d3c11a18db5fba3a896aa57f58440a2d0eb3a0a3791a8472fc36c05331684274556d",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fa6c858dfd6b24c5d0bde9a37011eb975722b1bc86b8a597e77b56b5802b73504",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "2626739e090cd27886587bf4a8d0ad2a5609f6c78e0e3b30d71724295724a3fb",
-        "msg": "af2dc2cb897919d1db75fcb9200399e062d80201cc6e77ded8a162e90f381fd06a4398608d262ef8ad",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f5f64f0d9f6c0665e8772c90d363200e680d1d1e8d123bf329aea5881c55d140a",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "00780b40f3f752b8faf3f2d78db839ff5ae66d4455ec6168cacb43cd86f87c29",
-        "msg": "c409240a24701fa1a6c4703663f56faf80208c6a2e29c08204551d0ffe20792c19166101b2c67e2eae",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f6481140135219ca0be98c1f1df46752c59731b341bbcda06da738f40c25aae01",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "07f63f27dc95bb2c0498eeadbf522d8c4d4f5b1ff01fdb71df1617e2b6ce27c2",
-        "msg": "8f7cffaa8b15c95485c9cc124cf41eaba42c13527a8741031cdc22bf9602503fa35bc7c9f3e814059d",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a5f522ae971e61a6b733c38e91a775afe7476c6b14509a8f537a694c4d90ea20b",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "a34886be4d05f8dbab4ac5801e444249c853ca666147f55351a7d866aebee7e4",
-        "msg": "f9d8c8c7a2f32b794fef2056f59a8c36be0c93574e84fcd2e357614a038a7d3d290b701566e7cb7f89",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a6d48b2d18e0ef3855fb8b15ee2f1a2d50a9a070bd7552e2483db11a738f73106",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "203f8ff0777935d9249ded34bfeed7849df4a37be77b0cfa9b5b0779fea99f7e",
-        "msg": "9eef2df63631b12dd8fcbc4a5cb6ef57a4c33f2e808cebbd2bd7b2d15190c5bfd44a5ea07f48d1f3ca",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037ad19a1a9a717011926b8f6cc64c1ee08226787f9a6dad002034534ab80d072502",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "754acc53340b3ed529961f3865d0e939049e3b3e5640485b37cefd9303a7f73a",
-        "msg": "099b6a302641dad96f57f94007bac35cfca6cee19c01682713b7c94ec29d4a756c8966511025415de5",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f60aacb7a793302d1c8ce5d94f3a0058aed45ad910e3246dc73a40e5f4f39a202",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "b6ba1490d1214c5051de82a42733b1b4db9327f905b29da803f5fcf1c4cfbebc",
-        "msg": "d08d2c63b1abaf7abe35f4c8545438e4a74a214c2bf5cbf57ec5c4315900251b1d560d5721a339b294",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f38024031a20417fb8947f6c6097e11e2fdd174478d8c7f0104c8abcd81055e0b",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "f021c98963d8661b9dc444b275106300b486de15a20855bb65d8b6047a4a7960",
-        "msg": "6f1a02703ee7b33baae336b08e00b4505a4665f5b5915b7e7164aa57c146f856719d954ccd41915704",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f9bb503c3dba961474c37b6a30d28b2cf3fefef8b184ed7203d3c084e38ab200b",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "3b1400ca611c2754ef15d44e11f2eecdf633343fe315c38d63fbf6f79eda1f39",
-        "msg": "baa85f42818a99a5aee9fac9cd09b846097ef00bf384adbc023dadcf17929616c99f20f97582489d9d",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3f406c84684557dd1e3ca72284409de51d10b7378a60539d5660bbc08a7c9709",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "82797bba83b8c3476ea4de4d216f297a88e2ed3f65b114b448a85bf66d477341",
-        "msg": "575baae03882976efa05f91eb3162aa42c8defb40e7383c15370293c42acdfde2ed1ab0be8c032a9e3",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8e922d0d683cc6343a682f1564c8c1bda58cbbb17d2da9897a006abc5f9b80a",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "dac1992aabdf2321bc31a813f31c089a7f2b432b3643e81fee76b6f7e4d92cca",
-        "msg": "d30e697d012f868d52b6b264ea3b89a44fb94142a42d316edc6511c1298feb541bf2413f3021513112",
-        "sig": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa453f6cb452395b0364ffa254b7adb50f26730ca5533d924c3b1b9fb25484f07",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "e8eb8afc27425c1a4bd64b3b345e5a044ce00fff27e7320bb9fb4cce18d7a48f",
-        "msg": "9d8cadc1f3a534ffa325b0c201ccfa317f30274c3aed6d5316ec7b86f5aaae03be9501b8f10e56a967",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03faf207e03e56d4fc18e9f146c499c2643eb4cb86501524633ee2a5d93c3137d70f",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "6350830530e446f04dceb2b36b89917d9eb2c3064b502b9d7a30b68f691e10cb",
-        "msg": "a976cb6fbdc287e89c5e6d4a2c7895f720b0abe2a6378d4a9ba43fce013433a77436a120bed8aaf88a",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa04d64e28e3439ca41d0c4b3f77983c4375ece377d289ba338d862c44c3d09a05",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "b49da55e51df6f4e523d9bcec2dbb5181bcb8773c79904890881d1166fce74b4",
-        "msg": "4693206b662ff51ad39c71ff8759f4a5916ecd093467c81d0b895f1ceb77f1a3b5a4bc0fcc486116a5",
-        "sig": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa86059b9412abb6ddb5fbe233736f9d4bb31404b84c393c5d7e69dec9243aa90c",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "de962c682fa0bbf2f5038f902c5d2f3c17c93d4eddc91737326d1019fc1b4849",
-        "msg": "da293651b492c193426765cce3b0de424b20014a91e63b07d5c3e72495e4cf186b8541c6fd72aac7ce",
-        "sig": "0000000000000000000000000000000000000000000000000000000000000080c564035dd6cec51346f5947f6dfc69be3b0437e0e0c894b82a36528b4c23c00a",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "572bee49ec8727b492de106b4a5613466c7dd3d6d28b5cab184d53df884c7f78",
-        "msg": "4671a15ce528196ffba2ac6e9b68cbcd95de27575b7c1617c08ae785b12fa188ab5f0867f90e889696",
-        "sig": "00000000000000000000000000000000000000000000000000000000000000809fd25e1c529710b737c758f389090f90b66e381a4b7e629b799ecea9503f7309",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "58871b9b0ae0aa360fc51b048de619351aaae2cd78bc910a8d83529cfdd7dcd4",
-        "msg": "c003a4fa83d61dde2c154c4c7ce7e249705cb1517e0d63d06f6f7c580e20bedc837caaf8cdffeb695f",
-        "sig": "0000000000000000000000000000000000000000000000000000000000000080dcc7456e1a36a996f8aaae2c6eb4858cfb24bb930dba947704cc7e336428d708",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid strict",
-        "k": "14beba30b1343e3b2aa6c560d86d36c06e8cf11d87623bd4317f273eba30c08d",
-        "msg": "0a20f953a7cf39c257e9c0f25ea86a329522912288a71759dc70119f1e645dfe7a526d89f48e389609",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0f9cc7cd74be23da481960cbb62370a4fc9e1b79f71cbbc6224f658f7a9e901",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, valid non-strict",
-        "k": "9b64f066ee51e652179299a4947a2cd52af75a4ebddc0310008c19fcfc8734a2",
-        "msg": "3826e4b69c7ad7ae2534e63c3df85b89d9ddc8085c179dd294e5e0c8c42dd59398e05970223c409539",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffab8c8177da316914f6c716bb71e4e3d5f5561934a3c67d447a0f09a0159d4204",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, noncanonical r, invalid",
-        "k": "f82afab1a7ef7787f993383fb80117e68b6ca7990a5a887c811d35129e64a03d",
-        "msg": "96ae7508021b7ac05772aedc6fb2ac92896e0db97e235d8f1d5afba6abc14afafd764d528331c9541b",
-        "sig": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff10fc23b6017f5b07964591224d4cf1e2f9368dd5d65763edbfb9d2181a6b620e",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, valid strict",
-        "k": "be034dcbf7d7174b4ac58efaee2926d538f5f4eaf15b348200b6ae85df45bdae",
-        "msg": "9cb9e5de286ec582456231aed202cb557c1a8ca75fc497c28590c4053d0c445ec7a5c8227fd03e487f",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85e819f3fafd6c385224e67bd319c65dc7b4237e1776696d6de70bbf997065860c",
-        "valid": true
-    },
-    {
-        "description": "nonstandard k, small-order r, valid non-strict",
-        "k": "4627eeb717cfaa87fa0ef704f6815cc05cdc72508af5865d9b7b3df16e0f3ba4",
-        "msg": "2c37becc881975953aa108e98455f4ca682cdff137e6eda78fe62bb75261e6656c17e3cac0a6a2a0f5",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc859e400e0f556551cc3f50cf22dc1e8254a8bdd0ac463d286db89262057ea2d70f",
-        "valid": false
-    },
-    {
-        "description": "nonstandard k, small-order r, invalid",
-        "k": "060b86c475d86f9b9f74f733ec3c0c5626f745dd32037efb747e9f561f9dca66",
-        "msg": "1cbf8de24bc711f8cc9e53758a80aa272d85259497e162ccfb13c5a5d887e9279c7d61979042e40fd2",
-        "sig": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc855ab76979fd5957284b792f36ccb643d8492485cf6625598639ff15d8e60e0507",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "73201fadb7f255b98670d7e4300b8412709bfbc3a080a29d5a01dd6977fe30a3",
-        "msg": "aa9f7e9c9f3c23b7a2b89a13ee6551e7a9218942459191da3dd3745049228859e40b96d0662423bc43",
-        "sig": "0ec488e992dfab14c7601d39e54761ac38fc02397ecaba4f248a8870bf18605e493de633bc591c7ced80f4c35084e36082f9774ab3539d534587766073ce1b0a",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "4e6fc220944e92e427bf13ea92f18a3f62a7590c6ccf1e9806812f9db00d836a",
-        "msg": "a13e98209e11e9a1d6aec9db1aa13ac8892d2f2c0395bfc8e619bd00901fb3a06496638b35b1a5771c",
-        "sig": "de12e145457e93ac996b402ced1388082c7d049239f1aadcbc9e4d404482243d66aed4311e7e70c16590fac39f8a29f304b735b2977c0302010d141698544f07",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "28e157d460b1a372f320819b2b98d5fc90fa55283b285bf7faa9cccfd18ef3ab",
-        "msg": "f4c52a3b15e2631f5386b4b6afcba2107a389fea11e7f531fcb34258a9665b4ab2c6966175814690c2",
-        "sig": "78e0bef705e6ab450a82541c5a4ac2e2083c1a9107988f68c4130d076b1257b140695862fb02e357656286d089f5393d7dea0e49a3b51f280ccc0bf8a9e9af01",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "d505edb41a2c955173b8c1a3d918b6a422eb47a83c900a26efa7931f74304d42",
-        "msg": "ab52354f9c2b1d9097581a9f0901a5ebddf00a25b05db101678dcc08d30e9710d050c7485e595b0236",
-        "sig": "2aefa63657f2095c0a866caec141d60c5c06d5f5402a8a467afb7e43c2293af6b7b2e2ec0f4e68cae035d7f24ba0bad3b843321c60d35bc1ccbfa07608dcf00d",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "5b63bad3fe4243f0e56a9cc40ac778bcc89a7d864a606ff1f34ba51217a02780",
-        "msg": "3f77120da8edb9f10bb670ca38f11f26fcc5db66e09c7908a8d32905dad514fcb1630c554df252e4f0",
-        "sig": "f00a1e6ab93edd96f07a41202841d63a5d5bfea8f14cb982478bbc3ed64402d4d1a3622f292d1735a73c9d053f1c49a14ae22e6fd7d9380bc038ba6a43ec3902",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "f5a23b09bd942f4c7b46df97295dd12bfd2f2441783634e65a65fd27270a0d1c",
-        "msg": "bd7a05cd58fcf6f8451949f7ee921fb27fd62f14bcfdbe923b81821ba04b70872902f33bf50a996fc0",
-        "sig": "63bf0f71fe0827eb6986fe37ce9c57f0869f5e23b06810e916967186e6b3383a7d80975c4d80ca75185d32466cda2ac013dcc36cc331ca05c3382bdf0b040f04",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "c03c528890a304a511edc370d4ec516a7f62f0607a4bd0622706f155087ecb88",
-        "msg": "769145f52f7f4404d0e9144b12226a8daf52f32432ba80577182bfdaa77e27057e56775a8b1e425498",
-        "sig": "6f1b4bce759cef9e8477902bb87ef1f39d0429db150e73f4e49632ec26bd664c583efea7889a287a5815fdfc100eb137dfafcc20322ecbd7e56cd9ea1c2cc70c",
-        "valid": false
-    },
-    {
-        "description": "invalid k, regular r, invalid",
-        "k": "412a4e61bebd66f56063519bd439ee645f21ed0fceff7c0f854ab38cbfa37eb7",
-        "msg": "251f2c6ce159b6b6f065b6c0ad41a599e970549f88024d7da0c16499951ecedb26ea04ca4016398ed4",
-        "sig": "15ecc35c7583a020833ca25c0453d1a8727a9f00fec8f4190f3af7e55435734bc6ee92e713917b9c943fced8241f7c3b4913536c7a0731bf4602db4409bc200c",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "a1f1388562b2d9cb6f3f062afd9b163d62f66c89036f4cb35cc81d3d3413e0d5",
-        "msg": "76348d2ce25fae165e668ef69e05ac7c1dd87403320e484b9fcb459a40770cf13ba94435bf54f67906",
-        "sig": "b81571d6d4d96ac032cffeac23bbcda6539bb7f615f5c5d11556defbe77dff89dfe9556fcbcb760e13422f19e5689bebd4dc3d170fd4f2b0d8de1e7450354503",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "769b3c19e63f63427c6f15923fdbfb26b60aa270496a80f600ab3b28023731da",
-        "msg": "63c8e77a8da98a941e25c2e868af230431b0bab2016cf456813a4fb3422574883b6b7bbc5ead9c9f2f",
-        "sig": "168b99d36af3093b2dcf5e835f1dd8d6a86d6245e8c782d78584cb1318dfe7bfe858c694c5a665faa9d515e031b7b6ee51d64a37ca0ea813b551e4e2b663c808",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "ce82a91f7042f8ef885f8429cf2d8cf9626b87d86b879fc8bc3496b4020a1f7c",
-        "msg": "517cf90f672bdda7db9253c0d4e8703e283a0d16a0f99b77e51ce02b1d2bfd00f53ef5b54f27427a52",
-        "sig": "2adc3d4bc4f9c0649325487e51aa15a530df041a829d1a58c385b571f9ba0f93205d5d63501b6cbff7d17e4acecd87d1fce6694da7e444763b285cee39b3d803",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "ebc1fce21bb8b56e3533a26834ec66a6732af06e8e4948ec424cfbcc58a33a0b",
-        "msg": "20abd4994851e97bca08208ee28cb6ad046095a35e4fb27472ef6db51664d0ea1206d308035b86d1f7",
-        "sig": "e251d1511cace3b2f4525c2b894a4106de354eb9137a5279a0a43f5af6c5f58eac6100cbfd823e1d7d3dd880256fb69e9f7a3e73ef6bc40753340a92cea69503",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "4ced288dfce71aa5638644e8d7ac0b024dde71f28a3468d9f3708034ef3d98e8",
-        "msg": "793e3b836ca8bd2fdcfdb2530a83e07d6956d337a47aa99d810216d1c86a8e89866c5a8bd00e49200a",
-        "sig": "c9c84894c2f85240232321a2499996fc2b01879d819916f1ec8ff094a692761098718781865b2434aa0a1ec9d394b8991debdf1b4af3bb97b8f060eb2ffc1402",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "532000007b12d72ec2ed0206235a5b0979f1c689bbe3e9125ea1b19fc6f281dd",
-        "msg": "16a5de6fd70739e8e43a1fa8daead2b3ed0a6b285de4ca6528a4a4850329503e06fba7fd58b5f50f58",
-        "sig": "9f717bb495873087d1d764559ddbf56cd2026ab4101b5c058dfcb6e606d812db385edc3f635967a2e2305ed452c4ceeb61796268dab9a7c47bfaf859a7e27206",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "74bd6ce41b064bc551cff79c5d518e1dff2961d87a3df8103682d961ed037e44",
-        "msg": "551793ed55e169c4248c5338f13fafc0bf388e2211bb4727082e7bdb1d4f9f2853720f41b9ed189958",
-        "sig": "c6d3dbce9c3a551674e020eec35de9d2d518a5ee9b659325cd4e52df166d8b198ce290861bc4b94f402c669f4937f857ef5d87fd09c3283f2d3d897fd513260c",
-        "valid": false
-    },
-    {
-        "description": "invalid k, nonstandard r, invalid",
-        "k": "9ff1b6a2c09e4f1890d8b3626a7749e468c79a3a5392d17c971b59f0148b29ed",
-        "msg": "ae9f9c72a38d3f1abcdb448571a16c26d9b85abba5c512c518f93397de04a7fbde1920e01ce1063922",
-        "sig": "a7c5a8a726ce51e16d93f5aa50e3ef4b85719de2c501ba4d837c7c8bbf441396f6316de8c284b05b1d9f30d702771ba04f59431c6ece712f50e897062557b608",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "3ba0245045f61b305a2fa1cd49024f87bb83c7d116d4503f4dafc6a88f0f2149",
-        "msg": "de4a686cd75415b92f8ea894ab8de9fdeff4aac6c8c12b4eff43c0011422ea9843c30aaa1792df4479",
-        "sig": "16e21b403abdff163bae57596dbcbe7eea4353911d0fdf03519eb55edefaaed6f6a172a11d3b6f34ca90a351697db672c7ba7bc1db0586850bbb0fe862491b05",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "61e562614db4b3f65be87679d4185868c0bb5fae3af895291c3175a3a3d24c9c",
-        "msg": "c4119021d2d876e9175bac8d72418d7adf38c2791cdafdb1ea30850c297fb759b4731f1fde8b0b63ea",
-        "sig": "9f7c295a13fa39b5da62096f68539789906b1d4879dd8f2e49b5546eb325dc898b045c96c50c5dd6daacb466423d302b01eb329ac9c03337052e3bad4460ed05",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "5ed2e1214afcc0876befab3ace967210d9aa06e531e5337168d32dffc56bdb5d",
-        "msg": "b7c7d757c810f55371b06cb4bf61919b59a10c9044d020ca385f45ba225fdd409b610afbf02aa28f3a",
-        "sig": "429804d32fd9dc08d75079826f2868d464e66265ed43c449e26255f1ab67d8d5818e31fc611499b07b8295f305aaba43628f340ffc0886e987e0eb7daee5b600",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "16958b5c6e324906cd336cdfce3b4448507a429ea6e6fc6cd27d81f0da04f298",
-        "msg": "234f9bce2ae23bf7912e42c44da93052ec830c85a469a9c5b7eff1a5565a28d6a679603ffca7e618ac",
-        "sig": "e105d9e4854ca1f32754153adef70b6e0bd08b5ec7a746423da161d7ebfb5bd0ffea17fe225bfc51f0700d084216579d5a5cf5df93d9428e2ec0602ec1545a0b",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "b325dbd6d49b31a1d72eaebb03f952c0f92907da1a1a56b25c84008f29a04f76",
-        "msg": "9dafe21877c7508977c8c01edb5d7733d79a3acd04d6e6d6cc95a3291da3b7c33cbd52de25a716c52d",
-        "sig": "f2dc9804632395ab122f915837ad1e7591162423e62ed6dd75729788edc48793d8eecd14788fdf6ff01071657128611943cbfab2e7c4da1606f03b97dc004a06",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "64f680ed310587c6fb04df7c337a072a1fd208c35888d6c65ef64b86419094b5",
-        "msg": "19401fa1935f0e917e46b1b254839db4be07279a02028e7e5375f52a6e589823c0323fbd316831f60c",
-        "sig": "d5bf64012005b8320bca8e169c56c796eee3bba40cebdbce6df462c071a14e59df5001c88a91219949a6da40c4cda68daa355e7b62e6555e580a04cc1f699d08",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "ed4c9d68f553d5d033c0319f21e196383121cb6c87551f4fbb22d70bade36f49",
-        "msg": "269f433032c087f85bea1770ccab4eb3ef41ae86b8bdd380e310f2d293888681aaf9492a49e701c453",
-        "sig": "fa4e364c4cc761d6308d985cacb7084ab7925a9463836cff0d507ba9a1a4dad07d98af946098fef9fb353b9dda71e031a0b1cb6462812657db66c288cbedba01",
-        "valid": false
-    },
-    {
-        "description": "invalid k, invalid r, invalid",
-        "k": "0bd8c1c11438a2f795b98544e68c539357ee60650b9086d7e64a0b0f0fd209f4",
-        "msg": "e4680c8be19dc51e30c500d68df0bd7921a9a3581b1c87493e93c59bcc233b15effb340e28920dc97e",
-        "sig": "338454f29c9f2ce0445f0e47e213f98465aa52e326b6a1893225986add03562843f75917bcf496168968ef713d587c8b66db821e78bcd3c4833852ae1061340b",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "5f7f0b92836f230b452ac2cc2626b23436b3edf400d653f150bf3e758cbb485c88636a9cddbab42748",
-        "sig": "4879469aa14cbf6ae63170abc35537c5d404f0ffda31c9776e884e6409c9ebb88989122fb890098a0fce77772adb0c1a91aa5b7e6c0ad9d658e8fb73a11a700d",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "ea8a2665153dfd908a4a2173ee4175df6b7b5282ea09aaf837126895d0db9d73d106bfc5ef737a237b",
-        "sig": "70efd72afb81fe5d7c0afd3727a891e3cbeda52f304ef3443aed9b5e9525135f64473dece1880f65c69f90c400b534417a62caeabc340f1d93923ec4fa9f220f",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "6149c77883f4aba3e237df2c6b0c31baba1ee0e77030b438d0912c29701c161fed22fd94c500ee2df9",
-        "sig": "27701a0a3d838d4e07121d7cb9346e59c9cf94fa8da9543194bd32ecefb3abe235b787a080e034cc8ae335849c237c0fc629cf762c19ef2dd17d566048ff4908",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "1c779b468031980128b044a09684a663d6f444b500402bc01b58a96c31b637e3eda81b0227ccf54647",
-        "sig": "25a9d6f4cddd1c90a9bd189d6f47ed491bc6654ef1f2cc37ff2259d977f498445489ba44112102a3415b99a0e2700aea52835b1ba6ddf10a5d823875dcff1704",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "0100000000000000000000000000000000000000000000000000000000000080",
-        "msg": "22fc752d2a8c02ba963bb845c6a113dd29a357a54b2f4a222661739f1911ea7bfaac0f467fb2a8f05b",
-        "sig": "eb0e21560a13bf56197273063709556be20517d36d7951eb596254f7d9f91e009ef1289e4dd914e959022d9e7d603423756a81741dd209fada551ded005d3a02",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "0100000000000000000000000000000000000000000000000000000000000080",
-        "msg": "5069706685791d395aec29fb5a6317f6a85a832745f250232e7e70dc8c7ddc88890feee291afbcc8cf",
-        "sig": "246ecc1160e684570ca8333b66f4d412320ec73d8b20dabf849ebff4d1d3896d3254ac764c2f88f98e6c29f4320e935a872aa0ff0802eb4d3c293d4abf618803",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "0100000000000000000000000000000000000000000000000000000000000080",
-        "msg": "09086fa2ed644faeb9f3b438d65cbbcfb33b79dbdaace4c228262a253fedcb6370eb4257bb6156af31",
-        "sig": "d9d827782061d86fa8140c995a7cc6130688fdf2465655519a76d841443b2a3690176190b28acb5191623412e3977b2d0c14027e60cc985d6cab67b76069ed00",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "0100000000000000000000000000000000000000000000000000000000000080",
-        "msg": "beb124c5bfbbaf83423964ed7ae746c5be3ff8e12d4e07eb23e61ef9c8aa6f13f6a52298edde6118c8",
-        "sig": "6386f2e1822accd8e74e6a3af8cc082ba01132649a3c5a11f76fc8cadcef84a8cc8d31440733e40d785bcdb720147e6f9cd6638c4bfd77fee521ce055b61bc06",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "34d832ceeb363eaaae9f7863426a8879e2cfea11e132a15b5cc3bdbc9ec63abfb6a07d5022452fda65",
-        "sig": "26c54a80b0e914ee0f5e5634d259a28c3fb9ed851bcdbcebe8868f8af3fbff6eec9b70b5465a9522caa99e31c4b008821cadcf7b3e72b81c1e73fd918ff9b008",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "5ee933f3be68e38561935624dca2834390d8d6e901d40770f1131597fcfe1814dc579e3206b0c0b548",
-        "sig": "098849ec1a1cc17ff3804148b186836f2f872e6da933a1c52057e3b748dcfac7db0a50fc2dbd4ac23101748a33c4ac4e8d4fce0ddbb1c30ed31e508523e87709",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "aa12b302fd97b388e0680ceb87ce340b7896318cbf3f18ab42d8bbc7f1b2e07f95737d7b60e063bb95",
-        "sig": "7fe9de6232ac84d6f6e36f5fa34757e4fcec96fde3b38161fb1ba0343cc0b5073c9f584761b31604c4e37b886dbba0278e5cc072130c0e1672ebf2362a2d6504",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "01fede2712a5348217a93c0ebb30958f478e877e890cdf96a61323b44fccaf2a43551a36f14c4887fd",
-        "sig": "223310f9f0a86f4c494cf0fc904b05870b59b578c83f5d0155c7f32760d956c78a6f5f3e2091457e90ce8f398fa869a302e2d85c9dd65d66ce86ec591ee36207",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "8983978cb8595b525e4bb899c0544f788d687546c3a7cb48c728b6571bcbc870cefc246f10fc788b2a",
-        "sig": "31734987f954b8d9eb27ae3e73becef0bb69cfb29608954d423d20621d1962fde1bad584debbdd19a3a714a7cf2783000e61f2a36638e84e6903365615ff690a",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "6e0a23a652d9fcb2df94da7cb7e29013f4964db2e82ea3a94bbb52611e367f2fa6cdc8adc338682990",
-        "sig": "7c4be1f732531f82d22a6d68e455bedfacd9182c965cc43de4f414a3b8f046f1ac26b54e4c621e23e9a4810dc0e4a7149800383f6fac2aaf196450f1393eb00b",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "17a108880b0ba8847dd1bf9780c01a309d448d97cb977938e7b556a1b36c5cf2302104135c03ccb777",
-        "sig": "d83a37abb0916f1ee66a3af0413baa1059936308588057be1db5b9471e5cee2e05b20a7bf1c0640b40cf9d7d67b5bcca9477c4d5c3ae7f088da796886814d709",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "bd1aa78089bc130dbfcf58eaef600bdc2001c5207e0a89f2a45a22e4991af0da2be974d3ac9091762c",
-        "sig": "05c962ea35c45e04657e0df3444324a2fb7bebc0b8fb75848e8671e0bd0eaeac0ed4630978e72876da89ea91b63855c77579902cabb677d1c6475240a41ddc05",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "19b038aa549de1d24b746b750148ae9b5587a9cb76f8a82cc3ba555d14a6ee7488a57996a5cb6ef966",
-        "sig": "064f12f7e3bf9be0a1ec072c75edefc9524845dd3867615bdfd125dd8606c5d8945052542860c62aac24277f8ac4443fce12d08e794ad4d16358dc77e84d6406",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "19e151cc505a2a433ae5d4fa8d1f9e426594664c3944aba18a98675eea08773f227983588c15a20017",
-        "sig": "5385be577143081d0bf06b750fcb3629837bf89a7b943b95f0b615cc940e744fa1408bee9686dda7cf2e5e5068962833ed573162001e35ae3bb437b854e85d0c",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "5b530c813f654fe0b2bc7aadb1fb5237e003c93c7af4142fc2a6ebb85c91acc619eb465c0584451c2e",
-        "sig": "600f09bbaa562d9400392f7011fbad5ecac8ccc695d55c134e5621616912f837987c1f568ce37fbb908cf74b0818c5df3c9610ac0b3274ed2680c4076d357f09",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "65afddf7bf50a78b9adab13a7bf95320164b4e45de57cca7c980e3dc8def5eb27d4c652d7c65986706",
-        "sig": "c0bb20dccccaf0bd71200aa1065e734e199cba35b2b813ea362edb21a8c3273d38b26d9dedfb3eed0b80f023d1a58e1d9210c3f7fda0ada38e54ce5e46b9c009",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "7d0685d8effe168c348968432b0fb6f6de037ec42f1cb1a8efb9b6514fbf77f1613112cf8f091d8dca",
-        "sig": "5324eb23eb1e76ecfa5b2c2de486c687d37ca34f0ec7b63d365d72612aa19f32d44b63a95fd5f6b497b08b78f850a5034d2e14f6347b70dad5ca2838f06f2805",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05",
-        "msg": "8c1656d60d27b072cab3bae58803b4e7e14f2fcd99f53af88a6260c5883098c117ba7a17ce1473fae0",
-        "sig": "b5c9a9d2da9897bdeb30681103777a6d5f43c3ef47732c4f23a9becab52d19def9b06d57f021edbf0b8b42bab1a828c26fa922bc26330a6c670699da9f05440a",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "910cac169bc056557dc38c8bdcde1ac4fea9f4da21729c6dbfaab380f81bbe85c3be3c7e94cde0aa9f",
-        "sig": "08c0fda932a6006250a5382d80cc1f0d2c16a07091d44480bfbdae48664fa47744e0dd38692ad03db172424180a5ee6c7ea5d5886903a5da0b79a421a0215a09",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "10086435fc9e02c9a70003e2a10c23b042226eaa19b1f55b42b59ae818a21e47a06b3e187dc87ceda8",
-        "sig": "1b3b37f79b992364798fa0916817bbbd349724d8e7f990a86dfef18dab9eb1408f54a0f82ed7d372f0dfbc8857e36d1e9f27f3e16e523fd4bfbdaf5e38bd9f00",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "d7131637ada6e990a7bf18f7378935db2c6518b3ed493cda0bd6f6973351c7d661d455610903d1ca67",
-        "sig": "3245a6c3f5cb4202ea7a70f8990f1b5598987faac64713c97ddc86323933c42b762fec212cf3c6d3bf68c46dd24aba92659914f8cffc9e9f9157ffb27ee51b0d",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "aa549d7ae114da400861d7ab655578e7ae145de040e893abf4e98135da49e73779ce8a52d86db07b3b",
-        "sig": "787f863766b222a83b0a841615a35c01f6552155180cc2f79b53bb85f49a376edf9fa3ce440fa13d41787d00b9fdd46b0c1c357e64d20992b35d9b1f2ec6e803",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "61e16bf0efed9238c08baf36b391d3a8c47bfd373e94e2cf04b24c6eaaf84b24273a3ee331cc803f01",
-        "sig": "d255f6a4158a64e51f7afed2ab72c2d5a6a4e8a7add156d75a0d0ead5bd1bdb0fe563db8c343a0e315a757c080dd81acebc601400529261ce5afec3c5ac40201",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "0000000000000000000000000000000000000000000000000000000000000000",
-        "msg": "bc536e1b700ae014895123e69b706e13eec3f657dd781bd9cba49a27759e3217fac0a7f5e6b7fe911d",
-        "sig": "76db73614478f9518326ca1dc045fe4db51675749f7af311eba9f1986943abda79f5b01d20981912c2e0dc478cf6fa522a3af0e1365292d20af4d1cae6883b05",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "fc620734b2ab0d908afb96a9ffa25fd8856b5bc470af953b47f4dc9fc3e35cab05117f8faa108605b9",
-        "sig": "bfe4594d6d4db193046d47ff6f203c8a5dd125ddf42d4711279076a6608b656861d72a39ce18f6210fb065d92e507f312be17b4e865491eadbdd612ca3dad40e",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, valid non-strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "3fb0b3967af9da2f5d40827ff41abfcf588b9fd40a9dc8bdd2bae0e7e52cdd6eb2559243a5e3e87fd3",
-        "sig": "b970c1ccc734496d7ecc2f0ef8d7a4a4268f2257afb4b7c3cf2fef65aa884b36dbf3c0a1364601723212c089aa4388241c999b4638066d45b841d7a79f753a04",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "a13adae005edde412ad35c8802bc00b6f8aaf1b40e5085a82121d2a4ccd8d0c8392e2070138d8af901",
-        "sig": "55e48aa8ae786d41d8be701b989944e0412dc7a3b97e35459466c4ece8c525ca76ce809ac71ea54b0887cd844f2935e5336526bfb5c866a206277cc9f534e801",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "228f7e2e2e408ceb0934ca045e2d005a87524a1c266dc274f583002d94f65554cbdd6e98f4a4126aae",
-        "sig": "b3e7c7800b92ed95bb2b19ed59d768bc23a9a91288cb4398ba52820f7029a679f50e815f1533bb65689915d41a7c5a7f0b1552d895d26052568b46bbed069d02",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "263a5b5a3c5054103ef0a8dbe4cce6443bc4a212869d6cce863692b40510335c49aa52ec95696dc1f6",
-        "sig": "583bf886ae9e08cc08ed44682a46128358b41895ce92fac908fa0af13c2ddb2d9f6af82331d87c1d95eb0edfb70dd0f74888abd421227b3c5371c84d3adbcb00",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "43b1f6d7aee28b044892215c5f216a90a407d79567146b5de5329d31673cc45d2cc3e0978906890549",
-        "sig": "da700c9b5362670f9ece3bd8f64e9ec960fe2fbbd7ca561c6892e82da5b7c264e29db8a3b8934866bb0d0e7ea1d6db33e9957eb39e8543818fc68af37494b509",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "bc2c835769c3c36e19ab49e5228decb5b202d4f529ffb8b7b76c09c73c87d5ff45eecb794dc77a7ae2",
-        "sig": "0b8cd21c7657c391bcb64b58fddceacf34ee8d6ee904573c281f02458cb20eb1f7f97a23f290a10105cc6203e7dd626ab87708c1db49bb43a49b98dab65ab70c",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "138b17fb1809bf38bf731d433a2be98c629561812ced37900d2fedbe00626ca63c7b288046e8048a4b",
-        "sig": "14c73b78be6cf6ff70ee9411242e21c73cf2956e1310c7107f70924aad8ba5f94b17e708cb71ac544ef5988bfa12fb78dfde82458dcd778e1b886927f2ced20f",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "19ecf91dc8fc4425b39e8fa549864ed4134d8fb4526b72b73d8e60293bafcc6894c591450c0cf0c303",
-        "sig": "66137023995223fc074eddef0e022b0aade0f754ba2c1a7299d3705e64782785ede6528e6809f64c7ffe0cfbdfe86624e22df522d48e3dc6598d423475112001",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "565606b4640a833eee02a3dce324d98db27498f8200582a0741ca8552707012304e4294274ddce5201",
-        "sig": "48bd3c06d2107146e2087dc9732b9dc4f18b1ffc8e763ae73bf30bb3ac37c9ec7b53439c63d69fdf9e15fb0272292c08cc90ae00622c4172b09507d0e5561d0d",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "078ef7d9f8d78c8d2a6b0a51fa156254095e1b1488dfea775d4a26090ec557f484f17ad27a36517dc6",
-        "sig": "8abe5190a8e249831cd0fa133d6a336494e0c2f92059fa7891ffa73d456fb71d87458225a046babb3e9137e54f36936ce975307f750019cd6f9c6dbbb9b86d07",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a",
-        "msg": "f2406e636e5116bba55924d98d9ebf9f16aea5b6549729886c43f484a8146071b4d8782f7c4af8e942",
-        "sig": "ff1060fc87aa8d8d74ee145af2282665adafe4e1346a134fbf937cb8e96c22197548ed89e96bd82268e0067dbbb82a5474e3cdf180681cd16adf1a9d0b611f04",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "07d2edb512eac529522edb1e0812bf7039cdce95a66af45a2217b42b5e757ba9814678bf38055c6f57",
-        "sig": "927f7cd2cf00238b593937ecc4d3fb0c42739d4cdc1f5f9ff594f5d85ba9a7bf14a043e013a9a98ad0a26f167ba21432a3054bf72db6ff5034054c39f3e6470c",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "bc1c35b93d7bd080e4178e0694804bb7cc6892cf1a0a94cc115e2c82ea0baea771760c883f34eb50e9",
-        "sig": "d7a7cff7072311a0372965e4e83120b5f86b0d9aba5dbeaa216a16f0a3f77aa91d5230df95002370a61b7a76b05cde47773a1cf5a13b058c3af8a3c76373310b",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "7dd0837c5df74fdc45ad6589f7dc901e3407d6b138ee1dc806f0992373a5badbc7ec6b43b4e9b8d190",
-        "sig": "71e52019934f8bf6143ea46009de0239610014637464016ee56796cdca086834ec58ae4a1d322e8ef2461096ab8b48aa3ee4d1bec5cff0ebe92ae164b257a201",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "a63737a320e9019ee91bef093d8e8bc5bc12f1bac216e52aeedd62202c9e9265226fdc1110aed8d845",
-        "sig": "86e2ee56d91ea3de48f2afa3e738ec4ed3641967a50565fb87e1fd9ce2c60673366ec5c0f5814e57b1fc96d6e4b684da3d15ce7ebb2e276599f160d56a89f30e",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "5c8b1295a29672ca1fb13fba70299133a8336bc97d648eec8cc637b8f91d04efefb353546c6b5e5e89",
-        "sig": "5c37f688bdb7b77c1e0f0cd230c2227d6b1b401c240d9dbd81a2263603e33f3759c098095fdaffd70a3f90067304e34ca49a846dd8b0f36ece54597a8fb6b207",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f",
-        "msg": "47f931b7b933337b37f6050182b99394a97d36428dafec3983e8cc10ad2fc596bc2b57eb1c1158a69c",
-        "sig": "9517b66e319cb490016e22bde9572cf16681d0d3a4e9f26ee96e8d8bf0a78972d2593f03195b40b8d383bec289e010445b3142fb094922f9ff90d32804d6fa04",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "efeacd7e9c40f5afbda7c19509fe1f33c80b8b183b33ed0ca0c00802b6da275b5e52563554c9188913",
-        "sig": "0cafe232759d340c950d315016c00c58fbb919c719cd9e574849b2f244b0f72988550145ef1d4e95b2a6ad4f5594b766e3b4b4baa49590a64e26d30c37550701",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, valid non-strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "55ce6f1cb96791ea278434b263f152fc0918eff635d47841f1b257d1e04cb21cc89d512532b3a6d8f7",
-        "sig": "a86babf7cc33a8a72d0c9e4809cbe01775faebcbd8aa338ad4817bbe1733209816c39a1060d83b15751ac1ea4b9146d39324ba5aa0a6efa71c748f394c5f7809",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "3601ee90dc9916e1c1b6bcc0b2edd4be4f596f28d354a0bfc25876a02e8001524cdf0be6aa424ce2d3",
-        "sig": "6eaa2ca8aa1e408aac9e96733fef6a618429671b5890f1a616dede589d6ad799303d831529fd208c4f185a043974c381da11ea9da588a75da891b3f51581d101",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "aa14d60a5ab45d2a5784ce5c2fbcb315160cd97f87a17887ffdb4bf1138960c491683c99f3718ad548",
-        "sig": "dec5ccd6c78c8bd460229c82f273c82472cbf53a1aa553ec56e1b7f3e9b94a91208c07d90672a7918ddec69d44cd2789fa4cb727aec510d96cc58b016d43980d",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "55a021f539058192372dd21d4b0a1e7b9354bf08ab32038b9a78d17c73b77f228ccc7d242b6e324182",
-        "sig": "21e393e2823eefe05b2841c81f31a0b69be60fb7584a734d75c0f9930639a8337c3a378d710d60f88308b5861db0bc3c26528bc2a8342f204ae9188c71b97f04",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "72dda47d737f44ee2649c8188b9ebdd8fa1208e238d11b92fa925bb90cb2a6082f4db1f3aca97774d7",
-        "sig": "f9c5f6e00a4ffdd13ec950c1a4a37a5479ecd883800c558f298be8794895734ec2f7e8dd8336217d050fa2213222581816c3981bf86d9257794fb4c4b452c909",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "fa99fd9fd936c024c53dd07ca8599a2e745e8cd88665c455c1e1c7eb57580e4927cd7b379be9683c18",
-        "sig": "8adc9580a7f6495e5d3e2c1b314d866429a05eb038eafbf05945bec7fdcd4f96690b51d7dc46546d635a8ac0ed5cc7d350a0f0ab632edc4f722446e4e1a0330d",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "99113ed0cf802a9d84622ae850694c941c5ac6838b4d29ac3c5abe34a1ec795e8b7465c1b03ce08359",
-        "sig": "c533ee63e26bf6591d32945ae51b1b3a1d07c70868e02f57cc9f25bd115a00f64205195ca1503c722d9b3dd8d6110ca2c8737327404295b144012d8dce7ea002",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "2c194454c4e1165ebd6cac04e6d4a0a6c5b1bc98a05be35a4771fd1caf45a823f45e2af1e4a1316f18",
-        "sig": "4c4ea8f7bfa0092eacc70fe1837f212999c6057db1795b991d8ce0e8848bc2743657686a0025767368af5f349248e60fadcf7a25eae4c802c620f2d230506f0d",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "e399abfffbfa594ee6a83134ddb9c316b4902509aa04b1673fb8695fbb4d3a69af687c6ed8f482f687",
-        "sig": "cd4a2a32012ae2c9be3f14e453895edccde617b3c083d2203d8af6113dafa3221f2700f961a861b95b6b52c2a80ba9566ef830ca8523bea1406c84ad5b559105",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "8ad292844dcf8ee7443c2bd16d2ab23b5b03dd6f03ce89480b8b1bf8c9ccb21efbcda4fb2b131c2dfb",
-        "sig": "a00eaa36882afed899d7b69c444efa84d8e568c497cc8117234691b43d2781413b9d233e541098335bc47395dca66a95e48667ac4d978351c7186b5ca188730a",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa",
-        "msg": "15357d818cf292f7ca06391f282b7969481b97b3fc749b65eeeecc6bbc43283227dc53982a1cddb554",
-        "sig": "0b375c0202dbb69f848ca5cb2ceaa9db47903f83c8bdbac0ebd8f7c0665e62a3f41c7365995ea990a45933327309f3ee67e252aff9322e957b1fc6b12e2e0108",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "6a484aded8b4655d7139a1d03e37719a18f27a975e185389f60d61f3849e65cba4ab3c62b8fc283d1c",
-        "sig": "05be8d4f145aa5a855f24c04806a663db18f9d733d0fd4fb2259ebd8cc8fdf1964470ffe6b20ded3f3d3c72ec30248eb2476736e7bd51d64631055ce6e4b8802",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "72777020f42f30c8f4bc21a599fc6e1f14e2602c58710a436aefe2293cd36beebb25a728df0c40c5f9",
-        "sig": "53f75c4962b250b4899c25ada2dedfd89e9f08b05b72dbafd8ded160b489c851f15202e3b5e04c3913c1d24f2544351a3a9c8d5c1587baff1c520b353b354005",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "615fd980f23e0d25463adf02e9080c58615d842bf45833b49eb3bcdac9c948cfc4aaaab7fa963def13",
-        "sig": "2ef8844f973956ae43c2a3afc2041c1ee2e550d6c9f5322dc3caf877b2ae2333b0566601f73adf05bbf2f40cfc2e745106d6c34521c967125e2fc0715bf08c08",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "65881234adab4b3411540d72b72528b2db53ecbccfa4d2f0f573fdf20b5f5258c8fcad90bc7f0085df",
-        "sig": "a67b6af36d9c75598e1f176c0b0df99c3d1e2336449e0f762302a56d15523a89cff25451b71c6d5b713c69c9196a3ba044b52a3d3c8361feee4a8cc687f0fd00",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "06cdf31114f70ab2fdbb1cb7265caacf5d7c984c5724992f9ef196e91c411001df8242452669f7e0e7",
-        "sig": "5e29f78e5590c4b8b7d5189fba6540a8ce7131669970fbbb3e767da375fe0cd7ac05092e05d3a507598f3a95a81148c0f7712fb399805a0b993d0515e1c76e01",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "0000000000000000000000000000000000000000000000000000000000000080",
-        "msg": "dffe02cea0c483c9618bf09a7d269fa441eceeacbdfe11ce1a2513b67fd2b10397ab93fc8171211b96",
-        "sig": "0db96f2f0a1353aa7339124173cff43ff488eea58706e4888dddd93d3fef5510e2963876ada0503c1f6f60dba7422153192462bbbeb373098292e344a2b9350a",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, valid strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "95484be90a695cc7fb62b1803ac22aed25744f43e58c7175ca8cf5a20dd065c55b6903294c04d381f9",
-        "sig": "488e6864582c19dacf1dd555c115404a03a0b3c3afdb52cbbbe8aade0e87ef80465ce2e2fe4c4af7fa13d2e51e5ae04aaa70ed50014c3850fc8d4b6213cd6005",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, regular r, valid non-strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "70282e39e6eac5bfc44d7e3b1a67b8f1faaf3f4bf646361e4368c4a06a103970734bfaa73a54df97be",
-        "sig": "add6c32eeca70b858157385efa8b79bd9b6c0b934c5cdbe593726196362c920d64e370eb9514fea65c22c1758f12a635670a88b183caeadc1e4ef1923ca66b00",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, regular r, invalid",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "4d92530d18b5742ccba1bcce1d565436759c8633869688a4404fd558a23b446392506ec90dff0bcba8",
-        "sig": "f38b7297c1c624ab517fa9673d6c37180bcbb46a9a85d82f89bd954d827410f26a66d3a6632a6a8f529b0d4f8839a968edd3c11e65344ef214ba1802e41a9303",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "5855673206c511e6578cbe66b2bde4a930b42ea36e0030e250b6f42a0f1a4b6e5dfa391ab71ec03603",
-        "sig": "9b8b531aba1fa2d65a9000b091a6ddbcf8a314ef2ca16c3b4cb219db8127a6e2f9682bb00f1d3b0f7b88399ffacf098ed6f078ef5b6479941115aa8b5006440c",
-        "valid": true
-    },
-    {
-        "description": "noncanonical k, nonstandard r, valid non-strict",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "dcade251441e39bf3ea9420b803f2cba6dccb6d2c8a67013af2de7172dad2178ab97d164719b0d8567",
-        "sig": "b4ef1d425abedaabd78d84facc36cc029e7125ce57bf8c760a262889531c1f5c77ef3ec4b74476e8b04758d3b110373e3ae9d15c74f1efb308c766d9aaae690b",
-        "valid": false
-    },
-    {
-        "description": "noncanonical k, nonstandard r, invalid",
-        "k": "edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
-        "msg": "58f5469012215e5c62dc03d4d2b2666d5fa8d5043fae9dc33060de8a7c3b1a11a36e2ca9803ed3336b",
-        "sig": "0a650e0927b55f07ec279fc483421a1009445f0d4ff10eb23e624378449568230f2bdc8d0689623832d49d3b88481924fca363756101053739135210e37ad204",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, valid strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "452dda6d8b82cc2acfe46cd038ed6003e023e35c95cefc2dd6b355997b72d4e07d05cf3639b52e9fa8",
-        "sig": "6257d87f18cdcf13b96b1f20377b9ddbf95bc23ce7fc2687e413327399405797a70b4ea4e34f58e555aa8092543b248b3cfceeee69c905748bacc9d821c3b805",
-        "valid": true
-    },
-    {
-        "description": "small-order k, regular r, valid non-strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "c126975f4eb72571a6aaeb6bf4266f3a02313d7adb9379a3bcd0ae5ba737728191b6baab116fb997d9",
-        "sig": "7f2f9090cce613eb7f2fb950487feecaa898e281ccbf85a67362c072f12a773230ace50c5702a41c7495c80b87a294179fa6b5b484ff9138edfe869662b90407",
-        "valid": false
-    },
-    {
-        "description": "small-order k, regular r, invalid",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "1f2f19d4153144b4cd367815faaad92ee737b3441ade23cc89a35a809f75dc34bcbf0236bb52fb21dd",
-        "sig": "7f6706407e1cb0fa8a054f35fade3b3efa069f0e31b51d2fe3257965379082238bcca8648aa5e4f20c44a25cbe15e7e4a3a7f7f1b4abe3c2c31b37c4fabe060a",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, valid strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "6616a63791c5bb52494fe4f4ed991a4373d774dd3f595f9589f6d0e3628ac81c55ebdf45c887657735",
-        "sig": "227f96041d16ebbbfb43f52d6112caf9bec06f2c116d4a7090b87a5a075467188aefae3ba33fc7d00ebee423562d8b4c742232a64639ebdc4624ef242ef0c303",
-        "valid": true
-    },
-    {
-        "description": "small-order k, nonstandard r, valid non-strict",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "2e541461f17cc7ce518d86aaab452f030313b5e201fe439a6f354ee4f5bfd77e2dbed77d6e97a7ee5a",
-        "sig": "775d44b255e2d013f4a914c885dfe913a6f2a4bc2f2d746b68ae9d015c3155b2a37a3ec09d8fde047c1d8cb6f858dd3c5f3f952fd54840184b1600723eed3005",
-        "valid": false
-    },
-    {
-        "description": "small-order k, nonstandard r, invalid",
-        "k": "26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85",
-        "msg": "0e5ec363c13cfd2ae3e3905cd7a9461b79ac56cce0f4271d332678c647c60217b108acf62ef5d40991",
-        "sig": "5d3529bf4ae926fe94cb05ffcb8ddc47bc04572373ae2a8b5e4d1b2020ee19e098bf4c8610de32b6e994312c1b0bccf2972d1693f4db337623673f2f2cc6d50d",
-        "valid": false
-    },
-    {
-        "description": "s = l - 1",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "1555b4cc87975062cb485ff8fad9dc9f72af1233006a52cb889ec3e219b61091a38245f1ecbaf5f11e",
-        "sig": "58666666666666666666666666666666666666666666666666666666666666e6ecd3f55c1a631258d69cf7a2def9de1400000000000000000000000000000010",
-        "valid": true
-    },
-    {
-        "description": "s = l",
-        "k": "0100000000000000000000000000000000000000000000000000000000000000",
-        "msg": "7300248d5a6474443d2d035564c52e1e4449e47aaf5b22cc8e8919a873815723d47a01abed3cdcb472",
-        "sig": "0100000000000000000000000000000000000000000000000000000000000000edd3f55c1a631258d69cf7a2def9de1400000000000000000000000000000010",
-        "valid": false
-    },
-    {
-        "description": "s >= l",
-        "k": "3380d332618d1facf6a0de5fc23706f017f62d04317971eb5bf22dda88225ede",
-        "msg": "6e322d8e592323c704bb009eeb21e5d068df862967619b404d8f44f0b03592ac13c0bb3caafc537ba1",
-        "sig": "6314fa54fa518e22671ae8d6ef4e6623732c0690e2f1cdb536fa1aeab6df858c7f7b96a1a1e9a55817e1b22b407b91b1ea07e31cb9fe504b64859c9be4abb514",
-        "valid": false
-    },
-    {
-        "description": "s < 0",
-        "k": "8507440fb75bfb41bf6f8dfd70cdba7b6a1691b587f99752638aed043bb80489",
-        "msg": "b02ea64839f232b9dbdb550366b190320a35e0497918b71a6600d6bec94c24751b4da8af57301e921e",
-        "sig": "4f91f9c5a4c88d041549661c8077f03affd9d684b1699395b667782983f6733c1a79ee65857062362c271b2b4bfd95844b75ce7d962af408ad1855e7ba972df2",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "fc05e7e595fb02654fe8d65298f04d70bf5c6177fc836b7f711d2d8432376efa",
-        "msg": "02380499977d0300cea2c9b6380f972089aafef93daecdb879a5c7376d0320cc1faa23bfd4cad2a941",
-        "sig": "35435e3c76763688e0811556e6a5a45f8344d5bbfed8a90e1b1a4a304f22fb937e082407b994f6bac53b44a3ad90f998298621a17163c32d329885fd92f9c225",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "0de4aee82362bc252351ab57c56ec2de866968285a95f4bed9aa11a5d28d8bbd",
-        "msg": "dc1eb91419fe628b18c6b1b1b322ac2784f7f00d88877ee8e38578bd2d71a099d8e35f2a1ee0edbf67",
-        "sig": "dddeb9998b66330bbb3cf13ab1680cc7ad78848114be92ed28d0301e3b6b5a2fcaed081573facdec8b4a315ff2c95a86bdbc6c81a1169e9cc89ef0afedaa6b4c",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "4c6abc3b49e3c89278a0be0fb25abb250c3e17b6fc6fad40ebe31eb8b4eba760",
-        "msg": "b7681c595137f5246c61d2dd0ea111492ed74acf4d86c09a1d13b773f8d4ae51a5ed56876af5560228",
-        "sig": "cb0c16567e1eb2d286b530b6141ef7cde9989494ed4005a661f58f0e1af88f39a276add1cd741f43cf2ead44f9bf34f7fa206a0f792b09f960e1c3a105ef5c68",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "3836bc884e23618f61c5bb8f73ac6279472884364d7c51ffcdaf1b71052f62fe",
-        "msg": "fdb32ec757f20492258a33f39ba5228f64315e42ee7df052a6d780058e79e1ecad8abe9eba1852e3b3",
-        "sig": "095af4e4f6568005f7cffb683971623b583cce56fcf70241ca65d2fb149bb357f4927c95010d85e63611342b7ef886b774e6a1e61f4bdbe31f01d25d45d8cc8c",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "ae5f0d899621fd9475077d5b6416ba20aaaa1226055cd6175c065df13891380b",
-        "msg": "e2cbde40afc67a644c9ea3cb8aebf1d3d4e643561ad2d721ff6b9556ae939724ca35d5bc0dd3af7b72",
-        "sig": "f05ae48dd79cbf1f6c155dbc589b705b0c05667e6e7bc3ab77413252b86e7f055d7f89a9443eb5199636a4984edbef0a39f34190f482b99c9e14037ae37088a4",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "b2364670d733b602ca4cc9bfe8700e0448c196640adc8c68ae1b78719e4fcb17",
-        "msg": "fb5e6c9350ae18aed73ee76b9474ba9c5bc06e6a61b2e471fcb94f373cf97a0b416491e1d80fde07ee",
-        "sig": "057352dbf791e68a73227947e7e95c82e91af5484d3cbfc4eadc57ca41e44faf5d12ad8325bf1e157ec863fe34b4fb81e7f67fc500e13e4c890cd51bb6ea67c4",
-        "valid": false
-    },
-    {
-        "description": "s has higher bits set",
-        "k": "3e53d6770f480921d205d0f6971bae2d1e2a70b2a539e206ccc16005c0c4aaaa",
-        "msg": "ead6ed7077da892ab2336a1d409809253ca02db4a91ba90fcc361fee22b0836fa9cbdc42826cf658ce",
-        "sig": "a3ffca65caca1b735505085e8983f6b21d9e116fb87a18ca5d5729f32ad669c80165f81302edd3eca50e27bff64c48101fd2f4cf12ebdcb6cad65eb9074bade0",
-        "valid": false
-    }
-]
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_12640118.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_12640118.json
deleted file mode 100644
index b9f8e05..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_12640118.json
+++ /dev/null
@@ -1,277 +0,0 @@
-[
-  {
-    "account_id":"01node.pool.6fb1358",
-    "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-    "is_slashed":false,
-    "stake":"127117874593561676908216477083",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":268,
-    "num_expected_blocks":268
-  },
-  {
-    "account_id":"baziliksub.pool.6fb1358",
-    "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-    "is_slashed":false,
-    "stake":"195934379796858865032018232628",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":535,
-    "num_expected_blocks":535
-  },
-  {
-    "account_id":"bisontrails.pool.6fb1358",
-    "public_key":"ed25519:Br8jaPbedPekPPN7cQB3jQabLMq3Zmu5qwMutNPno26s",
-    "is_slashed":false,
-    "stake":"163756215433006440962523300182",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":532,
-    "num_expected_blocks":535
-  },
-  {
-    "account_id":"bisontrails.stakingpool",
-    "public_key":"ed25519:8Rav3p1X3VwptM5RSTMQJpFe1xymPYdkLjptTGrERPz2",
-    "is_slashed":false,
-    "stake":"214323458150123872568178249268",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":799,
-    "num_expected_blocks":802
-  },
-  {
-    "account_id":"blazenet_voting.pool.6fb1358",
-    "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-    "is_slashed":false,
-    "stake":"103643573797314913574213404355",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":267,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"buildlinks3.pool.6fb1358",
-    "public_key":"ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",
-    "is_slashed":false,
-    "stake":"129553050789011540546852357995",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":267,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"certusone.pool.6fb1358",
-    "public_key":"ed25519:HhZRKrV9oTYT941e9uPzc1RL1VSXyEpm2kYpU7x34XB7",
-    "is_slashed":false,
-    "stake":"144274830959301059348152558435",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":533,
-    "num_expected_blocks":536
-  },
-  {
-    "account_id":"cryptium_voting.pool.6fb1358",
-    "public_key":"ed25519:9rAGmqEbPD2uES4aYvYXujB5RXLy7qthDU8TSLN7S11g",
-    "is_slashed":false,
-    "stake":"208164601270629034929332999242",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":530,
-    "num_expected_blocks":536
-  },
-  {
-    "account_id":"dokiacapital.pool.6fb1358",
-    "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-    "is_slashed":false,
-    "stake":"208301136568884545225151181424",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":801,
-    "num_expected_blocks":802
-  },
-  {
-    "account_id":"dsrvlabs.pool.6fb1358",
-    "public_key":"ed25519:3S4pwayCyzvjreu7hREG5b4azkBt9fEXwYsEx7QqtdED",
-    "is_slashed":false,
-    "stake":"200680987686848065676725374591",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":510,
-    "num_expected_blocks":535
-  },
-  {
-    "account_id":"fresh_voting.pool.6fb1358",
-    "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-    "is_slashed":false,
-    "stake":"103687786923510558789245180133",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":265,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"hashquark.pool.6fb1358",
-    "public_key":"ed25519:EqyBTyrx2GsdNgc2BsPmjseaMrsCi2oZrMBqx43atJsL",
-    "is_slashed":false,
-    "stake":"133133754825895445698224688379",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":261,
-    "num_expected_blocks":268
-  },
-  {
-    "account_id":"inotel.pool.6fb1358",
-    "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-    "is_slashed":false,
-    "stake":"216372821790774527342580580069",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":788,
-    "num_expected_blocks":802
-  },
-  {
-    "account_id":"jazza.pool.6fb1358",
-    "public_key":"ed25519:DervSGo47ozfmt1oP5kGdHm66RZnNPvaHwRv8mNKreWP",
-    "is_slashed":false,
-    "stake":"111189076837554331892922959864",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":265,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"masternode24.pool.6fb1358",
-    "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-    "is_slashed":false,
-    "stake":"123604032825207463353074544877",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":263,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"moonlet.pool.6fb1358",
-    "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-    "is_slashed":false,
-    "stake":"105462825878401350230347654904",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":267,
-    "num_expected_blocks":268
-  },
-  {
-    "account_id":"node.pool.6fb1358",
-    "public_key":"ed25519:C3Mra5dRxeRGmbLkhFBk8Q4z1YVznu3fAfJCwRm5ufQu",
-    "is_slashed":false,
-    "stake":"102966859446991004081129682449",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":266,
-    "num_expected_blocks":268
-  },
-  {
-    "account_id":"node0",
-    "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-    "is_slashed":false,
-    "stake":"1106500253216727052904981378850",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":4014,
-    "num_expected_blocks":4016
-  },
-  {
-    "account_id":"node1",
-    "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-    "is_slashed":false,
-    "stake":"1241299905515696991926821010598",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":4542,
-    "num_expected_blocks":4547
-  },
-  {
-    "account_id":"node2",
-    "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-    "is_slashed":false,
-    "stake":"1237349850977081228738870707801",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":4528,
-    "num_expected_blocks":4550
-  },
-  {
-    "account_id":"node3",
-    "public_key":"ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",
-    "is_slashed":false,
-    "stake":"1245345756613385345228755741395",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":4317,
-    "num_expected_blocks":4549
-  },
-  {
-    "account_id":"sparkpool.pool.6fb1358",
-    "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-    "is_slashed":false,
-    "stake":"139395696494488401782732863257",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":529,
-    "num_expected_blocks":535
-  },
-  {
-    "account_id":"staked.pool.6fb1358",
-    "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-    "is_slashed":false,
-    "stake":"130411391619008850487134986759",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":0,
-    "num_expected_blocks":268
-  },
-  {
-    "account_id":"staked_vote.pool.6fb1358",
-    "public_key":"ed25519:5yiikr4EzveNdsDC2r4PPeBhxLBZEv6GsYhUb9Uw2Xq3",
-    "is_slashed":false,
-    "stake":"108057312866813905469993637932",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":5,
-    "num_expected_blocks":267
-  },
-  {
-    "account_id":"top.pool.6fb1358",
-    "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-    "is_slashed":false,
-    "stake":"174990926446694750735762079502",
-    "shards":[
-      0
-    ],
-    "num_produced_blocks":535,
-    "num_expected_blocks":535
-  }
-]
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_15178713.json b/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_15178713.json
deleted file mode 100644
index a24081e..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearbridge/test/init_validators_15178713.json
+++ /dev/null
@@ -1,182 +0,0 @@
-[
-  {
-    "account_id":"node2",
-    "public_key":"ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",
-    "stake":"1257504580358775091457441287692"
-  },
-  {
-    "account_id":"kronos.pool.f863973.m0",
-    "public_key":"ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",
-    "stake":"101875007021689212002628449655"
-  },
-  {
-    "account_id":"node0",
-    "public_key":"ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",
-    "stake":"1302697050499105309160313508795"
-  },
-  {
-    "account_id":"node1",
-    "public_key":"ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",
-    "stake":"1302523310896280442400935812134"
-  },
-  {
-    "account_id":"aquarius.pool.f863973.m0",
-    "public_key":"ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",
-    "stake":"87715119143731584530182096257"
-  },
-  {
-    "account_id":"iosg.pool.f863973.m0",
-    "public_key":"ed25519:ENp2MvEsT4kVDRdyScSDJZeCMovVPPoodSfHVes1r43M",
-    "stake":"94272632211294227100314192306"
-  },
-  {
-    "account_id":"certusone.pool.f863973.m0",
-    "public_key":"ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",
-    "stake":"124586234334924790922942772176"
-  },
-  {
-    "account_id":"masternode24.pool.f863973.m0",
-    "public_key":"ed25519:9E3JvrQN6VGDGg1WJ3TjBsNyfmrU6kncBcDvvJLj6qHr",
-    "stake":"113584978915478143979523867994"
-  },
-  {
-    "account_id":"blazenet.pool.f863973.m0",
-    "public_key":"ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",
-    "stake":"111295663727710232054743125435"
-  },
-  {
-    "account_id":"nodeasy.pool.f863973.m0",
-    "public_key":"ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",
-    "stake":"90052500672156968849175493372"
-  },
-  {
-    "account_id":"fresh_lockup.pool.f863973.m0",
-    "public_key":"ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",
-    "stake":"138425887588609465338548474366"
-  },
-  {
-    "account_id":"bitcat.pool.f863973.m0",
-    "public_key":"ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",
-    "stake":"100234566175912149147278733049"
-  },
-  {
-    "account_id":"orangeclub.pool.f863973.m0",
-    "public_key":"ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",
-    "stake":"206422338721240973922917860238"
-  },
-  {
-    "account_id":"staked.pool.f863973.m0",
-    "public_key":"ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",
-    "stake":"104925148035900493392076949992"
-  },
-  {
-    "account_id":"pool_easy2stake.pool.f863973.m0",
-    "public_key":"ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",
-    "stake":"121350739732359556066425254246"
-  },
-  {
-    "account_id":"dsrvlabs.pool.f863973.m0",
-    "public_key":"ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",
-    "stake":"118430397402109738739913585445"
-  },
-  {
-    "account_id":"inotel.pool.f863973.m0",
-    "public_key":"ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",
-    "stake":"122377586114143066589449486848"
-  },
-  {
-    "account_id":"bisontrails.pool.f863973.m0",
-    "public_key":"ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",
-    "stake":"333574499013464210477937668030"
-  },
-  {
-    "account_id":"lunanova.pool.f863973.m0",
-    "public_key":"ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",
-    "stake":"117249017473488169017577634969"
-  },
-  {
-    "account_id":"moonlet.pool.f863973.m0",
-    "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-    "stake":"97806661254921859702553042135"
-  },
-  {
-    "account_id":"moonlet.pool.6fb1358",
-    "public_key":"ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",
-    "stake":"122873531594973893142965066976"
-  },
-  {
-    "account_id":"staked.pool.6fb1358",
-    "public_key":"ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",
-    "stake":"197352814208902359694898114151"
-  },
-  {
-    "account_id":"dokia.pool.f863973.m0",
-    "public_key":"ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",
-    "stake":"167432217130375811242413280228"
-  },
-  {
-    "account_id":"sl1sub.pool.f863973.m0",
-    "public_key":"ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",
-    "stake":"108344733504941382421097741437"
-  },
-  {
-    "account_id":"syncnode.pool.f863973.m0",
-    "public_key":"ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",
-    "stake":"91894963409466872884425909845"
-  },
-  {
-    "account_id":"sparkpool.pool.f863973.m0",
-    "public_key":"ed25519:D8ByHdRhPAfRQNgVj1Pri8P2A5P1jthbyqYha38MtyBb",
-    "stake":"101062335130810367279853639849"
-  },
-  {
-    "account_id":"stakin.pool.f863973.m0",
-    "public_key":"ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",
-    "stake":"92622739032351359990449172596"
-  },
-  {
-    "account_id":"zainy.pool.f863973.m0",
-    "public_key":"ed25519:CnYuTtsUsmYM8WxQiC3UMAbdVnapHtwLT2S7WBFKhD7M",
-    "stake":"72852799958430931761534272218"
-  },
-  {
-    "account_id":"top.pool.f863973.m0",
-    "public_key":"ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",
-    "stake":"118873956066342219264625344133"
-  },
-  {
-    "account_id":"thepassivetrust.pool.f863973.m0",
-    "public_key":"ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",
-    "stake":"114952650178092781885825061089"
-  },
-  {
-    "account_id":"01node.pool.f863973.m0",
-    "public_key":"ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",
-    "stake":"120071351755715519118419160897"
-  },
-  {
-    "account_id":"jazza.pool.f863973.m0",
-    "public_key":"ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",
-    "stake":"128079230725758055167178063078"
-  },
-  {
-    "account_id":"figment.pool.f863973.m0",
-    "public_key":"ed25519:5vyPYDsCsxfJvgremrL1cRPfuFqgm62AsyC4AZYJM85w",
-    "stake":"90823251460945832172910731989"
-  },
-  {
-    "account_id":"zpool.pool.f863973.m0",
-    "public_key":"ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",
-    "stake":"98662268073513729701598460119"
-  },
-  {
-    "account_id":"bazilik.pool.f863973.m0",
-    "public_key":"ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",
-    "stake":"119647863712502906021175727322"
-  },
-  {
-    "account_id":"alexandruast.pool.f863973.m0",
-    "public_key":"ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",
-    "stake":"106257088884203233987630221218"
-  }
-]
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintignore b/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintignore
deleted file mode 100644
index dddc8d0..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintignore
+++ /dev/null
@@ -1,5 +0,0 @@
-node_modules/
-truffle-config.js
-js/
-test/helpers
-coverage/
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintrc b/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintrc
deleted file mode 100644
index 97751ca..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/.eslintrc
+++ /dev/null
@@ -1,52 +0,0 @@
-{
-    "extends" : [
-        "standard",
-        "plugin:promise/recommended"
-    ],
-    "plugins": [
-        "promise"
-    ],
-    "env": {
-        "browser" : true,
-        "node": true,
-        "mocha": true,
-        "jest": true
-    },
-    "globals" : {
-        "artifacts": false,
-        "contract": false,
-        "assert": false,
-        "web3": false
-    },
-    "rules": {
-
-        // Strict mode
-        "strict": [2, "global"],
-
-        // Code style
-        "indent": [2, 4],
-        "quotes": [2, "single"],
-        "semi": ["error", "always"],
-        "space-before-function-paren": ["error", "always"],
-        "no-use-before-define": 0,
-        "no-unused-expressions": "off",
-        "eqeqeq": [2, "smart"],
-        "dot-notation": [2, {"allowKeywords": true, "allowPattern": ""}],
-        "no-redeclare": [2, {"builtinGlobals": true}],
-        "no-trailing-spaces": [2, { "skipBlankLines": true }],
-        "eol-last": 1,
-        "comma-spacing": [2, {"before": false, "after": true}],
-        "camelcase": [2, {"properties": "always"}],
-        "no-mixed-spaces-and-tabs": [2, "smart-tabs"],
-        "comma-dangle": [1, "always-multiline"],
-        "no-dupe-args": 2,
-        "no-dupe-keys": 2,
-        "no-debugger": 0,
-        "no-undef": 2,
-        "object-curly-spacing": [2, "always"],
-        "max-len": [2, 200, 2],
-        "generator-star-spacing": ["error", "before"],
-        "promise/avoid-new": 0,
-        "promise/always-return": 0
-    }
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/.gitattributes b/node_modules/rainbow-bridge/contracts/eth/nearprover/.gitattributes
deleted file mode 100644
index 52031de..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/.gitattributes
+++ /dev/null
@@ -1 +0,0 @@
-*.sol linguist-language=Solidity
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/.soliumignore b/node_modules/rainbow-bridge/contracts/eth/nearprover/.soliumignore
deleted file mode 100644
index f06235c..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/.soliumignore
+++ /dev/null
@@ -1,2 +0,0 @@
-node_modules
-dist
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/README.md b/node_modules/rainbow-bridge/contracts/eth/nearprover/README.md
deleted file mode 100644
index 07b897d..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/README.md
+++ /dev/null
@@ -1,6 +0,0 @@
-# NearBridge
-
-TruffleFramework template with travis-ci.org and coveralls.io configured
-
-[![Build Status](https://travis-ci.org/nearprotocol/bridge.svg?branch=master)](https://travis-ci.org/nearprotocol/bridge)
-[![Coverage Status](https://coveralls.io/repos/github/nearprotocol/bridge/badge.svg?branch=master)](https://coveralls.io/github/nearprotocol/bridge?branch=master)
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearBridgeMock.sol b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearBridgeMock.sol
index 1a55c8f..7475fbd 100644
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearBridgeMock.sol
+++ b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearBridgeMock.sol
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 pragma solidity ^0.8;
 
-import "nearbridge/contracts/INearBridge.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/INearBridge.sol";
 
 contract NearBridgeMock is INearBridge {
     mapping(uint64 => bytes32) public override blockHashes;
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearProver.sol b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearProver.sol
index 503bb71..b7d2b91 100644
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearProver.sol
+++ b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/NearProver.sol
@@ -1,9 +1,9 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 pragma solidity ^0.8;
 
-import "nearbridge/contracts/AdminControlled.sol";
-import "nearbridge/contracts/INearBridge.sol";
-import "nearbridge/contracts/NearDecoder.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/AdminControlled.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/INearBridge.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/NearDecoder.sol";
 import "./ProofDecoder.sol";
 import "./INearProver.sol";
 
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/ProofDecoder.sol b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/ProofDecoder.sol
index 4a3bdc2..3c1a045 100644
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/ProofDecoder.sol
+++ b/node_modules/rainbow-bridge/contracts/eth/nearprover/contracts/ProofDecoder.sol
@@ -1,8 +1,8 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 pragma solidity ^0.8;
 
-import "nearbridge/contracts/Borsh.sol";
-import "nearbridge/contracts/NearDecoder.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/Borsh.sol";
+import "rainbow-bridge/contracts/eth/nearbridge/contracts/NearDecoder.sol";
 
 library ProofDecoder {
     using Borsh for Borsh.Data;
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/NearProver.js b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/NearProver.js
deleted file mode 100644
index 75fecb3..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/NearProver.js
+++ /dev/null
@@ -1,49 +0,0 @@
-const { expect } = require('chai');
-const { ethers } = require('hardhat');
-const { borshifyOutcomeProof } = require(`rainbow-bridge-lib/rainbow/borsh`);
-const fs = require('fs').promises;
-const { computeMerkleRoot } = require('../utils/utils');
-
-let NearProver, NearBridgeMock;
-
-beforeEach(async function () {
-    NearBridgeMock = await (await ethers.getContractFactory('NearBridgeMock')).deploy();
-    NearProver = await (await ethers.getContractFactory('NearProver')).deploy(
-        NearBridgeMock.address,
-        ethers.constants.AddressZero,
-        0
-    );
-});
-
-async function testProof(merkleRoot, height, proofPath) {
-    let proof = require(proofPath);
-    console.log(computeMerkleRoot(proof).toString('hex'));
-    expect(merkleRoot === '0x' + computeMerkleRoot(proof).toString('hex')).to.be.true;
-    proof = borshifyOutcomeProof(proof);
-    await NearBridgeMock.setBlockMerkleRoot(height, merkleRoot);
-    expect(await NearProver.proveOutcome(proof, height)).to.be.true;
-}
-
-it('should be ok', async function () {
-    await testProof('0x22f00dd154366d758cd3e4fe81c1caed8e0db6227fe4b2b52a8e5a468aa0a723', 498, './proof2.json');
-    await testProof('0x0d0776820a9a81481a559c36fd5d69c33718fb7d7fd3be7564a446e043e2cb35', 1705, './proof3.json');
-    await testProof('0x1f7129496c461c058fb3daf258d89bf7dacb4efad5742351f66098a00bb6fa53', 5563, './proof4.json');
-    await testProof('0xa9cd8eb4dd92ba5f2fef47d68e1d73ac8c57047959f6f8a2dcc664419e74e4b8', 384, './proof5.json');
-    await testProof('0xcc3954a51b7c1a86861df8809f79c2bf839741e3e380e28360b8b3970a5d90bd', 377, './proof6.json');
-});
-
-if (process.env['NEAR_PROOFS_DIR']) {
-    it('should able to verify proofs from dump', async function () {
-        this.timeout(0);
-        let proofFiles = await fs.readdir(process.env['NEAR_PROOFS_DIR']);
-
-        for (let i = 0; i < proofFiles.length; i++) {
-            let proof = require(process.env['NEAR_PROOFS_DIR'] + '/' + proofFiles[i]);
-            const height = proof.block_header_lite.inner_lite.height;
-            await NearBridgeMock.setBlockMerkleRoot(height, '0x' + computeMerkleRoot(proof).toString('hex'));
-            proof = borshifyOutcomeProof(proof);
-            expect(await NearProver.proveOutcome(proof, height)).to.be.true;
-            console.log('proved proof ' + proofFiles[i]);
-        }
-    });
-}
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof2.json b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof2.json
deleted file mode 100644
index cf65e5a..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof2.json
+++ /dev/null
@@ -1,78 +0,0 @@
-{
-  "outcome_proof":{
-    "proof":[
-
-    ],
-    "block_hash":"821YJSshC7kFcUQfst93ABh2KN3FSWG2jdouNYk9mtUW",
-    "id":"CLWtv8qVCoJpTMTLYVkJmxL9YgNFtfViAZ1Tb61DnhQB",
-    "outcome":{
-      "logs":[
-
-      ],
-      "receipt_ids":[
-        "8Si6FJg2KzUevnHb71DJtZgeEz8Yr2rDzpNHPmZvLEFQ"
-      ],
-      "gas_burnt":3633100297168,
-      "tokens_burnt":"18165501485840000",
-      "executor_id":"nearfuntoken",
-      "status":{
-        "SuccessValue":"WyIxIixbMTk2LDE5OSw3MywxMjcsMTkwLDI2LDEzNiwxMDQsNjUsMTYxLDE0OSwxNjUsMjE0LDM0LDIwNSw5Niw1LDYwLDE5LDExOF1d"
-      }
-    }
-  },
-  "outcome_root_proof":[
-
-  ],
-  "block_header_lite":{
-    "prev_block_hash":"HX2u2p4XPLPMiBydcF9riFKoh6vqwsamzms25fyncQ1r",
-    "inner_rest_hash":"97zbp3ivM3bgN78ia1gGquqKtGyGtJWPr6z2uhav1EzQ",
-    "inner_lite":{
-      "height":478,
-      "epoch_id":"EcHTYYC85Du4Ec6Ge9wHSq2YovoYHjbrKbWjDXxtQv2V",
-      "next_epoch_id":"ABcfZDpvJb2z14Kg5Xwt9ucwQYdtXguQhBZrRhQnX94A",
-      "prev_state_root":"4sLNs8wnMTciYDiz2cJFYHGCgE8UWSPiT2ejp4Pidtzt",
-      "outcome_root":"6erBQFcckMkm9r5UnyfzpDuhhDYnKeomcK94oPjRWZ7b",
-      "timestamp":"1593378592795392000",
-      "next_bp_hash":"FuHdRu2F7F1u79Xc1RnGkF24haAAEJRywbJznVuZpPVu",
-      "block_merkle_root":"EjsmRcH8Xnk6nCRAGz6Mqf4zBQvALrVDuonvSi8BTmH5"
-    }
-  },
-  "block_proof":[
-    {
-      "hash":"HX2u2p4XPLPMiBydcF9riFKoh6vqwsamzms25fyncQ1r",
-      "direction":"Left"
-    },
-    {
-      "hash":"811Zje7UUQhRoYYsZCj4t71reETSBgQ7o6GYqCK4PSb6",
-      "direction":"Right"
-    },
-    {
-      "hash":"CQq9wqQ5bdAKjFM1AjAz8UFGmSZfQp5wxdLBTUsKUPkg",
-      "direction":"Left"
-    },
-    {
-      "hash":"5JHR5e66KRasgGAveg9eK3iLvDuuTZ3A85jKtCndSPJV",
-      "direction":"Left"
-    },
-    {
-      "hash":"G2Y2Dw5zie84v4UF7XLvcXMGnUMCjzsh9YChYvPh1gn",
-      "direction":"Left"
-    },
-    {
-      "hash":"7An3RU7j9paDzTpHtrXK8vy1cW41mYChrfVoGw88CKc7",
-      "direction":"Right"
-    },
-    {
-      "hash":"4ahKTDTi7XHxP1huLnaa48hJxCzZLRQSgiACv8zjHAUv",
-      "direction":"Left"
-    },
-    {
-      "hash":"QNpRL2pUBjQ95QRcFdeDUMF2hAxRtHG2ZuihWB5NMCJ",
-      "direction":"Left"
-    },
-    {
-      "hash":"3EcETmaAgoj8ZGQQs66MMUMcLnj459iaMYEssafrdQRG",
-      "direction":"Left"
-    }
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof3.json b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof3.json
deleted file mode 100644
index 7a80a8f..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof3.json
+++ /dev/null
@@ -1,73 +0,0 @@
-{
-  "outcome_proof":{
-    "proof":[
-      {
-        "hash":"5yzGvaYdHfq4kZeoV6vnygvQd4Z683LXRkAXH1KDeG3U",
-        "direction":"Right"
-      }
-    ],
-    "block_hash":"BUCRNeND73mVaFbwmLg7zduM95LHtN2vzK2HHvJNWEGM",
-    "id":"64J1o71ngkx2urRxj5UYa64v9fWT7yf1HxGHUYgthoSC",
-    "outcome":{
-      "logs":[
-
-      ],
-      "receipt_ids":[
-        "DzFs47QNEdibR1MTjAhUmigeJL5wo9sNdG8zgpGVN9B3"
-      ],
-      "gas_burnt":3633100297168,
-      "tokens_burnt":"18165501485840000",
-      "executor_id":"nearfuntoken",
-      "status":{
-        "SuccessValue":"WyIxIixbMTk2LDE5OSw3MywxMjcsMTkwLDI2LDEzNiwxMDQsNjUsMTYxLDE0OSwxNjUsMjE0LDM0LDIwNSw5Niw1LDYwLDE5LDExOF1d"
-      }
-    }
-  },
-  "outcome_root_proof":[
-
-  ],
-  "block_header_lite":{
-    "prev_block_hash":"65WBPSVpqtfSrLypahveYzxs1C52AGexKVjqBrMoxWRn",
-    "inner_rest_hash":"22fymMDcV7YdKZHwvxH8kxbZVFdHh3MEmNXT4t9eWMFf",
-    "inner_lite":{
-      "height":1699,
-      "epoch_id":"8zEcgopfVM1xbkd5jfYu9Mpyd7GF76RPBXKshheqXBMX",
-      "next_epoch_id":"4VGtNxYqDFfgKSQ7b6VjYAFSzN17sKNm8pFhHnL2H8vJ",
-      "prev_state_root":"BWChofcus3fmDTj5zJWZxRbdaUiBWLUGWDpyaRXfQjui",
-      "outcome_root":"EPVTqyz9tKwcCXcyENZNZaBzcrN5mR1PrH2vHEZCJJkr",
-      "timestamp":"1593379656945908000",
-      "next_bp_hash":"BKD5rntrpPTgf9FtfVgdz9cDkFJCrwag77pGDAJtynu1",
-      "block_merkle_root":"FvvEfD3e7r3YkVKNMWHqB1QwvmnXg53Y4aVcW2fhnCkZ"
-    }
-  },
-  "block_proof":[
-    {
-      "hash":"J2CZD4NxihHFKG52U2yKuxgk6DnYcgwQhXfEy9j9HAeM",
-      "direction":"Right"
-    },
-    {
-      "hash":"3eHf57igSgyiFLHFauyMPiR6hEps7WZZGPVDunskYE9n",
-      "direction":"Left"
-    },
-    {
-      "hash":"Ad9aFkPwy6bavwEwrH8oRz9WAbofJMqp7XGrGyuHLmnj",
-      "direction":"Right"
-    },
-    {
-      "hash":"Ekn1Ze5UoYJsnxnJQeXZdvgtaVZG8mPubsftTEBSKr72",
-      "direction":"Left"
-    },
-    {
-      "hash":"9JRBfCoM37tGoeYzW5r31xhjajQouXhXFLozSCLShXQZ",
-      "direction":"Left"
-    },
-    {
-      "hash":"5PrDip98cCtboHfLXG53waLHHVLpmMA4jEwAH22dqECa",
-      "direction":"Left"
-    },
-    {
-      "hash":"8U29oeQgdyQ2dRfuQ6vnZMyxYuX4UbCoT4bwL44XC93U",
-      "direction":"Left"
-    }
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof4.json b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof4.json
deleted file mode 100644
index 55fce5c..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof4.json
+++ /dev/null
@@ -1,46 +0,0 @@
-{
-  "outcome_proof":{
-    "proof":[
-      {
-        "hash":"765xoBEaDoGv3GGZo72WjSg7e8ZJdkLam5zTtX6osWcK",
-        "direction":"Right"
-      }
-    ],
-    "block_hash":"37jihqoUDFY3agpY6Z5fQt43DUmAu2XfKDMuLC6T93Wz",
-    "id":"9dPJ2s3uTVWo8p48KLJ6YgJW5tJeFTzJf5R3wtzCtPZ2",
-    "outcome":{
-      "logs":[
-
-      ],
-      "receipt_ids":[
-        "7Jkh8hBpM9NRq9YpWVXG7rJQmrELHSkdBpc4Y1uj7s9"
-      ],
-      "gas_burnt":3633015402031,
-      "tokens_burnt":"18165077010155000",
-      "executor_id":"nearfuntoken",
-      "status":{
-        "SuccessValue":"WyIxIixbMjM2LDEzOSwyMjUsMTY1LDk5LDMsMTAwLDQxLDQ2LDg2LDIwOCwxNyw0MSwyMzIsMjM4LDEzOCwxNDksMTIwLDIxNSwyMTZdXQ=="
-      }
-    }
-  },
-  "outcome_root_proof":[
-
-  ],
-  "block_header_lite":{
-    "prev_block_hash":"8neByRWy6wqoBpPGz46VdszEr7XhfLmBw3QSmvzVVELp",
-    "inner_rest_hash":"3kJvpH91eZrLheYATduYUjmVkceuLksrRhaLqgXoKkmt",
-    "inner_lite":{
-      "height":5563,
-      "epoch_id":"89ja3wyoPQC2Jkhe7prY1Z7dEh7zW5552jBVcefSwTTQ",
-      "next_epoch_id":"9yUKBU6NhwLf5VRaifRcSFeczSXSf2LSfCoMWTBwdRNf",
-      "prev_state_root":"5evKCqhiXFSxUBPy288QVvJFRm8ecibCNf8P1EGZZFjV",
-      "outcome_root":"9bMTQhvq2Jk2yz6UcZaotQTy5v3eKntSwxdfa7ur73gU",
-      "timestamp":"1593387441646721000",
-      "next_bp_hash":"5vpAs3FW6qcg8LL8iDN1Qpy93xEh1Hu116K5S5o6LNzx",
-      "block_merkle_root":"9mToyaNyNYqzn5bj3WcGmEmgToeCuaHvhiPZjW1CMCuW"
-    }
-  },
-  "block_proof":[
-
-  ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof5.json b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof5.json
deleted file mode 100644
index 63be486..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof5.json
+++ /dev/null
@@ -1,69 +0,0 @@
-{
-    "outcome_proof": {
-        "proof": [],
-        "block_hash": "836bGij79WLpoGTJfMS7wHyeNDzcrR6Fjcnv7k5s35Zs",
-        "id": "C7bVNak4z9JQgXrQLS5ZAotqyJHCfD8ntgHorMaLVCFN",
-        "outcome": {
-            "logs": [],
-            "receipt_ids": [
-                "Bt88L3Zw5HiKd21VQJHBtPMqNk62CEbomD6zzJRQrFrG"
-            ],
-            "gas_burnt": 4328442536275,
-            "tokens_burnt": "4328442536275000000000",
-            "executor_id": "nearfuntoken",
-            "status": {
-                "SuccessValue": "AQAAAAAAAAAAAAAAAAAAAOyL4aVjA2QpLlbQESno7oqVeNfY"
-            }
-        }
-    },
-    "outcome_root_proof": [],
-    "block_header_lite": {
-        "prev_block_hash": "3Ygc9DBL6L3eZkfqjC39yoqpLdtrFa73v1Pij8WaLMXP",
-        "inner_rest_hash": "CDu5ma6FyugzXNJFgZLvrqJ6QchmnEsuC9ybjx8uf4Ve",
-        "inner_lite": {
-            "height": 382,
-            "epoch_id": "JAHuDz5JnQ8AR2bsX8iYjRMR6GUh66qsa4ikUCkmJVKF",
-            "next_epoch_id": "3eBVUeAYLVNQCQGiQLX7m4VSdYr8L17m5ZtMoHLtsJTi",
-            "prev_state_root": "GctVMceieDngovPKdnGwza1pDjX3L6c4XB9Gg72QdtUr",
-            "outcome_root": "9gu8iYjW89gw9HC2Y3gh74mt8h1i6WXkxGyHyGRQnXgD",
-            "timestamp": 1595963616139902200,
-            "timestamp_nanosec": "1595963616139902322",
-            "next_bp_hash": "HV5FPYQ9sPbB6MrtKcpjyiTfpLRMRqH8YLL2VQ9FrGU4",
-            "block_merkle_root": "CxbeXAcVWyygiQzojvHER832pxrZ9KLcSZNF7rLnkN1T"
-        }
-    },
-    "block_proof": [
-        {
-            "hash": "3fzvjNT4ZHrMwXg5nweVoEsLrRfHwXcb7Q5bEKpsfEHo",
-            "direction": "Right"
-        },
-        {
-            "hash": "5vMJodboQKRgrtFb2pGaKDfHC5kAPTxKtnHoxVNm2oAk",
-            "direction": "Left"
-        },
-        {
-            "hash": "7xgpkyrDo61vUTzZz2jjF4HogGrUsaTG4fo26jUj3p83",
-            "direction": "Left"
-        },
-        {
-            "hash": "8nTpPqjbLKadmGszN4WffFscYAfEYPq796nprPNXUAjn",
-            "direction": "Left"
-        },
-        {
-            "hash": "G5XQf9jzSuwmHGqJfoapDjZBkeQ7mBH7vS8dGfusRQqG",
-            "direction": "Left"
-        },
-        {
-            "hash": "HdNY8yxMyZM2nxxV3XF5FbbiR6J5AoA2CxNbyYWEe4aG",
-            "direction": "Left"
-        },
-        {
-            "hash": "76idRjn59X54cnSKUxqUtRygeqzaxDsCE7frJ57avbT9",
-            "direction": "Left"
-        },
-        {
-            "hash": "ArxmcYkRzQaKEPGTFE4mySbzPu6qPQ7X5gtbNEiWtKb6",
-            "direction": "Left"
-        }
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof6.json b/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof6.json
deleted file mode 100644
index e47f9c3..0000000
--- a/node_modules/rainbow-bridge/contracts/eth/nearprover/test/proof6.json
+++ /dev/null
@@ -1,69 +0,0 @@
-{
-    "outcome_proof": {
-        "proof": [],
-        "block_hash": "DJ7CrNVFWG9xRUddbDB2N3o1tgFzqh2zL9PyjVgWhTr1",
-        "id": "7UGbrQMEmhCUS5uSitiqDLBYpnuu13hzxJVDBRMU33JK",
-        "outcome": {
-            "logs": [],
-            "receipt_ids": [
-                "2NJvxcFsUmYtfecMe5dAsYbK27efj7gMx5btq6UvWhrh"
-            ],
-            "gas_burnt": 4326379475896,
-            "tokens_burnt": "4326379475896000000000",
-            "executor_id": "nearfuntoken",
-            "status": {
-                "SuccessValue": "AQAAAAAAAAAAAAAAAAAAAOyL4aVjA2QpLlbQESno7oqVeNfY"
-            }
-        }
-    },
-    "outcome_root_proof": [],
-    "block_header_lite": {
-        "prev_block_hash": "3xGtPdbfL6JbJ2qxf83GVjfuVgjhnUxGryz3RDjo9DGw",
-        "inner_rest_hash": "C4RVt5Vfp6AJvuM43Q4PaM3RCD9VGoXFCS7Q9DyR4LWF",
-        "inner_lite": {
-            "height": 358,
-            "epoch_id": "G2zVpfirbS8mDpkqhQXvkWfn2BPyJK7AyGtdkbfmmWSC",
-            "next_epoch_id": "FUJuQchgouiJVgdQmnXb2eXHY2ZwLKc4iJmUTGaZ1CEA",
-            "prev_state_root": "4Xi5gd345XM3KXmUKL7JB8zuWEzhEnNdt69kq91Fwcxw",
-            "outcome_root": "9gbMSq8kPPvnrUjPEqMVq6vMSP12scW4vnHY3cn5uXsP",
-            "timestamp": 1595961718661674000,
-            "timestamp_nanosec": "1595961718661674000",
-            "next_bp_hash": "DBqtF8zBxVgR9xpu9uVr3fikjwasUmntV6aruR3u8CYe",
-            "block_merkle_root": "8BLeevKH5iWxmWyGwKwghFkxG9TxYqucD72BitMvzDZD"
-        }
-    },
-    "block_proof": [
-        {
-            "hash": "7MHvRCw9YCptNxpcYNvnfnndygQniNsKC2nTgeusArcV",
-            "direction": "Right"
-        },
-        {
-            "hash": "7Cyx5oWucX6pz5GRXPEneBCHSezCaG5Zq26nkp8zSbUb",
-            "direction": "Left"
-        },
-        {
-            "hash": "AZFaMDqLKEUe5qmzWyaw4CV4z3VMWbtE4BmbJhpRn6jy",
-            "direction": "Left"
-        },
-        {
-            "hash": "7Y3YueQZS2X21DocNsQcXXtSxcjEjawxgxd4o6xu9M2E",
-            "direction": "Right"
-        },
-        {
-            "hash": "9GoDSqLs53L5KY5KRuJRK8D39MCJvcdD3JzzAwwXR91q",
-            "direction": "Right"
-        },
-        {
-            "hash": "DcGqQCdBUkGS8xxarpZSyCiWCKTzLKQtPydkXeBsvQxf",
-            "direction": "Left"
-        },
-        {
-            "hash": "9gVqrMoPeTqWFCXxZp8gBDXpsvCdqLiE3V3DjZUXEw2a",
-            "direction": "Left"
-        },
-        {
-            "hash": "BqrgC11cz1TKZdX76FRXEhuZLL7NkyXg48PSkxJJh1yM",
-            "direction": "Left"
-        }
-    ]
-}
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/near/.npmignore b/node_modules/rainbow-bridge/contracts/near/.npmignore
deleted file mode 100644
index 04c7b07..0000000
--- a/node_modules/rainbow-bridge/contracts/near/.npmignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*
-!res/**
\ No newline at end of file
diff --git a/node_modules/rainbow-bridge/contracts/near/eth-client/README.md b/node_modules/rainbow-bridge/contracts/near/eth-client/README.md
deleted file mode 100644
index dec8823..0000000
--- a/node_modules/rainbow-bridge/contracts/near/eth-client/README.md
+++ /dev/null
@@ -1,9 +0,0 @@
-# EthBridge
-
-Ethereum Light Client built on top of NearProtocol with Rust
-
-## Testing
-
-```bash
-./test.sh
-```
diff --git a/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/spec.rs b/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/spec.rs
deleted file mode 100644
index 62e8ca3..0000000
--- a/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/spec.rs
+++ /dev/null
@@ -1,125 +0,0 @@
-mod utils;
-use borsh::BorshSerialize;
-use eth_types::*;
-use near_primitives::transaction::ExecutionStatus;
-use near_sdk::{testing_env, MockedBlockchain};
-use utils::{
-    get_context, new_root, ntoy, read_block, AddBlockHeaderArgs, AssertEthbridgeHashArgs,
-    ExternalUser, RuntimeStandalone,
-};
-
-fn setup_factory() -> (RuntimeStandalone, ExternalUser) {
-    let (mut r, near) = new_root("near".into());
-    near.init_eth_client(&mut r, "eth-client".to_string(), true)
-        .unwrap();
-    near.init_eth_prover(&mut r, "eth-prover".to_string(), "eth-client".to_string())
-        .unwrap();
-    (r, near)
-}
-
-#[test]
-fn block_hash_safe_from_eth_client() {
-    let (mut r, near) = setup_factory();
-
-    let safe_block = read_block("../eth-client/src/data/10234001.json".to_string());
-    let unsafe_block1 = read_block("../eth-client/src/data/10234002.json".to_string());
-    let unsafe_block2 = read_block("../eth-client/src/data/10234003.json".to_string());
-    for i in 10234002..10234012 {
-        let block = read_block(format!("../eth-client/src/data/{}.json", i));
-        let add_block_header_args = AddBlockHeaderArgs {
-            block_header: block.header(),
-            dag_nodes: block.to_double_node_with_merkle_proof_vec(),
-        };
-        near.function_call(
-            &mut r,
-            "eth-client",
-            "add_block_header",
-            &add_block_header_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    }
-
-    testing_env!(get_context(vec![], false)); // For use rlp::decode, eth_types::near_keccak256
-    let header: BlockHeader = rlp::decode(safe_block.header().as_slice()).unwrap();
-    let assert_ethclient_hash_args = AssertEthbridgeHashArgs {
-        block_number: header.number,
-        expected_block_hash: header.hash.unwrap(),
-    };
-    let res = near
-        .function_call(
-            &mut r,
-            "eth-prover",
-            "assert_ethclient_hash",
-            &assert_ethclient_hash_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    assert_eq!(res.status, ExecutionStatus::SuccessValue(b"\x01".to_vec())); // true
-
-    let header: BlockHeader = rlp::decode(unsafe_block1.header().as_slice()).unwrap();
-    let assert_ethclient_hash_args = AssertEthbridgeHashArgs {
-        block_number: header.number,
-        expected_block_hash: header.hash.unwrap(),
-    };
-    let res = near
-        .function_call(
-            &mut r,
-            "eth-prover",
-            "assert_ethclient_hash",
-            &assert_ethclient_hash_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    assert_eq!(res.status, ExecutionStatus::SuccessValue(b"\x00".to_vec())); // false since block is not 10 block away
-
-    let header: BlockHeader = rlp::decode(unsafe_block2.header().as_slice()).unwrap();
-    let assert_ethclient_hash_args = AssertEthbridgeHashArgs {
-        block_number: header.number,
-        expected_block_hash: header.hash.unwrap(),
-    };
-    let res = near
-        .function_call(
-            &mut r,
-            "eth-prover",
-            "assert_ethclient_hash",
-            &assert_ethclient_hash_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    assert_eq!(res.status, ExecutionStatus::SuccessValue(b"\x00".to_vec())); // false since block is not 10 block away
-
-    let header: BlockHeader = rlp::decode(safe_block.header().as_slice()).unwrap();
-    let assert_ethclient_hash_args = AssertEthbridgeHashArgs {
-        block_number: header.number - 1,
-        expected_block_hash: header.hash.unwrap(),
-    };
-    let res = near
-        .function_call(
-            &mut r,
-            "eth-prover",
-            "assert_ethclient_hash",
-            &assert_ethclient_hash_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    assert_eq!(res.status, ExecutionStatus::SuccessValue(b"\x00".to_vec())); // false since block number is incorrect
-
-    let header: BlockHeader = rlp::decode(safe_block.header().as_slice()).unwrap();
-    let block_number = header.number;
-    let header: BlockHeader = rlp::decode(unsafe_block1.header().as_slice()).unwrap();
-    let assert_ethclient_hash_args = AssertEthbridgeHashArgs {
-        block_number: block_number,
-        expected_block_hash: header.hash.unwrap(),
-    };
-    let res = near
-        .function_call(
-            &mut r,
-            "eth-prover",
-            "assert_ethclient_hash",
-            &assert_ethclient_hash_args.try_to_vec().unwrap(),
-            ntoy(0),
-        )
-        .unwrap();
-    assert_eq!(res.status, ExecutionStatus::SuccessValue(b"\x00".to_vec())); // false since block hash is incorrect
-}
diff --git a/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/utils.rs b/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/utils.rs
deleted file mode 100644
index 8fc4dc7..0000000
--- a/node_modules/rainbow-bridge/contracts/near/eth-prover/tests/utils.rs
+++ /dev/null
@@ -1,402 +0,0 @@
-#![allow(dead_code)]
-use borsh::{BorshDeserialize, BorshSerialize};
-use eth_types::*;
-use hex::FromHex;
-use near_crypto::{InMemorySigner, KeyType, Signer};
-use near_primitives::{
-    account::{AccessKey, Account},
-    errors::{RuntimeError, TxExecutionError},
-    hash::CryptoHash,
-    transaction::{ExecutionOutcome, ExecutionStatus, Transaction},
-    types::{AccountId, Balance},
-};
-use near_runtime_standalone::init_runtime_and_signer;
-pub use near_runtime_standalone::RuntimeStandalone;
-pub use near_sdk::VMContext;
-use serde::{Deserialize, Deserializer};
-
-type TxResult = Result<ExecutionOutcome, ExecutionOutcome>;
-
-#[derive(Debug)]
-pub struct Hex(pub Vec<u8>);
-
-impl<'de> Deserialize<'de> for Hex {
-    fn deserialize<D>(deserializer: D) -> Result<Self, <D as Deserializer<'de>>::Error>
-    where
-        D: Deserializer<'de>,
-    {
-        let mut s = <String as Deserialize>::deserialize(deserializer)?;
-        if s.starts_with("0x") {
-            s = s[2..].to_string();
-        }
-        if s.len() % 2 == 1 {
-            s.insert_str(0, "0");
-        }
-        Ok(Hex(Vec::from_hex(&s).map_err(|err| {
-            serde::de::Error::custom(err.to_string())
-        })?))
-    }
-}
-
-#[derive(BorshSerialize)]
-struct EthClientInitArgs {
-    validate_ethash: bool,
-    dags_start_epoch: u64,
-    dags_merkle_roots: Vec<H128>,
-    first_header: Vec<u8>,
-    hashes_gc_threshold: u64,
-    finalized_gc_threshold: u64,
-    num_confirmations: u64,
-    trusted_signer: Option<AccountId>,
-}
-
-#[derive(BorshSerialize)]
-struct EthProverInitArgs {
-    bridge_smart_contract: AccountId,
-}
-
-fn outcome_into_result(outcome: ExecutionOutcome) -> TxResult {
-    match outcome.status {
-        ExecutionStatus::SuccessValue(_) => Ok(outcome),
-        ExecutionStatus::Failure(_) => Err(outcome),
-        ExecutionStatus::SuccessReceiptId(_) => panic!("Unresolved ExecutionOutcome run runitme.resolve(tx) to resolve the filnal outcome of tx"),
-        ExecutionStatus::Unknown => unreachable!()
-    }
-}
-
-lazy_static::lazy_static! {
-    static ref ETH_PROVER_WASM_BYTES: &'static [u8] = include_bytes!("../../res/eth_prover.wasm").as_ref();
-    static ref ETH_CLIENT_WASM_BYTES: &'static [u8] = include_bytes!("../../res/eth_client.wasm").as_ref();
-}
-
-pub fn ntoy(near_amount: Balance) -> Balance {
-    near_amount * 10u128.pow(24)
-}
-
-pub struct ExternalUser {
-    pub account_id: AccountId,
-    pub signer: InMemorySigner,
-}
-
-impl ExternalUser {
-    pub fn new(account_id: AccountId, signer: InMemorySigner) -> Self {
-        Self { account_id, signer }
-    }
-
-    #[allow(dead_code)]
-    pub fn account_id(&self) -> &AccountId {
-        &self.account_id
-    }
-
-    #[allow(dead_code)]
-    pub fn signer(&self) -> &InMemorySigner {
-        &self.signer
-    }
-
-    pub fn account(&self, runtime: &RuntimeStandalone) -> Account {
-        runtime
-            .view_account(&self.account_id)
-            .expect("Account should be there")
-    }
-
-    pub fn create_external(
-        &self,
-        runtime: &mut RuntimeStandalone,
-        new_account_id: AccountId,
-        amount: Balance,
-    ) -> Result<ExternalUser, ExecutionOutcome> {
-        let new_signer =
-            InMemorySigner::from_seed(&new_account_id, KeyType::ED25519, &new_account_id);
-        let tx = self
-            .new_tx(runtime, new_account_id.clone())
-            .create_account()
-            .add_key(new_signer.public_key(), AccessKey::full_access())
-            .transfer(amount)
-            .sign(&self.signer);
-        let res = runtime.resolve_tx(tx);
-
-        // TODO: this temporary hack, must be rewritten
-        if let Err(err) = res.clone() {
-            if let RuntimeError::InvalidTxError(tx_err) = err {
-                let mut out = ExecutionOutcome::default();
-                out.status = ExecutionStatus::Failure(TxExecutionError::InvalidTxError(tx_err));
-                return Err(out);
-            } else {
-                unreachable!();
-            }
-        } else {
-            outcome_into_result(res.unwrap())?;
-            runtime.process_all().unwrap();
-            Ok(ExternalUser {
-                account_id: new_account_id,
-                signer: new_signer,
-            })
-        }
-    }
-
-    pub fn transfer(
-        &self,
-        runtime: &mut RuntimeStandalone,
-        receiver_id: &str,
-        amount: Balance,
-    ) -> TxResult {
-        let tx = self
-            .new_tx(runtime, receiver_id.to_string())
-            .transfer(amount)
-            .sign(&self.signer);
-        let res = runtime.resolve_tx(tx).unwrap();
-        runtime.process_all().unwrap();
-        outcome_into_result(res)
-    }
-
-    pub fn function_call(
-        &self,
-        runtime: &mut RuntimeStandalone,
-        receiver_id: &str,
-        method: &str,
-        args: &[u8],
-        deposit: u128,
-    ) -> TxResult {
-        let tx = self
-            .new_tx(runtime, receiver_id.to_string())
-            .function_call(method.into(), args.to_vec(), 300000000000000, deposit)
-            .sign(&self.signer);
-        let res = runtime.resolve_tx(tx).unwrap();
-        runtime.process_all().unwrap();
-        outcome_into_result(res)
-    }
-
-    pub fn init_eth_client(
-        &self,
-        runtime: &mut RuntimeStandalone,
-        eth_client_account_id: AccountId,
-        validate_ethash: bool,
-    ) -> TxResult {
-        let block = read_block("../eth-client/src/data/10234001.json".to_string());
-        let init_args = EthClientInitArgs {
-            validate_ethash,
-            dags_start_epoch: 0,
-            dags_merkle_roots: read_roots_collection().dag_merkle_roots,
-            first_header: block.header(),
-            hashes_gc_threshold: 400000,
-            finalized_gc_threshold: 500,
-            num_confirmations: 10,
-            trusted_signer: None,
-        };
-        let tx = self
-            .new_tx(runtime, eth_client_account_id)
-            .create_account()
-            .transfer(ntoy(30))
-            .deploy_contract(ETH_CLIENT_WASM_BYTES.to_vec())
-            .function_call(
-                "init".into(),
-                init_args.try_to_vec().unwrap(),
-                1000000000000000,
-                0,
-            )
-            .sign(&self.signer);
-        let res = runtime.resolve_tx(tx).unwrap();
-        runtime.process_all().unwrap();
-        outcome_into_result(res)
-    }
-
-    pub fn init_eth_prover(
-        &self,
-        runtime: &mut RuntimeStandalone,
-        eth_prover_account_id: AccountId,
-        eth_client_account_id: AccountId,
-    ) -> TxResult {
-        let init_args = EthProverInitArgs {
-            bridge_smart_contract: eth_client_account_id,
-        };
-        let tx = self
-            .new_tx(runtime, eth_prover_account_id)
-            .create_account()
-            .transfer(ntoy(30))
-            .deploy_contract(ETH_PROVER_WASM_BYTES.to_vec())
-            .function_call(
-                "init".into(),
-                init_args.try_to_vec().unwrap(),
-                1000000000000000,
-                0,
-            )
-            .sign(&self.signer);
-        let res = runtime.resolve_tx(tx).unwrap();
-        runtime.process_all().unwrap();
-        outcome_into_result(res)
-    }
-
-    fn new_tx(&self, runtime: &RuntimeStandalone, receiver_id: AccountId) -> Transaction {
-        let nonce = runtime
-            .view_access_key(&self.account_id, &self.signer.public_key())
-            .unwrap()
-            .nonce
-            + 1;
-        Transaction::new(
-            self.account_id.clone(),
-            self.signer.public_key(),
-            receiver_id,
-            nonce,
-            CryptoHash::default(),
-        )
-    }
-}
-
-pub fn new_root(account_id: AccountId) -> (RuntimeStandalone, ExternalUser) {
-    let (runtime, signer) = init_runtime_and_signer(&account_id);
-    (runtime, ExternalUser { account_id, signer })
-}
-
-fn read_roots_collection() -> RootsCollection {
-    read_roots_collection_raw().into()
-}
-
-fn read_roots_collection_raw() -> RootsCollectionRaw {
-    serde_json::from_reader(
-        std::fs::File::open(std::path::Path::new(
-            "../eth-client/src/data/dag_merkle_roots.json",
-        ))
-        .unwrap(),
-    )
-    .unwrap()
-}
-
-#[derive(Debug, Deserialize)]
-struct RootsCollectionRaw {
-    pub dag_merkle_roots: Vec<Hex>, // H128
-}
-
-#[derive(Debug, Deserialize)]
-pub struct RootsCollection {
-    pub dag_merkle_roots: Vec<H128>,
-}
-
-impl From<RootsCollectionRaw> for RootsCollection {
-    fn from(item: RootsCollectionRaw) -> Self {
-        Self {
-            dag_merkle_roots: item
-                .dag_merkle_roots
-                .iter()
-                .map(|e| H128::from(&e.0))
-                .collect(),
-        }
-    }
-}
-
-pub fn read_block(filename: String) -> BlockWithProofs {
-    read_block_raw(filename).into()
-}
-
-fn read_block_raw(filename: String) -> BlockWithProofsRaw {
-    serde_json::from_reader(std::fs::File::open(std::path::Path::new(&filename)).unwrap()).unwrap()
-}
-
-#[derive(Debug, Deserialize)]
-struct BlockWithProofsRaw {
-    pub proof_length: u64,
-    pub header_rlp: Hex,
-    pub merkle_root: Hex,        // H128
-    pub elements: Vec<Hex>,      // H256
-    pub merkle_proofs: Vec<Hex>, // H128
-}
-
-#[derive(Debug, Deserialize)]
-pub struct BlockWithProofs {
-    pub proof_length: u64,
-    pub header_rlp: Hex,
-    pub merkle_root: H128,
-    pub elements: Vec<H256>,
-    pub merkle_proofs: Vec<H128>,
-}
-
-impl From<BlockWithProofsRaw> for BlockWithProofs {
-    fn from(item: BlockWithProofsRaw) -> Self {
-        Self {
-            proof_length: item.proof_length,
-            header_rlp: item.header_rlp,
-            merkle_root: H128::from(&item.merkle_root.0),
-            elements: item.elements.iter().map(|e| H256::from(&e.0)).collect(),
-            merkle_proofs: item
-                .merkle_proofs
-                .iter()
-                .map(|e| H128::from(&e.0))
-                .collect(),
-        }
-    }
-}
-
-#[derive(Default, Debug, Clone, BorshDeserialize, BorshSerialize)]
-pub struct DoubleNodeWithMerkleProof {
-    pub dag_nodes: Vec<H512>, // [H512; 2]
-    pub proof: Vec<H128>,
-}
-
-#[derive(BorshSerialize)]
-pub struct AddBlockHeaderArgs {
-    pub block_header: Vec<u8>,
-    pub dag_nodes: Vec<DoubleNodeWithMerkleProof>,
-}
-
-impl BlockWithProofs {
-    pub fn header(&self) -> Vec<u8> {
-        self.header_rlp.0.clone()
-    }
-
-    fn combine_dag_h256_to_h512(elements: Vec<H256>) -> Vec<H512> {
-        elements
-            .iter()
-            .zip(elements.iter().skip(1))
-            .enumerate()
-            .filter(|(i, _)| i % 2 == 0)
-            .map(|(_, (a, b))| {
-                let mut buffer = [0u8; 64];
-                buffer[..32].copy_from_slice(&(a.0).0);
-                buffer[32..].copy_from_slice(&(b.0).0);
-                H512(buffer.into())
-            })
-            .collect()
-    }
-
-    pub fn to_double_node_with_merkle_proof_vec(&self) -> Vec<DoubleNodeWithMerkleProof> {
-        let h512s = Self::combine_dag_h256_to_h512(self.elements.clone());
-        h512s
-            .iter()
-            .zip(h512s.iter().skip(1))
-            .enumerate()
-            .filter(|(i, _)| i % 2 == 0)
-            .map(|(i, (a, b))| DoubleNodeWithMerkleProof {
-                dag_nodes: vec![*a, *b],
-                proof: self.merkle_proofs
-                    [i / 2 * self.proof_length as usize..(i / 2 + 1) * self.proof_length as usize]
-                    .to_vec(),
-            })
-            .collect()
-    }
-}
-
-#[derive(BorshSerialize)]
-pub struct AssertEthbridgeHashArgs {
-    pub block_number: u64,
-    pub expected_block_hash: H256,
-}
-
-pub fn get_context(input: Vec<u8>, is_view: bool) -> VMContext {
-    VMContext {
-        current_account_id: "alice.near".to_string(),
-        signer_account_id: "bob.near".to_string(),
-        signer_account_pk: vec![0, 1, 2],
-        predecessor_account_id: "carol.near".to_string(),
-        input,
-        block_index: 0,
-        block_timestamp: 0,
-        account_balance: 0,
-        account_locked_balance: 0,
-        epoch_height: 0,
-        storage_usage: 0,
-        attached_deposit: 0,
-        prepaid_gas: 10u64.pow(18),
-        random_seed: vec![0, 1, 2],
-        is_view,
-        output_data_receivers: vec![],
-    }
-}
diff --git a/node_modules/rainbow-bridge/docs/README.md b/node_modules/rainbow-bridge/docs/README.md
deleted file mode 100644
index 5eabd37..0000000
--- a/node_modules/rainbow-bridge/docs/README.md
+++ /dev/null
@@ -1,10 +0,0 @@
-# Rainbow Bridge
-
-This documentation is about design, usage, maintenance, and testing of the NEAR-ETH bridge.
-
-* [Overview of the components](./components.md)
-* [Standard workflows](./workflows/README.md)
-  * [Transferring Ethereum ERC20 to Near](./workflows/eth2near-fun-transfer.md)
-
-
-To see the explanation of each individual CLI please use `--help`.
diff --git a/node_modules/rainbow-bridge/docs/address-watcher.md b/node_modules/rainbow-bridge/docs/address-watcher.md
deleted file mode 100644
index 920ed48..0000000
--- a/node_modules/rainbow-bridge/docs/address-watcher.md
+++ /dev/null
@@ -1,33 +0,0 @@
-# Address monitoring
-
-To monitor state of the accounts on NEAR and Ethereum side use `address-watcher` service. To start it run:
-
-```
-node cli/index.js start address-watcher --monitor-accounts-path monitor.json --metrics-port 8004
-```
-
-Accounts used by the bridge are monitored by default, to monitor extra accounts make sure to properly populate `monitor.json` file. Following is an example (`monitor.json` used for `ropsten` / `testnet` bridge):
-
-```json
-{
-    "near": [
-        {
-            "id": "32c63ce502d72367c6cc1cf0d0e16f07675587ab.f290121.ropsten.testnet",
-            "name": "erc20_on_near_default",
-            "description": "erc20 on near using TToken"
-        },
-        {
-            "id": "f290121.ropsten.testnet",
-            "name": "near_token_factory",
-            "description": "near token factory"
-        }
-    ],
-    "ethereum": [
-        {
-            "address": "0xa5289b6d5dcc13e48f2cc6382256e51589849f86",
-            "name": "eth_erc20_locker",
-            "description": "ethereum erc20 locker"
-        }
-    ]
-}
-```
diff --git a/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.md b/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.md
deleted file mode 100644
index 1b652c6..0000000
--- a/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.md
+++ /dev/null
@@ -1,3 +0,0 @@
-The following is the sequence diagram representing the sequence of invocations that happens when we transfer ERC20 token from ETH blockchain to NEAR blockchain.
-
-![eth2near-fun-transfer](eth2near-fun-transfer.png)
diff --git a/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.png b/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.png
deleted file mode 100644
index 6547f35..0000000
Binary files a/node_modules/rainbow-bridge/docs/workflows/eth2near-fun-transfer.png and /dev/null differ
diff --git a/node_modules/rainbow-bridge/eth2near/ethashproof/.gitignore b/node_modules/rainbow-bridge/eth2near/ethashproof/.gitignore
deleted file mode 100644
index cd09ff7..0000000
--- a/node_modules/rainbow-bridge/eth2near/ethashproof/.gitignore
+++ /dev/null
@@ -1,14 +0,0 @@
-# Binaries for programs and plugins
-*.exe
-*.exe~
-*.dll
-*.so
-*.dylib
-
-# Test binary, build with `go test -c`
-*.test
-
-# Output of the go coverage tool, specifically when used with LiteIDE
-*.out
-
-ethashproof
diff --git a/node_modules/rainbow-bridge/eth2near/ethashproof/Readme.md b/node_modules/rainbow-bridge/eth2near/ethashproof/Readme.md
deleted file mode 100644
index 34ba323..0000000
--- a/node_modules/rainbow-bridge/eth2near/ethashproof/Readme.md
+++ /dev/null
@@ -1,141 +0,0 @@
-# Ethash proof - Command line to calculate ethash (ethereum POW) merkle proof
-
-Ethashproof is a commandline to calculate proof data for an ethash POW, it is used by project `SmartPool` and a decentralized
-bridge between Etherum and EOS developed by Kyber Network team.
-
-## Features
-
-1. Calculate merkle root of the ethash dag dataset with given epoch
-2. Calculate merkle proof of the pow (dataset elements and their merkle proofs) given the pow submission with given block header
-3. Generate dag dataset
-
-## Installation
-
-1. Install go1.11.2 (https://golang.org/doc/install#install)
-2. Run export GO111MODULE=on 
-3. Run `./build.sh`
-
-## Usage
-
-`ethashproof` comes with 3 tools:
-1. `cmd/epoch/epoch` which calculate merkle root for epochs from [0, 512)
-2. `cmd/relayer/relayer` which accepts block number to calculate all necessary information in order to prove the block
-3. `cmd/cache/cache` which calculate cache merkle tree for an epoch
-
-### The output
-
-When you run `cmd/epoch/epoch`, it will print:
-1. Merkle root of the DAG dataset
-
-When you run `cmd/relayer/relayer`, it will print a json containing following information:
-
-1. RLP encoding of the block header
-2. Merkle root of the DAG dataset
-3. An array of DAG dataset element arrays (that were used in ethash POW). The array is flatten. (Check DAG data element encoding section)
-4. An array of all merkle proofs for all of the elements above (check Merkle audit proof encoding section)
-5. Length of the proof for a DAG dataset element
-
-*note: the first time you run `relayer` for a blockno corresponding to a new epoch, `relayer` will take several minutes to generate the DAG dataset and calculate everything as well as preparing the cache in order to improve its performance in next runs. It is recommended to run `epoch` for future epoches so it can prepare everything beforehand.*
-
-## Explanations
-
-### Merkle tree in ethashproof
-
-In `ethashproof`, we construct a merkle tree out of ethash DAG dataset in order to get merkle root
-of the dataset and get merkle proof for any specific dataset element.
-Each DAG dataset is a sequence of many 128 bytes dataset elements, denoted as:
-```
-e0, e1, e2, ..., en
-```
-
-#### Merkle tree explanation
-
-The merkle tree is constructed in the following way:
-
-- Step 1: Calculate hash of each element using `elementhash` function. We would have:
-```
-h00, h01, h02, h03, ..., h0n
- |    |    |    |   ...   |
-e0,  e1,  e2,  e3,  ..., en
-```
-where `h01` means hash at level 0, element 1. The hash is 32 bytes.
-
-- Step 2: In this step, set the `working level` to 0.
-calculate `h10 = hash(h00, h01)`, `h11 = hash(h02, h03)`, ...
-if at the end of the level, there is only one element left, we duplicate it and calculate the hash out of them, eg. `h0x = hash(h0x*2, h0x*2)`
-```
-   h10       h11    ...  h1n/2
-  /  \      /  \           /  \
-h00, h01, h02, h03, ..., h0n  h0n
- |    |    |    |   ...   |
-e0,  e1,  e2,  e3,  ..., en
-```
-
-- Step 3: Increase `working level` by 1 and go back to Step 2 until there is only 1 element in the working level. That element is the merkle root.
-```
-            merkle root
-                .
-              .....
-            ..........
-          ...............
-        h20         ...  h2n/4
-      /     \          /   |
-   h10       h11    ...  h1n/2
-  /  \      /  \           /  \
-h00, h01, h02, h03, ..., h0n  h0n
- |    |    |    |   ...   |
-e0,  e1,  e2,  e3,  ..., en
-```
-
-#### Hash function
-0. Given `sha256(bytes) => bytes` is a function to hash an array of bytes
-1. Hash function for data element(`elementhash`)
-`elementhash` returns 16 bytes hash of the dataset element.
-```
-function elementhash(data) => 16bytes {
-  h = sha256(conventional(data)) // conventional function is defined in dataset element encoding section
-  return last16Bytes(h)
-}
-```
-
-2. Hash function for 2 sibling nodes (`hash`)
-`hash` returns 16 bytes hash of 2 consecutive elements in a working level.
-```
-function hash(a, b) => 16bytes {
-  h = sha256(zeropadded(a), zeropadded(b)) // where zeropadded function prepend 16 bytes of 0 to its param	  h = sha256(a, b) // where a, b are 32bytes
-  return last16Bytes(h)
-}
-```
-
-#### Conventional encoding
-
-To make it easier for ethereum smartcontract to follow the hash calculation, we use a convention to encode DAG dataset element
-to use in hash function. The encoding is defined as the following pseudo code:
-
-1. assume the element is `abcd` where a, b, c, d are 32 bytes word
-2. `first = concat(reverse(a), reverse(b))` where `reverse` reverses the bytes
-3. `second = concat(reverse(c), reverse(d))`
-4. conventional encoding of `abcd` is `concat(first, second)`
-
-#### Dataset element encoding
-
-In order to make it easy (and gas saving) for ethereum smart contract (the earliest contract we used to verify the proof) to work with the
-dataset element, `ethashproof` outputs a DAG dataset element as an array of 32 bytes word, the word is little endian.
-
-#### Merkle audit proof
-
-Please read more on http://www.certificate-transparency.org/log-proofs-work.
-
-#### Merkle audit proof encoding
-
-For a DAG dataset element, there is a list of hashes (the proof) to prove its existence. In `ethashproof`, we dont include dataset element's hash	
-and the merkle root in the proof and format it in the following rules
-
-1. assume the hashes are: `[h0, h1, h2, h3, ..., hn]` where `hi` is 16 bytes.
-2. if n is odd, append a 16 bytes number of 0.
-3. reorder the hashes to: `[h1, h0, h3, h2, ...]`
-4. concatenate 2 consecutive hashes into one 32 bytes word so that the hashes becomes `[h1h0, h3h2, ...]`
-
-In the output of `ethashproof`, all proofs of the elements are included in order in 1 array so that the proof
-of dataset element 0 will be at the beginning of the array and element n's will be at the end. You will have to
-determine the boundary of each proof yourself.
